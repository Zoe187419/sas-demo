

 /*--------------------------------------------------------------------     */
 /* SAS(R) Survival Analysis Techniques for Medical Research, Second Edition*/
 /*                        by Dr. Alan B. Cantor                            */
 /*       Copyright(c) 2003 by SAS Institute Inc., Cary, NC, USA            */
 /*                   SAS Publications order # 58416                        */
 /*                        ISBN 1-59047-135-0                               */
 /*-------------------------------------------------------------------------*/
 /*                                                                         */
 /* This material is provided "as is" by SAS Institute Inc. and the         */
 /* author. There are no warranties, express or implied, as to              */  
 /* merchantability or fitness for a particular purpose regarding the       */
 /* materials or code contained herein. Neither the Institute nor the       */
 /* author is responsible for errors in this material as it now exists      */
 /* or will exist, nor does the Institute or author provide technical       */
 /* support for it.                                                         */
 /*-------------------------------------------------------------------------*/
 /* Date Last Updated: 09Feb07                                              */
 /*-------------------------------------------------------------------------*/                                                                        */
 /* Questions or problem reports concerning this material may be            */
 /* addressed to the author:                                                */
 /*                                                                         */
 /* SAS Institute Inc.                                                      */
 /* Books by Users                                                          */
 /* Attn: Alan Cantor, Ph.D.                                                */
 /* SAS Campus Drive                                                        */
 /* Cary, NC   27513                                                        */
 /*                                                                         */
 /*                                                                         */
 /* If you prefer, you can send email to:  sasbbu@sas.com                   */
 /* Use this for subject field: Comments for Alan Cantor                    */
 /*                                                                         */
 /*-------------------------------------------------------------------------*/

This file contains data sets, example code, and macro code used in the
book, "SAS(R) Survival Analysis Techniques for Medical
Research, Second Edition" by Alan B. Cantor, Ph.D.  The file lists, in order,

-- data sets used in the book
-- example code used in the book
-- macros used in the book

*************************************************************************
*************************************************************************

DATA SETS USED IN THIS BOOK

***************************************************
/* The following data set is given on page 29,    */ 
/* where it is used to produce output 2.1 and 2.2 */  
***************************************************


data leuk; 
input time d @@;
datalines;
0.0493 1   0.2849 1   0.4082 1   0.8767 1   0.8877 1   1.1233 1 1.2247 0   1.3753 1   1.5425 1   1.5836 1   1.7397 1   1.7589 1  1.7726 1   1.9233 1   1.9562 0   2.0493 1   2.2986 1   2.3425 1  3.7315 1   4.0548 1   4.0685 0   4.5863 1   4.9534 1   5.1534


 

0  5.7315 0   5.8493 1   5.8685 1   6.0712 0   6.1151 0   7.3781 0  7.6630 0   8.0438 0   8.1890 0   8.2055 0   8.2548 0   8.4274 0  8.4521 0   8.7589 0   9.0356 0   9.8959 0   9.9151 0   9.9178 0  10.1151 0  10.4027 0  10.6000 0  10.6603 1  10.6685 0  10


.

7260 0 10.9260 0  10.9370 0  11.2027 0  11.4548 0  11.4712 0  11.5589 0 11.6082 0  11.6164 0  11.6521 0  11.7123 0  11.7671 0  11.8466 0 11.8575 0  11.8685 0  11.9863 0  12.0082 0
;


***************************************************
/* The following data set is described on page 45,*/ 
/* where it is used to produce output 2.8         */  
***************************************************

data; 
input l r;
datalines
                         0.0000     0.0493
                         0.0000     0.2849
                         0.0000     0.4082                         
                         0.0517     0.8767
                         0.0627     0.8877
                         0.2983     1.1233
                         1.2247    15.0000
                         0.5503     1.3753
                         0.7175     1.5425
                         0.7586     1.5836
                         0.9147     1.7397
                         0.9339     1.7589
                         0.9476     1.7726
                         1.0983     1.9233
                         1.9562    15.0000
                         1.2243     2.0493
                         1.4736     2.2986
                         1.5175     2.3425
                         2.9065     3.7315
                         3.2298     4.0548
                         4.0685    15.0000
                         3.7613     4.5863
                         4.1284     4.9534
                         5.1534    15.0000
                         5.7315    15.0000
                         5.0243     5.8493
                         5.0435     5.8685
                         6.0712    15.0000
                         6.1151    15.0000
                         7.3781    15.0000
                         7.6630    15.0000
                         8.0438    15.0000
                         8.1890    15.0000
                         8.2548    15.0000
                         8.4274    15.0000
                         8.4521    15.0000
                         8.7589    15.0000
                         9.0356    15.0000
                         9.8959    15.0000
                         9.9151    15.0000
                         9.9178    15.0000
                        10.1151    15.0000
                        10.4027    15.0000
                        10.6000    15.0000
                         9.8353    10.6603
                        10.6685    15.0000
                        10.7260    15.0000
                        10.9260    15.0000
                        10.9370    15.0000
                        11.2027    15.0000
                        11.4548    15.0000
                        11.4712    15.0000
                        11.5589    15.0000
                        11.6082    15.0000
                        11.6164    15.0000
                        11.6521    15.0000
                        11.7123    15.0000
                        11.7671    15.0000
                        11.8466    15.0000
                        11.8575    15.0000
                        11.8685    15.0000
                        11.9863    15.0000
                        12.0082    15.0000
;

                          


***************************************************
/* The following data set is mentioned on page 60,*/ 
/* where it is used to produce output 3.1-3.4. It */
/* is also needed for exercise 3.6.1              */
***************************************************


data breast;
    input @1 stage $3. @9 cens @17 years @33 agegrp $5.;
    datalines;
        0       0.0465434634    80+
        0       8.3093771389    0-59
        0       7.0499657769    0-59
        0       2.2614647502    0-59
        0       0.3449691992    0-59
        0       0.4216290212    0-59
        0       0.0273785079    60-69
        0       2.2094455852    60-69
        0       3.5838466804    70-79
        0       0               70-79
        0       0.0164271047    70-79
        0       0.1533196441    70-79
        0       4.3066392882    70-79
        0       2.3627652293    70-79
        1       1.4976043806    80+
        1       0.4517453799    80+
0       0       8.1368925394    0-59
0       0       2.9185489391    0-59
0       0       5.7522245038    0-59
0       0       1.054072553     80+
0       0       1.9438740589    0-59
0       0       5.5359342916    0-59
0       0       5.0102669405    0-59
0       0       4.4982888433    0-59
0       0       2.4449007529    0-59
0       0       1.7850787132    0-59
0       0       6.7241615332    60-69
0       0       1.3305954825    60-69
0       0       0.1368925394    60-69
0       0       7.4332648871    70-79
0       0       2.1409993155    70-79
0       0       1.5660506502    80+
0       0       9.1498973306    0-59
0       0       6.9678302533    0-59
0       0       7.0554414784    0-59
0       0       6.6694045175    0-59
0       0       7.279945243     0-59
0       0       6.9240246407    0-59
0       1       5.5906913073    0-59
0       0       7.0746064339    0-59
0       0       7.1813826146    0-59
0       0       6.8473648186    0-59
0       0       6.6830937714    0-59
0       0       6.1409993155    0-59
0       0       5.7796030116    0-59
0       0       5.5441478439    0-59
0       0       5.0239561944    0-59
0       0       5.1745379877    0-59
0       0       5.6673511294    0-59
0       0       5.5003422313    0-59
0       0       5.5605749487    0-59
0       0       5.8836413415    0-59
0       0       5.3963039014    0-59
0       0       5.2156057495    0-59
0       0       4.9500342231    0-59
0       0       5.0349075975    0-59
0       0       5.492128679     0-59
0       0       4.900752909     0-59
0       0       4.9336071184    0-59
0       0       4.9363449692    0-59
0       0       2.2395619439    0-59
0       0       4.3668720055    0-59
0       0       4.4298425736    0-59
0       0       3.3785078713    0-59
0       0       3.8877481177    0-59
0       0       3.832991102     0-59
0       0       4.0109514031    0-59
0       0       4.4188911704    0-59
0       0       3.0280629706    0-59
0       0       4.3997262149    0-59
0       0       2.6611909651    0-59
0       0       3.9425051335    0-59
0       0       3.5509924709    0-59
0       0       4.0876112252    0-59
0       0       3.1403148528    0-59
0       0       3.0691307324    0-59
0       0       3.1019849418    0-59
0       0       2.8911704312    0-59
0       0       2.1629021218    0-59
0       0       2.3134839151    0-59
0       0       2.6967830253    0-59
0       0       2.2450376454    0-59
0       0       2.2450376454    0-59
0       0       1.5797399042    0-59
0       0       1.8945927447    0-59
0       0       1.8754277892    0-59
0       0       1.9247091034    0-59
0       0       1.3990417522    0-59
0       0       1.87816564      0-59
0       0       0.9582477755    0-59
0       0       0.8898015058    0-59
0       0       1.9055441478    0-59
0       0       1.3278576318    0-59
0       0       1.1143052704    0-59
0       0       1.3470225873    0-59
0       0       1.1718001369    0-59
0       0       0.9938398357    0-59
0       0       0.2874743326    0-59
0       0       0.1724845996    0-59
0       0       0.5201916496    0-59
0       0       0.4188911704    0-59
0       0       0.2409308693    0-59
0       0       0.4161533196    0-59
0       0       0.3805612594    0-59
0       0       0.3668720055    0-59
0       0       0.1861738535    0-59
0       0       0.205338809     0-59
0       0       0.3778234086    0-59
0       0       8.5174537988    0-59
0       0       3.5838466804    0-59
0       0       0.4298425736    0-59
0       0       6.3244353183    0-59
0       0       4.0848733744    0-59
0       0       4.5503080082    0-59
0       0       8.553045859     60-69
0       0       8.3258042437    60-69
0       0       7.5181382615    60-69
0       0       6.5133470226    60-69
0       0       6.9185489391    60-69
0       0       6.2176591376    60-69
0       0       6.2833675565    60-69
0       0       6.4120465435    60-69
0       0       5.9767282683    60-69
0       0       5.0349075975    60-69
0       0       5.0595482546    60-69
0       0       5.3004791239    60-69
0       0       5.1170431211    60-69
0       0       5.0513347023    60-69
0       0       4.9637234771    60-69
0       0       4.3915126626    60-69
0       0       3.9370294319    60-69
0       0       4.5804243669    60-69
0       0       3.6741957563    60-69
0       0       3.4798083504    60-69
0       0       4.5065023956    60-69
0       0       2.9295003422    60-69
0       0       3.0006844627    60-69
0       1       1.3360711841    60-69
0       0       3.5290896646    60-69
0       0       2.9158110883    60-69
0       0       2.7953456537    60-69
0       0       1.9739904175    60-69
0       0       2.3299110198    60-69
0       0       2.0150581793    60-69
0       0       2.1163586585    60-69
0       0       1.7850787132    60-69
0       0       1.582477755     60-69
0       0       1.6454483231    60-69
0       0       1.2292950034    60-69
0       0       1.0568104038    60-69
0       0       1.5578370979    60-69
0       0       1.1416837782    60-69
0       0       1.1498973306    60-69
0       0       1.106091718     60-69
0       0       0.93908282      60-69
0       0       1.1033538672    60-69
0       0       0.0793976728    60-69
0       0       0.3394934976    60-69
0       0       0.3093771389    60-69
0       0       0.1368925394    60-69
0       0       0.4134154689    60-69
0       0       0.295687885     60-69
0       0       0.4024640657    60-69
0       0       7.1676933607    60-69
0       0       6.2997946612    60-69
0       0       3.485284052     60-69
0       1       2.2149212868    60-69
0       0       1.7221081451    60-69
0       0       8.4955509925    70-79
0       0       8.0821355236    70-79
0       1       5.6016427105    70-79
0       0       6.855578371     70-79
0       0       7.4004106776    70-79
0       0       6.507871321     70-79
0       0       6.3299110198    70-79
0       0       5.9520876112    70-79
0       0       5.4428473648    70-79
0       0       6.2286105407    70-79
0       0       5.1279945243    70-79
0       0       4.295687885     70-79
0       0       4.0273785079    70-79
0       0       4.3449691992    70-79
0       0       4.6105407255    70-79
0       0       3.2553045859    70-79
0       0       3.1567419576    70-79
0       0       3.2470910335    70-79
0       0       2.6776180698    70-79
0       0       2.7049965777    70-79
0       0       2.546201232     70-79
0       0       2.1793292266    70-79
0       0       1.8754277892    70-79
0       0       1.5167693361    70-79
0       0       1.1663244353    70-79
0       0       1.0266940452    70-79
0       0       0.9199178645    70-79
0       0       1.1663244353    70-79
0       0       0.2108145106    70-79
0       0       6.9404517454    80+
0       0       5.3771389459    80+
0       0       4.9281314168    80+
0       0       2.160164271     80+
0       0       0.476386037     80+
0       0       0.2080766598    80+
I       0       5.8370978782    0-59
I       0       1.1909650924    0-59
I       0       0.1861738535    70-79
I       0       4.3258042437    80+
I       0       6.173853525     0-59
I       0       0.3997262149    0-59
I       0       6.1902806297    70-79
I       0       4.4052019165    0-59
I       0       1.2375085558    0-59
I       1       4.3039014374    0-59
I       0       5.8288843258    0-59
I       1       3.5263518138    0-59
I       0       0.9637234771    0-59
I       0       6.2094455852    60-69
I       0       3.909650924     60-69
I       0       7.7399041752    60-69
I       1       2.4832306639    60-69
I       0       1.4483230664    60-69
I       0       0.2327173169    70-79
I       0       5.0951403149    70-79
I       0       0.1122518823    70-79
I       0       8.1451060917    0-59
I       0       7.9452429843    0-59
I       1       4.3696098563    0-59
I       0       1.9958932238    0-59
I       1       1.9329226557    0-59
I       0       8.0821355236    0-59
I       0       6.6639288159    0-59
I       0       6.9815195072    0-59
I       0       6.6858316222    0-59
I       0       6.5434633812    0-59
I       0       1.4592744695    0-59
I       0       6.7214236824    0-59
I       0       5.4592744695    0-59
I       0       5.8480492813    0-59
I       0       5.620807666     0-59
I       0       4.6105407255    0-59
I       0       4.7255304586    0-59
I       0       4.4106776181    0-59
I       0       4.6023271732    0-59
I       0       4.4709103354    0-59
I       0       3.9151266256    0-59
I       1       3.7234770705    0-59
I       0       4.4079397673    0-59
I       0       4.2765229295    0-59
I       0       3.6331279945    0-59
I       0       3.2470910335    0-59
I       0       2.6228610541    0-59
I       0       3.0965092402    0-59
I       0       2.9404517454    0-59
I       0       3.0773442847    0-59
I       0       2.9130732375    0-59
I       0       2.3983572895    0-59
I       0       2.0314852841    0-59
I       0       1.7275838467    0-59
I       0       2.0287474333    0-59
I       0       2.0095824778    0-59
I       0       2.0862422998    0-59
I       0       2.5544147844    0-59
I       0       1.1197809719    0-59
I       0       1.2156057495    0-59
I       0       1.2073921971    0-59
I       0       0.7775496235    0-59
I       0       1.4592744695    0-59
I       0       0.9144421629    0-59
I       0       0.3230663929    0-59
I       0       1.0130047912    0-59
I       0       0.2327173169    0-59
I       0       0.5119780972    0-59
I       0       0.386036961     0-59
I       0       0.3449691992    0-59
I       0       0.2929500342    0-59
I       0       0.3832991102    0-59
I       0       0.3230663929    0-59
I       0       0.2874743326    0-59
I       0       0.4572210815    0-59
I       0       0.3258042437    0-59
I       0       0.2929500342    0-59
I       0       0.4134154689    0-59
I       0       7.4277891855    0-59
I       0       6.6721423682    0-59
I       0       7.8932238193    0-59
I       0       6.9240246407    0-59
I       0       6.984257358     0-59
I       0       6.1683778234    0-59
I       0       6.3901437372    0-59
I       0       6.9349760438    0-59
I       0       5.7056810404    0-59
I       0       5.7467488022    0-59
I       0       5.3442847365    0-59
I       0       5.568788501     0-59
I       0       5.2511978097    0-59
I       0       5.3415468857    0-59
I       0       3.3839835729    0-59
I       0       4.1834360027    0-59
I       0       3.356605065     0-59
I       0       3.4551676934    0-59
I       0       3.0663928816    0-59
I       0       2.9212867899    0-59
I       0       2.71321013      0-59
I       0       2.4859685147    0-59
I       0       2.5407255305    0-59
I       0       2.855578371     0-59
I       0       3.0088980151    0-59
I       0       1.7823408624    0-59
I       0       1.5934291581    0-59
I       0       0.1396303901    0-59
I       0       1.5359342916    0-59
I       0       1.1115674196    0-59
I       0       1.9438740589    0-59
I       0       0.8624229979    0-59
I       0       1.4976043806    0-59
I       0       1.0513347023    0-59
I       0       1.054072553     0-59
I       0       0.4955509925    0-59
I       0       0.2327173169    0-59
I       0       0.1697467488    0-59
I       0       0.386036961     0-59
I       0       0.2874743326    0-59
I       0       0.372347707     0-59
I       0       0.3696098563    0-59
I       0       0.3011635866    0-59
I       0       0.3641341547    0-59
I       0       0.4544832307    0-59
I       0       8.2628336756    0-59
I       0       8.5119780972    0-59
I       1       5.1197809719    0-59
I       0       7.819301848     0-59
I       0       7.8740588638    0-59
I       0       7.0554414784    0-59
I       0       6.9678302533    0-59
I       0       8.0438056126    0-59
I       0       7.4195756331    0-59
I       0       7.5865845311    0-59
I       0       7.0527036277    0-59
I       0       6.7816563997    0-59
I       0       6.4257357974    0-59
I       0       5.5770020534    0-59
I       0       6.135523614     0-59
I       0       5.6700889802    0-59
I       0       5.4483230664    0-59
I       0       5.054072553     0-59
I       0       5.4072553046    0-59
I       0       4.8323066393    0-59
I       1       2.5516769336    0-59
I       0       4.8624229979    0-59
I       0       5.1115674196    0-59
I       0       4.5968514716    0-59
I       0       2.8199863107    0-59
I       0       5.0184804928    0-59
I       0       4.0136892539    0-59
I       0       4.810403833     0-59
I       0       4.0438056126    0-59
I       0       4.1368925394    0-59
I       0       4.2409308693    0-59
I       0       4.0492813142    0-59
I       0       3.1841204654    0-59
I       0       3.1868583162    0-59
I       0       3.0472279261    0-59
I       1       1.4264202601    0-59
I       0       2.4339493498    0-59
I       0       3.0444900753    0-59
I       0       2.7515400411    0-59
I       0       2.4476386037    0-59
I       0       2.3901437372    0-59
I       0       2.2450376454    0-59
I       0       2.6201232033    0-59
I       0       2.71321013      0-59
I       0       2.3134839151    0-59
I       0       2.1136208077    0-59
I       0       2.507871321     0-59
I       0       2.0396988364    0-59
I       0       1.8425735797    0-59
I       0       2.2039698836    0-59
I       0       2.2970568104    0-59
I       0       1.787816564     0-59
I       0       1.8015058179    0-59
I       0       2.0670773443    0-59
I       0       1.8945927447    0-59
I       0       2.1683778234    0-59
I       0       1.18275154      0-59
I       0       1.9520876112    0-59
I       0       1.9520876112    0-59
I       0       1.5770020534    0-59
I       0       1.1663244353    0-59
I       0       1.1362080767    0-59
I       0       1.1088295688    0-59
I       0       1.1307323751    0-59
I       0       1.3497604381    0-59
I       0       1.4428473648    0-59
I       0       1.0212183436    0-59
I       0       1.0102669405    0-59
I       0       0.3312799452    0-59
I       0       0.8678986995    0-59
I       0       0.2984257358    0-59
I       0       0.7501711157    0-59
I       0       0.4955509925    0-59
I       0       0.3011635866    0-59
I       0       0.3641341547    0-59
I       0       0.2792607803    0-59
I       0       0.295687885     0-59
I       0       0.7419575633    0-59
I       0       0.2436687201    0-59
I       0       0.3942505133    0-59
I       0       0.3230663929    0-59
I       0       0.3449691992    0-59
I       0       0.2929500342    0-59
I       0       0.3258042437    0-59
I       0       7.961670089     0-59
I       0       6.9404517454    0-59
I       0       6.4394250513    0-59
I       0       6.6064339493    0-59
I       0       0.8952772074    0-59
I       0       4.205338809     0-59
I       0       6.0561259411    0-59
I       0       5.5277207392    0-59
I       0       6.4394250513    0-59
I       0       5.9000684463    0-59
I       0       5.5961670089    0-59
I       0       5.9603011636    0-59
I       0       5.8507871321    0-59
I       0       5.7549623546    0-59
I       0       5.6919917864    0-59
I       0       5.9575633128    0-59
I       0       5.28678987      0-59
I       0       5.7741273101    0-59
I       1       4.7008898015    0-59
I       0       4.8706365503    0-59
I       0       5.3169062286    0-59
I       1       3.0472279261    0-59
I       0       5.0047912389    0-59
I       1       4.9993155373    0-59
I       0       5.1115674196    0-59
I       0       5.0814510609    0-59
I       0       4.7885010267    0-59
I       0       4.6324435318    0-59
I       0       4.2792607803    0-59
I       0       4.6488706366    0-59
I       0       4.6214921287    0-59
I       0       4.3832991102    0-59
I       1       4.6735112936    0-59
I       0       4.1368925394    0-59
I       0       4.7173169062    0-59
I       0       4.6954140999    0-59
I       0       4.1889117043    0-59
I       0       4.2272416153    0-59
I       0       4.34770705      0-59
I       0       4.0164271047    0-59
I       0       4.2108145106    0-59
I       0       4.3997262149    0-59
I       0       2.9869952088    0-59
I       0       3.3155373032    0-59
I       0       3.5920602327    0-59
I       0       3.4743326489    0-59
I       0       2.855578371     0-59
I       0       2.9295003422    0-59
I       0       2.1245722108    0-59
I       0       2.1190965092    0-59
I       0       2.1054072553    0-59
I       0       0.2299794661    0-59
I       0       2.135523614     0-59
I       0       2.1793292266    0-59
I       0       2.0342231348    0-59
I       0       2.3244353183    0-59
I       0       1.9904175222    0-59
I       0       2.3134839151    0-59
I       0       2.2149212868    0-59
I       1       1.3004791239    0-59
I       0       2.1136208077    0-59
I       0       1.6783025325    0-59
I       0       1.1252566735    0-59
I       0       1.5578370979    0-59
I       0       1.0184804928    0-59
I       0       0.6160164271    0-59
I       0       1.1033538672    0-59
I       0       0.8898015058    0-59
I       0       1.3004791239    0-59
I       0       0.3285420945    0-59
I       0       1.0869267625    0-59
I       0       1.1170431211    0-59
I       0       0.34770705      0-59
I       0       1.3880903491    0-59
I       0       0.2327173169    0-59
I       0       0.3641341547    0-59
I       0       0.4024640657    0-59
I       0       0.34770705      0-59
I       0       0.3148528405    0-59
I       0       0.3832991102    0-59
I       0       6.3819301848    0-59
I       0       8.7748117728    60-69
I       0       8.2902121834    60-69
I       0       7.8767967146    60-69
I       1       4.5256673511    60-69
I       0       8.3367556468    60-69
I       0       8.219028063     60-69
I       0       6.546201232     60-69
I       0       6.1683778234    60-69
I       0       6.1409993155    60-69
I       0       6.1437371663    60-69
I       0       6.2778918549    60-69
I       0       5.4757015743    60-69
I       0       5.5058179329    60-69
I       0       4.9911019849    60-69
I       0       4.7501711157    60-69
I       0       4.6625598905    60-69
I       0       5.5496235455    60-69
I       0       5.2292950034    60-69
I       0       3.7727583847    60-69
I       0       4.219028063     60-69
I       0       4.5119780972    60-69
I       0       2.9404517454    60-69
I       0       3.2005475702    60-69
I       0       3.4825462012    60-69
I       0       3.1211498973    60-69
I       0       3.2553045859    60-69
I       0       3.1403148528    60-69
I       0       2.8008213552    60-69
I       0       2.9486652977    60-69
I       0       3.1622176591    60-69
I       0       3.2005475702    60-69
I       0       2.9924709103    60-69
I       0       2.5626283368    60-69
I       0       2.9130732375    60-69
I       0       2.4120465435    60-69
I       0       1.8863791923    60-69
I       0       1.4784394251    60-69
I       0       1.1718001369    60-69
I       0       1.4318959617    60-69
I       0       1.5003422313    60-69
I       0       1.0650239562    60-69
I       0       0.8651608487    60-69
I       0       1.1991786448    60-69
I       0       0.7830253251    60-69
I       0       0.2108145106    60-69
I       0       0.3696098563    60-69
I       0       0.3449691992    60-69
I       0       0.2655715264    60-69
I       0       0.5366187543    60-69
I       0       0.4681724846    60-69
I       0       7.8083504449    60-69
I       0       7.7891854894    60-69
I       0       6.8090349076    60-69
I       0       0.9719370294    60-69
I       0       6.8227241615    60-69
I       0       5.0787132101    60-69
I       0       5.106091718     60-69
I       0       5.158110883     60-69
I       0       4.3832991102    60-69
I       0       4.2765229295    60-69
I       0       4.038329911     60-69
I       0       3.9206023272    60-69
I       0       4.0438056126    60-69
I       0       3.7453798768    60-69
I       0       3.3976728268    60-69
I       0       2.6803559206    60-69
I       0       3.1786447639    60-69
I       0       2.6475017112    60-69
I       0       2.0561259411    60-69
I       0       2.045174538     60-69
I       0       2.1464750171    60-69
I       0       1.2813141684    60-69
I       0       1.401779603     60-69
I       0       1.6837782341    60-69
I       0       1.1909650924    60-69
I       0       0.8049281314    60-69
I       0       0.6187542779    60-69
I       0       0.2245037645    60-69
I       0       0.0629705681    60-69
I       0       0.3121149897    60-69
I       0       0.3011635866    60-69
I       1       6.8473648186    60-69
I       0       7.6167008898    60-69
I       0       7.6796714579    60-69
I       0       7.5920602327    60-69
I       0       7.5290896646    60-69
I       0       7.4934976044    60-69
I       0       7.5208761123    60-69
I       0       7.0198494182    60-69
I       0       7.0034223135    60-69
I       0       6.6338124572    60-69
I       0       6.6091718001    60-69
I       0       6.7597535934    60-69
I       0       6.8583162218    60-69
I       0       6.71321013      60-69
I       0       5.8836413415    60-69
I       0       6.4229979466    60-69
I       0       6.2532511978    60-69
I       0       5.8042436687    60-69
I       0       5.6481861739    60-69
I       0       5.0102669405    60-69
I       0       6.0232717317    60-69
I       0       4.9418206708    60-69
I       1       3.9370294319    60-69
I       0       5.158110883     60-69
I       0       4.3915126626    60-69
I       0       4.1971252567    60-69
I       0       3.9206023272    60-69
I       1       2.8966461328    60-69
I       0       3.4880219028    60-69
I       0       3.5290896646    60-69
I       0       3.5674195756    60-69
I       0       3.5975359343    60-69
I       0       3.0691307324    60-69
I       0       3.0061601643    60-69
I       0       3.1238877481    60-69
I       0       2.5516769336    60-69
I       0       1.8288843258    60-69
I       0       2.1437371663    60-69
I       0       2.0150581793    60-69
I       0       1.4893908282    60-69
I       0       1.234770705     60-69
I       0       0.810403833     60-69
I       0       1.1143052704    60-69
I       0       1.0841889117    60-69
I       0       1.0869267625    60-69
I       0       1.1663244353    60-69
I       0       0.3613963039    60-69
I       0       0.2737850787    60-69
I       0       0.3504449008    60-69
I       0       0.3011635866    60-69
I       0       0.2026009582    60-69
I       0       0.3586584531    60-69
I       0       0.4188911704    60-69
I       0       0.3887748118    60-69
I       0       0.3449691992    60-69
I       0       0.3230663929    60-69
I       0       7.2689938398    60-69
I       0       7.6057494867    60-69
I       1       4.9117043121    60-69
I       1       7.1978097194    60-69
I       0       6.8829568789    60-69
I       0       6.431211499     60-69
I       0       6.4229979466    60-69
I       0       6.5215605749    60-69
I       0       6.3983572895    60-69
I       0       5.2429842574    60-69
I       0       5.0431211499    60-69
I       0       5.2511978097    60-69
I       0       5.0924024641    60-69
I       0       4.6926762491    60-69
I       0       3.7152635181    60-69
I       0       3.8740588638    60-69
I       0       3.2553045859    60-69
I       0       3.1019849418    60-69
I       0       3.2197125257    60-69
I       0       2.1054072553    60-69
I       0       2.1108829569    60-69
I       0       1.8590006845    60-69
I       0       2.0999315537    60-69
I       0       2.2587268994    60-69
I       0       2.2450376454    60-69
I       0       2.0752908966    60-69
I       0       0.2847364819    60-69
I       0       1.0924024641    60-69
I       0       1.3497604381    60-69
I       0       1.1006160164    60-69
I       0       0.8076659822    60-69
I       0       0.8323066393    60-69
I       0       0.3066392882    60-69
I       0       0.3066392882    60-69
I       0       0.2737850787    60-69
I       0       0.3778234086    60-69
I       0       0.3312799452    60-69
I       0       8.1368925394    70-79
I       0       8.2737850787    70-79
I       0       8.3504449008    70-79
I       0       5.6700889802    70-79
I       0       5.0431211499    70-79
I       0       5.3059548255    70-79
I       0       5.1690622861    70-79
I       0       5.0978781656    70-79
I       0       3.4496919918    70-79
I       0       3.9753593429    70-79
I       0       4.4845995893    70-79
I       0       4.4490075291    70-79
I       0       3.4770704997    70-79
I       0       3.4880219028    70-79
I       0       2.4038329911    70-79
I       0       1.9685147159    70-79
I       0       2.392881588     70-79
I       0       2.2833675565    70-79
I       0       1.7084188912    70-79
I       0       2.1409993155    70-79
I       0       1.1362080767    70-79
I       0       1.1279945243    70-79
I       0       0.9911019849    70-79
I       0       1.1882272416    70-79
I       0       1.2484599589    70-79
I       0       0.0602327173    70-79
I       0       0.219028063     70-79
I       0       0.334017796     70-79
I       0       0.34770705      70-79
I       0       0.3367556468    70-79
I       0       0.2409308693    70-79
I       1       5.3196440794    70-79
I       0       5.9055441478    70-79
I       0       5.9383983573    70-79
I       0       4.9226557153    70-79
I       0       5.2977412731    70-79
I       0       3.1759069131    70-79
I       0       2.5845311431    70-79
I       0       2.0123203285    70-79
I       0       1.3388090349    70-79
I       0       1.1279945243    70-79
I       0       1.4209445585    70-79
I       0       0.2847364819    70-79
I       0       0               70-79
I       0       7.7125256674    70-79
I       0       6.5270362765    70-79
I       0       6.8637919233    70-79
I       0       7.0308008214    70-79
I       0       0.2546201232    70-79
I       0       6.0479123888    70-79
I       0       6.1902806297    70-79
I       0       6.1930184805    70-79
I       0       5.7604380561    70-79
I       0       5.4948665298    70-79
I       1       2.0643394935    70-79
I       0       4.9719370294    70-79
I       0       3.6824093087    70-79
I       0       3.022587269     70-79
I       0       3.2963723477    70-79
I       0       2.7761806982    70-79
I       1       2.2149212868    70-79
I       0       2.8610540726    70-79
I       0       3.1293634497    70-79
I       0       2.0479123888    70-79
I       0       1.9575633128    70-79
I       0       1.7932922656    70-79
I       0       1.2840520192    70-79
I       0       1.2703627652    70-79
I       0       0.8323066393    70-79
I       0       0.9527720739    70-79
I       0       1.1718001369    70-79
I       0       0.334017796     70-79
I       0       0.3258042437    70-79
I       0       0.372347707     70-79
I       0       0.2929500342    70-79
I       0       0.3449691992    70-79
I       0       7.9671457906    70-79
I       1       6.2970568104    70-79
I       0       5.4866529774    70-79
I       0       5.3798767967    70-79
I       0       5.311430527     70-79
I       0       4.5065023956    70-79
I       1       2.3299110198    70-79
I       0       4.1642710472    70-79
I       0       4.514715948     70-79
I       0       3.8165639973    70-79
I       0       3.3976728268    70-79
I       0       4.0438056126    70-79
I       0       1.1115674196    70-79
I       0       0.0793976728    70-79
I       0       0.3312799452    70-79
I       1       4.4188911704    80+
I       1       1.4154688569    80+
I       1       3.2306639288    80+
I       0       2.0342231348    80+
I       0       1.106091718     80+
I       0       0.900752909     80+
I       0       0.3258042437    80+
I       0       0.3969883641    80+
I       1       3.6468172485    80+
I       0       5.6180698152    80+
I       0       3.4880219028    80+
I       0       3.5290896646    80+
I       0       2.0150581793    80+
I       0       1.1663244353    80+
I       0       0.34770705      80+
I       0       0.1916495551    80+
I       1       0.9555099247    80+
I       1       6.71321013      80+
I       1       3.5044490075    80+
I       1       0.7145790554    80+
I       0       3.318275154     80+
I       0       2.2395619439    80+
I       0       0.8377823409    80+
I       0       0.1533196441    80+
I       0       0.2464065708    80+
I       1       1.2813141684    80+
I       1       1.3963039014    80+
I       0       1.1663244353    80+
I       0       1.1362080767    80+
II      0       6.5215605749    0-59
II      0       5.6043805613    0-59
II      0       2.3189596167    0-59
II      1       4.7474332649    0-59
II      0       5.3716632444    0-59
II      1       1.5852156057    0-59
II      0       2.6091718001    0-59
II      0       5.8726899384    0-59
II      1       1.5742642026    0-59
II      1       3.2525667351    0-59
II      0       3.4305270363    0-59
II      0       0.7282683094    0-59
II      0       3.2197125257    0-59
II      1       1.9986310746    0-59
II      0       2.5325119781    0-59
II      0       0.3997262149    0-59
II      0       7.2635181383    60-69
II      1       1.0513347023    60-69
II      0       2.8008213552    60-69
II      0       3.4058863792    60-69
II      0       1.3552361396    60-69
II      1       1.1991786448    70-79
II      0       0.3696098563    70-79
II      0       1.4154688569    70-79
II      0       1.0759753593    0-59
II      0       0.1122518823    0-59
II      0       4.3915126626    60-69
II      0       8.4353182752    0-59
II      0       0.3148528405    0-59
II      0       6.160164271     0-59
II      0       4.2327173169    0-59
II      0       1.9055441478    0-59
II      0       0.424366872     0-59
II      0       3.2361396304    0-59
II      1       1.5222450376    0-59
II      0       0.7419575633    0-59
II      0       0.424366872     60-69
II      0       5.311430527     60-69
II      0       5.7467488022    60-69
II      0       0.34770705      70-79
II      0       8.6269678303    0-59
II      1       5.3497604381    0-59
II      1       1.8809034908    0-59
II      0       7.8384668036    0-59
II      0       8.5941136208    0-59
II      1       3.1978097194    0-59
II      1       5.2785763176    0-59
II      1       3.2060232717    0-59
II      1       2.3271731691    0-59
II      0       7.6112251882    0-59
II      0       7.0335386721    0-59
II      1       1.3333333333    0-59
II      1       6.4914442163    0-59
II      1       1.4236824093    0-59
II      0       6.7241615332    0-59
II      1       2.2450376454    0-59
II      0       6.0780287474    0-59
II      0       5.5003422313    0-59
II      1       1.5797399042    0-59
II      1       2.3956194387    0-59
II      0       4.8213552361    0-59
II      0       5.0595482546    0-59
II      1       4.501026694     0-59
II      0       5.015742642     0-59
II      0       3.5044490075    0-59
II      0       4.5366187543    0-59
II      0       3.8083504449    0-59
II      0       3.832991102     0-59
II      0       3.6769336071    0-59
II      0       3.1622176591    0-59
II      0       2.2340862423    0-59
II      0       2.1656399726    0-59
II      0       2.2915811088    0-59
II      1       2.5516769336    0-59
II      0       2.302532512     0-59
II      0       2.2806297057    0-59
II      0       2.2039698836    0-59
II      0       1.8179329227    0-59
II      0       1.6153319644    0-59
II      1       1.8343600274    0-59
II      0       1.3442847365    0-59
II      0       0.0711841205    0-59
II      0       1.2840520192    0-59
II      0       0.977412731     0-59
II      0       1.1006160164    0-59
II      0       0.2765229295    0-59
II      0       0.7638603696    0-59
II      0       0.8186173854    0-59
II      0       0.295687885     0-59
II      0       0.3531827515    0-59
II      0       0.3504449008    0-59
II      0       0.1642710472    0-59
II      0       6.4093086927    0-59
II      0       5.1143052704    0-59
II      1       0.514715948     0-59
II      0       4.4271047228    0-59
II      0       5.0403832991    0-59
II      0       5.0595482546    0-59
II      0       4.0793976728    0-59
II      0       3.8548939083    0-59
II      0       4.2765229295    0-59
II      0       3.8357289528    0-59
II      0       3.5509924709    0-59
II      0       3.2525667351    0-59
II      0       4.0219028063    0-59
II      0       2.8528405202    0-59
II      0       3.2772073922    0-59
II      0       2.5407255305    0-59
II      0       2.5927446954    0-59
II      0       2.2724161533    0-59
II      0       2.6502395619    0-59
II      0       1.2457221081    0-59
II      1       1.9192334018    0-59
II      0       1.4209445585    0-59
II      0       0.4736481862    0-59
II      0       0.4791238877    0-59
II      1       2.5571526352    0-59
II      1       6.945927447     0-59
II      0       7.0882956879    0-59
II      0       7.4195756331    0-59
II      0       6.5927446954    0-59
II      0       6.1984941821    0-59
II      0       6.0123203285    0-59
II      0       6.0643394935    0-59
II      0       6.3846680356    0-59
II      0       5.8316221766    0-59
II      0       5.3853524983    0-59
II      0       5.7412731006    0-59
II      0       5.0595482546    0-59
II      0       5.311430527     0-59
II      0       4.6160164271    0-59
II      0       4.8843258042    0-59
II      0       4.3696098563    0-59
II      1       2.5763175907    0-59
II      0       3.8877481177    0-59
II      0       3.3045859001    0-59
II      1       3.8877481177    0-59
II      0       4.1122518823    0-59
II      0       2.8829568789    0-59
II      0       4.0164271047    0-59
II      1       3.5044490075    0-59
II      0       4.128678987     0-59
II      0       1.18275154      0-59
II      0       3.2197125257    0-59
II      0       3.2525667351    0-59
II      0       3.4305270363    0-59
II      0       3.1293634497    0-59
II      0       3.1403148528    0-59
II      0       2.8747433265    0-59
II      0       2.6803559206    0-59
II      0       3.1704312115    0-59
II      1       1.4893908282    0-59
II      0       2.3983572895    0-59
II      1       1.3853524983    0-59
II      0       2.4065708419    0-59
II      0       2.2915811088    0-59
II      0       3.947980835     0-59
II      0       2.8884325804    0-59
II      0       1.9603011636    0-59
II      0       2.1382614648    0-59
II      0       2.2587268994    0-59
II      0       1.5277207392    0-59
II      0       2.4859685147    0-59
II      0       1.8069815195    0-59
II      0       1.2676249144    0-59
II      0       1.4373716632    0-59
II      0       1.1416837782    0-59
II      0       1.1416837782    0-59
II      0       0.6516084873    0-59
II      0       1.3333333333    0-59
II      0       0.3613963039    0-59
II      0       1.28678987      0-59
II      0       1.0924024641    0-59
II      0       1.2840520192    0-59
II      0       1.2813141684    0-59
II      0       0.3559206023    0-59
II      0       1.1115674196    0-59
II      0       0.424366872     0-59
II      0       1.144421629     0-59
II      0       0.2765229295    0-59
II      0       0.3805612594    0-59
II      0       0.3668720055    0-59
II      0       0.3121149897    0-59
II      0       0.3613963039    0-59
II      0       0.4435318275    0-59
II      0       0.4435318275    0-59
II      0       0.34770705      0-59
II      0       0.4791238877    0-59
II      0       0.2628336756    0-59
II      0       0.4490075291    0-59
II      0       0.2819986311    0-59
II      0       7.1704312115    0-59
II      1       1.2238193018    0-59
II      1       5.5468856947    0-59
II      0       7.7180013689    0-59
II      1       3.4058863792    0-59
II      1       0.93908282      0-59
II      0       7.1786447639    0-59
II      0       5.1197809719    0-59
II      0       6.9267624914    0-59
II      1       3.6577686516    0-59
II      0       6.9815195072    0-59
II      1       2.4640657084    0-59
II      1       1.735797399     0-59
II      0       4.7529089665    0-59
II      0       6.2395619439    0-59
II      0       6.5626283368    0-59
II      1       3.5564681725    0-59
II      1       2.7789185489    0-59
II      0       5.6755646817    0-59
II      0       6.3271731691    0-59
II      0       5.5578370979    0-59
II      0       6.417522245     0-59
II      0       5.954825462     0-59
II      1       3.4113620808    0-59
II      0       5.8809034908    0-59
II      1       3.5783709788    0-59
II      1       0.7091033539    0-59
II      1       2.2861054073    0-59
II      1       0.9609856263    0-59
II      1       6.045174538     0-59
II      0       5.5633127995    0-59
II      0       5.6344969199    0-59
II      0       2.8062970568    0-59
II      0       6.0150581793    0-59
II      1       4.9801505818    0-59
II      0       5.7686516085    0-59
II      0       4.720054757     0-59
II      1       5.5633127995    0-59
II      1       2.8610540726    0-59
II      1       5.2238193018    0-59
II      0       5.0212183436    0-59
II      0       4.7939767283    0-59
II      0       5.4209445585    0-59
II      0       2.6557152635    0-59
II      0       5.067761807     0-59
II      1       2.1629021218    0-59
II      0       4.6981519507    0-59
II      0       4.9993155373    0-59
II      0       4.3394934976    0-59
II      0       4.3915126626    0-59
II      0       4.6379192334    0-59
II      0       4.7611225188    0-59
II      1       2.2970568104    0-59
II      1       1.6810403833    0-59
II      1       1.8370978782    0-59
II      1       0.7611225188    0-59
II      0       3.9780971937    0-59
II      0       3.794661191     0-59
II      0       2.6858316222    0-59
II      1       3.2361396304    0-59
II      0       3.8904859685    0-59
II      0       4.4380561259    0-59
II      0       3.9397672827    0-59
II      0       4.1889117043    0-59
II      0       3.3073237509    0-59
II      0       3.6468172485    0-59
II      0       3.9507186858    0-59
II      0       3.3483915127    0-59
II      0       3.446954141     0-59
II      0       2.6064339493    0-59
II      0       3.3620807666    0-59
II      0       3.6605065024    0-59
II      0       3.1704312115    0-59
II      0       3.3210130048    0-59
II      0       3.0061601643    0-59
II      0       3.1101984942    0-59
II      1       1.196440794     0-59
II      0       2.81724846      0-59
II      0       2.893908282     0-59
II      0       2.6338124572    0-59
II      0       2.7843942505    0-59
II      0       2.8062970568    0-59
II      0       2.2203969884    0-59
II      0       3.1375770021    0-59
II      0       2.6967830253    0-59
II      0       2.7159479808    0-59
II      0       2.507871321     0-59
II      0       2.0287474333    0-59
II      0       2.9733059548    0-59
II      0       2.1875427789    0-59
II      0       2.1464750171    0-59
II      1       2.1327857632    0-59
II      0       2.379192334     0-59
II      0       2.7488021903    0-59
II      0       2.3983572895    0-59
II      0       1.9301848049    0-59
II      1       1.2648870637    0-59
II      0       2.0889801506    0-59
II      0       2.1081451061    0-59
II      0       1.9520876112    0-59
II      0       3.0581793292    0-59
II      0       2.0506502396    0-59
II      1       0.4709103354    0-59
II      0       2.0205338809    0-59
II      0       0.3531827515    0-59
II      0       2.1245722108    0-59
II      0       2.3600273785    0-59
II      0       2.0041067762    0-59
II      0       1.8562628337    0-59
II      0       1.8945927447    0-59
II      1       1.3059548255    0-59
II      0       1.3963039014    0-59
II      0       1.2840520192    0-59
II      0       1.3661875428    0-59
II      0       1.3169062286    0-59
II      0       1.5222450376    0-59
II      0       0.9883641342    0-59
II      1       0.720054757     0-59
II      0       1.7713894593    0-59
II      0       1.1991786448    0-59
II      0       1.0924024641    0-59
II      0       1.8836413415    0-59
II      0       1.1334702259    0-59
II      0       1.0376454483    0-59
II      1       0.6652977413    0-59
II      0       1.3470225873    0-59
II      0       1.3059548255    0-59
II      0       1.1307323751    0-59
II      0       1.3963039014    0-59
II      0       1.0978781656    0-59
II      0       1.2648870637    0-59
II      0       0.7939767283    0-59
II      0       1.3689253936    0-59
II      0       1.0759753593    0-59
II      0       0.9993155373    0-59
II      0       1.2950034223    0-59
II      0       0.7501711157    0-59
II      0       1.6317590691    0-59
II      1       0.9555099247    0-59
II      0       0.3285420945    0-59
II      0       1.7248459959    0-59
II      0       1.1334702259    0-59
II      0       1.2648870637    0-59
II      0       1.3880903491    0-59
II      0       1.1937029432    0-59
II      0       0.6488706366    0-59
II      0       0.8569472964    0-59
II      0       1.0704996578    0-59
II      0       0.3367556468    0-59
II      0       0.3778234086    0-59
II      0       0.2710472279    0-59
II      0       0.2381930185    0-59
II      0       0.5722108145    0-59
II      0       0.9226557153    0-59
II      0       0.4407939767    0-59
II      0       0.4216290212    0-59
II      0       0.5393566051    0-59
II      0       0.1697467488    0-59
II      0       0.3449691992    0-59
II      0       0.3641341547    0-59
II      0       0.4462696783    0-59
II      0       0.5804243669    0-59
II      0       0.5585215606    0-59
II      0       1.9301848049    0-59
II      0       6.7789185489    0-59
II      0       5.2484599589    0-59
II      0       8.6954140999    60-69
II      0       8.2436687201    60-69
II      0       7.7125256674    60-69
II      1       0.5119780972    60-69
II      0       7.2525667351    60-69
II      0       6.5790554415    60-69
II      1       4.219028063     60-69
II      0       5.3141683778    60-69
II      0       5.3032169747    60-69
II      0       4.5366187543    60-69
II      1       4.1724845996    60-69
II      0       4.1779603012    60-69
II      0       3.5509924709    60-69
II      1       3.2361396304    60-69
II      0       3.665982204     60-69
II      1       3.6878850103    60-69
II      0       2.0588637919    60-69
II      0       2.0314852841    60-69
II      0       2.1245722108    60-69
II      0       2.0369609856    60-69
II      0       2.1382614648    60-69
II      0       1.9904175222    60-69
II      0       1.1526351814    60-69
II      0       1.0814510609    60-69
II      0       1.1362080767    60-69
II      0       1.4592744695    60-69
II      0       1.067761807     60-69
II      0       7.9698836413    60-69
II      0       6.8008213552    60-69
II      0       6.045174538     60-69
II      0       6.0150581793    60-69
II      0       5.7002053388    60-69
II      0       4.9500342231    60-69
II      0       5.7193702943    60-69
II      0       5.2484599589    60-69
II      0       2.9349760438    60-69
II      0       2.0889801506    60-69
II      0       0.1943874059    60-69
II      0       0.462696783     60-69
II      0       0.3449691992    60-69
II      0       0.3531827515    60-69
II      1       6.7926078029    60-69
II      0       7.2717316906    60-69
II      0       6.855578371     60-69
II      0       7.1074606434    60-69
II      1       7.318275154     60-69
II      0       5.3689253936    60-69
II      0       5.4045174538    60-69
II      0       5.158110883     60-69
II      0       4.7091033539    60-69
II      0       3.3894592745    60-69
II      0       4.1642710472    60-69
II      0       4.2162902122    60-69
II      0       3.8110882957    60-69
II      0       4.0054757016    60-69
II      0       2.9869952088    60-69
II      0       2.546201232     60-69
II      0       2.1409993155    60-69
II      0       2.2970568104    60-69
II      0       2.0314852841    60-69
II      0       0.9883641342    60-69
II      0       1.1416837782    60-69
II      0       1.2840520192    60-69
II      0       0.3915126626    60-69
II      0       0.3750855578    60-69
II      0       0.7227926078    60-69
II      0       8.3394934976    60-69
II      1       7.8986995209    60-69
II      1       4.7665982204    60-69
II      1       3.3237508556    60-69
II      1       7.0965092402    60-69
II      0       7.3894592745    60-69
II      1       0.7857631759    60-69
II      1       4.8350444901    60-69
II      0       6.7953456537    60-69
II      1       4.8843258042    60-69
II      1       4.59137577      60-69
II      0       6.6036960986    60-69
II      0       6.5297741273    60-69
II      0       6.0561259411    60-69
II      0       5.9247091034    60-69
II      0       6.3956194387    60-69
II      0       5.864476386     60-69
II      0       6.0424366872    60-69
II      0       6.0342231348    60-69
II      0       3.5482546201    60-69
II      1       4.3121149897    60-69
II      0       5.3853524983    60-69
II      0       4.9472963723    60-69
II      0       4.5420944559    60-69
II      1       3.8439425051    60-69
II      0       4.5229295003    60-69
II      0       4.8076659822    60-69
II      0       4.9062286105    60-69
II      0       4.4052019165    60-69
II      0       4.257357974     60-69
II      0       3.7672826831    60-69
II      1       0.7419575633    60-69
II      0       3.4661190965    60-69
II      0       3.3401779603    60-69
II      0       3.7535934292    60-69
II      1       1.3552361396    60-69
II      1       3.5017111567    60-69
II      0       2.598220397     60-69
II      0       2.7816563997    60-69
II      1       0.4380561259    60-69
II      0       2.1848049281    60-69
II      0       1.2265571526    60-69
II      0       0.9199178645    60-69
II      0       1.0102669405    60-69
II      0       1.18275154      60-69
II      0       0.5338809035    60-69
II      0       1.0951403149    60-69
II      0       0.8021902806    60-69
II      0       0.5941136208    60-69
II      0       0.3805612594    60-69
II      0       8.0438056126    60-69
II      0       6.288843258     70-79
II      0       4.733744011     70-79
II      0       5.0266940452    70-79
II      0       4.1259411362    70-79
II      0       4               70-79
II      0       3.1403148528    70-79
II      0       1.5441478439    70-79
II      0       2.1765913758    70-79
II      0       2.0561259411    70-79
II      0       1.2101300479    70-79
II      0       0.1943874059    70-79
II      1       6.2833675565    70-79
II      0       2.6173853525    70-79
II      0       4.5557837098    70-79
II      0       3.7563312799    70-79
II      0       3.1841204654    70-79
II      0       3.0335386721    70-79
II      0       1.7659137577    70-79
II      0       6.6611909651    70-79
II      0       7.0527036277    70-79
II      1       1.2457221081    70-79
II      0       5.8206707734    70-79
II      1       0.2299794661    70-79
II      1       1.5496235455    70-79
II      1       5.7577002053    70-79
II      1       0.4654346338    70-79
II      0       5.5359342916    70-79
II      0       3.8439425051    70-79
II      0       3.4250513347    70-79
II      1       2.0862422998    70-79
II      0       3.5947980835    70-79
II      0       2.7679671458    70-79
II      0       2.6255989049    70-79
II      0       3.0882956879    70-79
II      0       2.8309377139    70-79
II      0       1.9958932238    70-79
II      0       2.2231348392    70-79
II      0       0.6351813826    70-79
II      0       1.749486653     70-79
II      1       1.1033538672    70-79
II      0       1.3059548255    70-79
II      0       0.2600958248    70-79
II      0       0.3093771389    70-79
II      0       0.3121149897    70-79
II      0       7.6413415469    70-79
II      0       6.3299110198    70-79
II      1       1.87816564      70-79
II      0       5.6180698152    70-79
II      0       5.5468856947    70-79
II      0       4.7310061602    70-79
II      0       4.076659822     70-79
II      0       3.8685831622    70-79
II      0       2.8391512663    70-79
II      1       2.6119096509    70-79
II      0       2.1793292266    70-79
II      0       1.4099931554    70-79
II      0       1.067761807     70-79
II      0       1.7796030116    70-79
II      0       1.2977412731    70-79
II      0       1.1772758385    70-79
II      0       0.9582477755    70-79
II      0       1.0485968515    70-79
II      0       0.5749486653    70-79
II      0       0.4216290212    70-79
II      0       0.1149897331    70-79
II      0       0.34770705      70-79
II      0       0.3093771389    70-79
II      0       0.2464065708    70-79
II      1       3.5811088296    80+
II      0       6.7405886379    80+
II      0       4.8542094456    80+
II      1       2.045174538     80+
II      0       2.6310746064    80+
II      0       0.9527720739    80+
II      0       0.34770705      80+
II      0       2.3572895277    80+
II      0       7.3429158111    80+
II      1       0.5393566051    80+
II      0       3.1813826146    80+
II      1       1.5331964408    80+
II      0       2.7734428474    80+
II      0       3.498973306     80+
II      0       2.4777549624    80+
II      0       0.3258042437    80+
II      1       3.7754962355    80+
II      0       4.8076659822    80+
II      0       4.205338809     80+
II      0       3.3237508556    80+
II      0       1.53045859      80+
III     1       1.568788501     0-59
III     0       2.8391512663    0-59
III     0       0.7665982204    0-59
III     1       2.7022587269    0-59
III     0       5.2594113621    0-59
III     0       2.379192334     0-59
III     0       1.8206707734    0-59
III     1       0.1259411362    60-69
III     0       2.0506502396    0-59
III     0       2.9623545517    0-59
III     0       1.3935660507    0-59
III     1       2.5270362765    0-59
III     1       3.241615332     0-59
III     0       7.2689938398    70-79
III     1       2.8637919233    0-59
III     0       3.0472279261    0-59
III     1       2.0670773443    0-59
III     1       1.3004791239    0-59
III     0       5.8699520876    0-59
III     1       1.1663244353    0-59
III     1       4.8898015058    0-59
III     1       0.6023271732    0-59
III     0       4.3887748118    0-59
III     1       1.9794661191    0-59
III     0       3.5345653662    0-59
III     0       4.7255304586    0-59
III     0       4.0082135524    0-59
III     0       3.4058863792    0-59
III     0       3.8795345654    0-59
III     0       2.9897330595    0-59
III     1       1.8316221766    0-59
III     0       3.9151266256    0-59
III     0       2.3490759754    0-59
III     0       2.1711156742    0-59
III     1       0.9253935661    0-59
III     1       1.1115674196    0-59
III     1       1.3059548255    0-59
III     0       2.6529774127    0-59
III     0       1.4264202601    0-59
III     0       1.6783025325    0-59
III     0       0.205338809     0-59
III     1       2.4476386037    0-59
III     0       6.0232717317    0-59
III     1       4.9500342231    0-59
III     0       3.7097878166    0-59
III     0       4.5448323066    0-59
III     1       3.2224503765    0-59
III     0       3.8877481177    0-59
III     0       2.6338124572    0-59
III     0       2.726899384     0-59
III     0       2.0287474333    0-59
III     0       1.8973305955    0-59
III     1       1.1033538672    0-59
III     0       1.5523613963    0-59
III     1       0.9281314168    0-59
III     0       0.2464065708    0-59
III     0       0.553045859     0-59
III     0       8.2080766598    0-59
III     0       8.1642710472    0-59
III     0       7.4496919918    0-59
III     0       7.7125256674    0-59
III     0       7.5646817248    0-59
III     1       4.4873374401    0-59
III     1       1.7056810404    0-59
III     1       1.568788501     0-59
III     0       7.2251882272    0-59
III     1       1.2402464066    0-59
III     1       1.8042436687    0-59
III     1       1.6098562628    0-59
III     0       5.3305954825    0-59
III     1       1.0622861054    0-59
III     1       2.1464750171    0-59
III     0       5.3086926762    0-59
III     1       0.7474332649    0-59
III     1       2.9815195072    0-59
III     1       2.5790554415    0-59
III     0       5.3388090349    0-59
III     1       1.4510609172    0-59
III     1       1.8672142368    0-59
III     0       4.0191649555    0-59
III     0       4.1724845996    0-59
III     1       2.340862423     0-59
III     1       2.6420260096    0-59
III     1       2.5215605749    0-59
III     0       4.1259411362    0-59
III     1       1.4976043806    0-59
III     0       3.6440793977    0-59
III     0       3.099247091     0-59
III     1       2.2368240931    0-59
III     1       2.8090349076    0-59
III     0       2.3682409309    0-59
III     1       2.1765913758    0-59
III     0       1.9739904175    0-59
III     0       2.4120465435    0-59
III     0       2.5681040383    0-59
III     1       0.8377823409    0-59
III     1       1.6427104723    0-59
III     0       1.8453114305    0-59
III     0       1.6892539357    0-59
III     1       0.9445585216    0-59
III     0       1.5797399042    0-59
III     1       1.6919917864    0-59
III     0       1.9876796715    0-59
III     0       2.636550308     0-59
III     0       1.5934291581    0-59
III     0       1.1006160164    0-59
III     0       0.4818617385    0-59
III     0       1.6563997262    0-59
III     0       0.900752909     0-59
III     1       1.1088295688    0-59
III     1       0.5749486653    0-59
III     1       1.1937029432    0-59
III     0       1.2813141684    0-59
III     0       1.3004791239    0-59
III     0       1.3223819302    0-59
III     0       0.7145790554    0-59
III     0       0.3613963039    0-59
III     0       0.3997262149    0-59
III     0       0.4572210815    0-59
III     0       0.6543463381    0-59
III     0       0.2162902122    0-59
III     0       1.2073921971    60-69
III     0       1.2703627652    60-69
III     0       2.5106091718    60-69
III     0       2.3162217659    60-69
III     0       1.106091718     60-69
III     0       0.2217659138    60-69
III     0       7.5318275154    60-69
III     1       1.7002053388    60-69
III     0       5.3059548255    60-69
III     1       4.1095140315    60-69
III     1       2.1026694045    60-69
III     0       2.7789185489    60-69
III     0       2.8227241615    60-69
III     0       2.4394250513    60-69
III     0       2.0424366872    60-69
III     0       1.9575633128    60-69
III     0       1.2648870637    60-69
III     1       1.5715263518    60-69
III     0       4.8651608487    60-69
III     0       7.8959616701    70-79
III     1       3.9315537303    70-79
III     1       1.1389459274    70-79
III     0       0.5941136208    80+
III     0       0.0958247775    80+
III     0       0.7802874743    80+
III     0       0.4407939767    80+
IV      1       1.9849418207    0-59
IV      1       2.6036960986    0-59
IV      1       0.9938398357    0-59
IV      1       0.2710472279    0-59
IV      1       0.0492813142    0-59
IV      1       4.2847364819    0-59
IV      1       3.1759069131    0-59
IV      0       0.3121149897    0-59
IV      0       8.3422313484    60-69
IV      0       2.8090349076    60-69
IV      1       0.8569472964    60-69
IV      1       4.9336071184    70-79
IV      0       4.2245037645    0-59
IV      0       1.3278576318    0-59
IV      1       2.4120465435    0-59
IV      1       1.2785763176    0-59
IV      1       5.0047912389    0-59
IV      1       1.7522245038    0-59
IV      0       0.6789869952    0-59
IV      0       0.2299794661    0-59
IV      0       1.0075290897    0-59
IV      0       0.4435318275    0-59
IV      0       0.3997262149    0-59
IV      0       2.6639288159    0-59
IV      0       0.4681724846    0-59
IV      1       0.1368925394    0-59
IV      1       4.2464065708    0-59
IV      1       2.6255989049    0-59
IV      0       2.4558521561    0-59
IV      1       0.0301163587    0-59
IV      0       0.4216290212    0-59
IV      1       0.1095140315    0-59
IV      1       6.3737166324    0-59
IV      1       3.8850102669    0-59
IV      1       1.6372347707    0-59
IV      1       0.4106776181    0-59
IV      1       1.1690622861    0-59
IV      1       0.7885010267    0-59
IV      1       1.4839151266    0-59
IV      1       2.1765913758    0-59
IV      1       2.4257357974    0-59
IV      1       1.1197809719    0-59
IV      1       0.2354551677    0-59
IV      1       1.2840520192    0-59
IV      1       1.9329226557    0-59
IV      0       2.3737166324    0-59
IV      1       0.0027378508    0-59
IV      1       0.7912388775    0-59
IV      1       1.2594113621    0-59
IV      1       0.1943874059    0-59
IV      0       1.7029431896    0-59
IV      0       1.0485968515    0-59
IV      0       0.386036961     0-59
IV      0       0.8514715948    0-59
IV      0       1.0568104038    0-59
IV      0       0.334017796     0-59
IV      0       0.3805612594    0-59
IV      0       0.4462696783    0-59
IV      0       2.1108829569    60-69
IV      0       1.3880903491    60-69
IV      0       0.476386037     60-69
IV      0       0.4188911704    60-69
IV      1       1.9411362081    60-69
IV      1       1.9603011636    60-69
IV      1       1.0485968515    60-69
IV      1       2.0643394935    60-69
IV      1       1.6262833676    60-69
IV      1       3.6002737851    60-69
IV      1       0.5968514716    60-69
IV      0       1.1307323751    60-69
IV      1       0.1368925394    60-69
IV      0       0.3586584531    60-69
IV      0       0.090349076     60-69
IV      0       0.4298425736    60-69
IV      1       4.1533196441    60-69
IV      1       3.5044490075    70-79
IV      0       3.7782340862    70-79
IV      0       2.0862422998    70-79
IV      1       0.9993155373    70-79
IV      1       0.1752224504    70-79
IV      1       0.5393566051    70-79
IV      1       0.4955509925    70-79
IV      1       0.2874743326    80+
IV      1       1.7604380561    80+
IV      1       4.7994524298    80+
IV      0       1.2128678987    80+
IV      0       0.7310061602    80+
;

***************************************************
/* The following data set is needed for exercise  */ 
/* 3.1.1.4 on page 83.                            */
****************************************************

data; 
input Time    id    state;
datalines;
                                0       1       1
                               49       1       3
                                0       2       1
                                5       2       3
                                0       3       1
                                0       3       2
                               15       3       3
                                0       4       1
                               35       4       2
                               38       4       3
                                0       5       1
                               17       5       3
                                0       6       1
                                2       6       3
                                0       7       1
                               50       7       2
                              674       7       3
                                0       8       1
                               39       8       3
                                0       9       1
                               84       9       3
                                0      10       1
                               11      10       2
                               57      10       3
                                0      11       1
                               25      11       2
                              152      11       3
                                0      12       1
                                7      12       3
                                0      13       1
                               16      13       2
                               80      13       3
                                0      14       1
                               36      14       2
                             1386      14       3
                                0      16       1
                               27      16       2
                              307      16       3
                                0      17       1
                               35      17       3
                                0      18       1
                               19      18       2
                               42      18       3
                                0      19       1
                               36      19       3
                                0      20       1
                               17      20       2
                               27      20       3
                                0      21       1
                                7      21       2
                             1031      21       3
                                0      22       1
                               11      22       2
                               50      22       3
                                0      23       1
                                2      23       2
                              732      23       3
                                0      24       1
                               82      24       2
                              218      24       3
                                0      25       1
                               24      25       2
                             1799      25       0
                                0      26       1
                             1400      26       0
                                0      27       1
                              262      27       3
                                0      28       1
                               70      28       2
                               71      28       3
                                0      29       1
                               34      29       3
                                0      30       1
                               15      30       2
                              851      30       3
                                0      31       1
                               15      31       3
                                0      32       1
                               16      32       2
                               76      32       3
                                0      33       1
                               50      33       2
                             1586      33       0
                                0      34       1
                               22      34       2
                             1571      34       0
                                0      35       1
                               11      35       3
                                0      36       1
                               45      36       2
                               99      36       3
                                0      37       1
                               18      37       2
                               65      37       3
                                0      38       1
                                4      38       2
                                4      38       3
                                0      39       1
                                1      39       2
                               52      39       3
                                0      40       1
                               40      40       2
                             1407      40       0
                                0      41       1
                               57      41       2
                             1321      41       0
                                0      42       1
                                2      42       3
                                0      43       1
                                1      43       3
                                0      44       1
                               39      44       3
                                0      45       1
                                0      45       2
                               44      45       3
                                0      46       1
                                1      46       2
                              995      46       3
                                0      47       1
                               20      47       2
                               71      47       3
                                0      48       1
                                8      48       3
                                0      49       1
                               35      49       2
                             1141      49       0
                                0      50       1
                               82      50       2
                              979      50       3
                                0      51       1
                               31      51       2
                              284      51       3
                                0      52       1
                              101      52       3
                                0      53       1
                               40      53       2
                              187      53       3
                                0      54       1
                                2      54       3
                                0      55       1
                                9      55       2
                               60      55       3
                                0      56       1
                               66      56       2
                              941      56       0
                                0      57       1
                              148      57       3
                                0      58       1
                               20      58       2
                              342      58       3
                                0      59       1
                               77      59       2
                              915      59       0
                                0      60       1
                                2      60       2
                               52      60       3
                                0      61       1
                                1      61       3
                                0      62       1
                               68      62       3
                                0      63       1
                               26      63       2
                              841      63       0
                                0      64       1
                               32      64       2
                              583      64       3
                                0      65       1
                               11      65       2
                               77      65       3
                                0      66       1
                               31      66       3
                                0      67       1
                               56      67       2
                              284      67       3
                                0      68       1
                                2      68       2
                               67      68       3
                                0      69       1
                                9      69       2
                              669      69       0
                                0      70       1
                                4      70       2
                               29      70       3
                                0      71       1
                               30      71       2
                              619      71       0
                                0      72       1
                                3      72       2
                              595      72       0
                                0      73       1
                               26      73       2
                               89      73       3
                                0      74       1
                                4      74       2
                               16      74       3
                                0      75       1
                                1      75       3
                                0      76       1
                               45      76       2
                              544      76       0
                                0      77       1
                               20      77       3
                                0      78       1
                              209      78       2
                              514      78       0
                                0      79       1
                               66      79       2
                               95      79       3
                                0      80       1
                               25      80       2
                              481      80       0
                                0      81       1
                                5      81       2
                              444      81       0
                                0      82       1
                              427      82       0
                                0      83       1
                               31      83       2
                               79      83       3
                                0      84       1
                               36      84       2
                              333      84       3
                                0      85       1
                                4      85       3
                                0      86       1
                                7      86       2
                              396      86       0
                                0      87       1
                               59      87       2
                              109      87       3
                                0      88       1
                               30      88       2
                              369      88       0
                                0      89       1
                              138      89       2
                              206      89       3
                                0      90       1
                              159      90       2
                              185      90       3
                                0      91       1
                              339      91       3
                                0      92       1
                              309      92       2
                              339      92       0
                                0      93       1
                               27      93       2
                              264      93       0
                                0      94       1
                                3      94       2
                              164      94       3
                                0      95       1
                                1      95       2
                               15      95       3
                                0      96       1
                               12      96       2
                              179      96       0
                                0      97       1
                               20      97       2
                              130      97       0
                                0      98       1
                               95      98       2
                              108      98       0
                                0      99       1
                               20      99       3
                                0     100       1
                               37     100       2
                               38     100       0
                                0     101       1
                               30     101       0
                                0     102       1
                               10     102       0
                                0     103       1
                                5     103       3
;





****************************************************
/* The following data set is mentioned on page 118,*/ 
/* where it is used to produce outputs 4.1 - 4.4,  */ 
/* and 4.6 - 4.7, and figure 4.1 - 4.2.            */
/* This dataset originally included the dates of   */
/* biopsy and last followup.  Since it is no longer*/  
/* considered appropriate to publish such data, it */
/* is now omitted and the variable month which     */ 
/* equals (followup - biopsy)/30.4 is given.       */
****************************************************

data; input clarklevel $ ulceration $ thickness status $ months;
datalines;
V No 20 Dead 10.394736842
V Yes 13.5 Alive 36.282894737
V Yes 13 Alive 36.447368421
V Yes 13 Alive 1.3815789474
IV Yes 12.6 Alive 1.3486842105
IV Yes 12.1 Alive 0.9210526316
V Yes 12 Alive 11.282894737
V Yes 11.64 Alive 17.861842105
V Yes 11 Alive 27.006578947
UNK Unknown 11 Alive 2.2697368421
V Unknown 11 Alive 34.967105263
V Yes 11 Alive 26.907894737
V Unknown 11 Alive 5.5263157895
UNK Unknown 10.6 Alive 3.125
IV No 10.2 Alive 14.013157895
IV Yes 10 Alive 0.4276315789
V Unknown 10 Alive 1.0855263158
IV Yes 10 Alive 0.4934210526
V Unknown 10 Alive 22.006578947
IV Yes 10 Alive 18.980263158
V No 9.5 Alive 51.151315789
V No 9 Alive 56.710526316
V No 9 Dead 30.098684211
IV Yes 9 Alive 5.4276315789
IV No 9 Alive 9.2434210526
V Yes 8.88 Alive 13.157894737
V Yes 8.7 Alive 6.6776315789
V Yes 8.5 Alive 7.2039473684
IV Yes 8.2 Alive 9.5723684211
V Yes 8.1 Alive 5.1973684211
IV Yes 8.1 Alive 16.217105263
V Yes 8 Alive 8.7828947368
V Unknown 8 Alive 66.381578947
V Yes 8 Alive 8.5526315789
V No 8 Alive 11.480263158
V Yes 8 Alive 1.4144736842
IV Yes 7.6 Alive 20.427631579
V Unknown 7.5 Dead 14.802631579
IV Unknown 7.4 Alive 44.407894737
V Yes 7.4 Dead 19.440789474
IV Unknown 7.4 Dead 18.388157895
IV Yes 7.25 Alive 0.3618421053
III Unknown 7.1 Alive 20.263157895
IV Unknown 7.05 Alive 64.243421053
UNK Unknown 7 Alive 56.217105263
V Yes 7 Dead 24.703947368
V No 7 Dead 31.578947368
V Yes 7 Dead 26.611842105
III No 7 Alive 2.4671052632
IV Yes 7 Dead 1.5789473684
IV Unknown 6.9 Alive 19.078947368
V Yes 6.87 Alive 1.6776315789
IV Yes 6.8 Alive 43.355263158
V No 6.75 Alive 2.2697368421
IV Yes 6.7 Dead 10.789473684
V Unknown 6.5 Alive 19.375
V No 6.5 Dead 17.763157895
IV Yes 6.5 Alive 4.0131578947
V Yes 6.47 Alive 26.019736842
IV Yes 6.2 Alive 1.1513157895
IV Yes 6 Alive 72.927631579
III Yes 6 Dead 15.032894737
V No 6 Dead 14.276315789
V Yes 6 Alive 65.394736842
V Yes 6 Alive 18.815789474
UNK Yes 6 Alive 25.526315789
IV No 6 Alive 13.980263158
IV Yes 6 Alive 22.894736842
IV No 6 Alive 4.5723684211
V Yes 6 Alive 18.355263158
IV No 6 Alive 11.217105263
IV No 6 Alive 8.3223684211
V No 5.94 Alive 1.5460526316
IV Yes 5.8 Alive 9.6710526316
IV Unknown 5.8 Alive 65.230263158
IV Yes 5.75 Alive 2.4671052632
V Unknown 5.7 Alive 22.796052632
V No 5.6 Alive 13.289473684
IV Yes 5.55 Alive 24.276315789
IV Yes 5.5 Dead 8.75
III No 5.5 Alive 55.197368421
IV Yes 5.5 Dead 18.881578947
IV Yes 5.5 Alive 31.480263158
IV Yes 5.5 Alive 0.625
IV Yes 5.5 Dead 32.993421053
IV No 5.5 Alive 17.302631579
IV Unknown 5.5 Alive 24.473684211
IV No 5.5 Alive 56.019736842
V Unknown 5.4 Dead 14.013157895
IV No 5.4 Alive 15.822368421
IV Yes 5.4 Alive 30.131578947
IV Unknown 5.38 Alive 2.5
IV No 5.3 Alive 84.309210526
IV Unknown 5.3 Alive 20.394736842
IV No 5.3 Alive 19.671052632
IV Yes 5.2 Alive 36.447368421
IV Yes 5.2 Alive 22.467105263
IV Yes 5.2 Alive 12.861842105
IV Yes 5.2 Alive 26.546052632
IV Yes 5.12 Alive 18.453947368
IV Yes 5.12 Alive 5.9210526316
IV No 5.1 Alive 24.375
V No 5.1 Alive 44.572368421
IV Unknown 5.1 Alive 42.302631579
IV Unknown 5.1 Alive 3.8815789474
IV No 5.05 Alive 46.907894737
IV Yes 5.03 Alive 14.276315789
IV Unknown 5 Dead 13.75
IV Yes 5 Dead 11.611842105
IV No 5 Alive 34.605263158
IV Yes 5 Dead 48.947368421
IV Yes 5 Alive 9.5723684211
IV Yes 5 Dead 11.776315789
V Yes 5 Alive 0.5921052632
IV Unknown 5 Dead 38.618421053
UNK Unknown 5 Dead 12.269736842
V Yes 5 Alive 32.664473684
IV Yes 5 Alive 14.605263158
IV Yes 5 Alive 10.855263158
IV Yes 5 Alive 10.065789474
IV Yes 5 Alive 8.7171052632
IV Yes 5 Dead 20.822368421
V No 4.98 Alive 22.302631579
IV Yes 4.91 Dead 23.651315789
IV Yes 4.91 Alive 16.743421053
IV No 4.87 Alive 2.3026315789
IV Yes 4.85 Alive 17.861842105
IV Yes 4.8 Dead 22.401315789
IV Yes 4.8 Alive 31.25
V Yes 4.8 Alive 14.111842105
IV Yes 4.75 Alive 24.572368421
IV Yes 4.7 Alive 28.585526316
V No 4.68 Alive 89.111842105
V Yes 4.62 Alive 14.967105263
III Yes 4.6 Dead 12.763157895
IV Yes 4.6 Alive 1.1842105263
V No 4.59 Alive 0.3947368421
IV Yes 4.55 Alive 32.269736842
IV No 4.55 Alive 10.592105263
IV Yes 4.5 Dead 22.631578947
IV Yes 4.5 Alive 3.2565789474
IV Yes 4.5 Alive 55.361842105
IV Yes 4.5 Alive 18.848684211
IV Unknown 4.5 Alive 12.532894737
IV Yes 4.5 Alive 0.6907894737
V No 4.5 Alive 20.592105263
IV Yes 4.5 Alive 5.9868421053
IV No 4.42 Alive 32.203947368
IV Yes 4.4 Alive 13.848684211
IV Unknown 4.4 Alive 0.8552631579
IV No 4.34 Alive 14.046052632
IV Unknown 4.3 Alive 58.322368421
IV Unknown 4.3 Alive 26.710526316
V No 4.29 Alive 0.4605263158
V Yes 4.22 Alive 46.447368421
IV Yes 4.2 Dead 18.519736842
IV No 4.2 Alive 15.394736842
III Yes 4.2 Alive 11.743421053
V Yes 4.18 Alive 5.3289473684
IV Yes 4.15 Dead 36.019736842
IV Yes 4.13 Alive 9.7697368421
UNK Yes 4.1 Alive 39.769736842
IV No 4.1 Alive 58.421052632
IV Yes 4.1 Alive 4.9671052632
IV No 4.1 Alive 9.5065789474
IV Yes 4.1 Alive 16.776315789
V Yes 4.1 Alive 9.1776315789
IV Yes 4 Alive 1.5131578947
III Yes 4 Dead 35.625
V Unknown 4 Dead 55
IV Yes 4 Dead 11.907894737
IV Yes 4 Dead 23.026315789
IV No 4 Alive 32.697368421
III Yes 4 Alive 31.611842105
IV Yes 4 Alive 30.723684211
IV No 4 Alive 28.486842105
IV Unknown 4 Alive 11.677631579
IV No 4 Dead 23.026315789
IV Unknown 4 Alive 22.598684211
IV Yes 4 Alive 20.526315789
III Unknown 4 Alive 42.960526316
V No 4 Alive 5.5921052632
IV Yes 4 Alive 8.75
III Unknown 4 Alive 23.881578947
IV Unknown 4 Alive 16.184210526
UNK Yes 3.9 Dead 19.934210526
V Yes 3.9 Alive 51.776315789
IV No 3.89 Alive 34.671052632
IV Yes 3.87 Alive 10.855263158
IV No 3.86 Alive 1.5789473684
IV Yes 3.86 Alive 15.690789474
IV Unknown 3.83 Alive 4.4407894737
UNK Yes 3.8 Alive 27.993421053
V Yes 3.8 Alive 47.203947368
IV Yes 3.8 Alive 0.4934210526
V Yes 3.8 Alive 13.717105263
III No 3.8 Dead 71.151315789
UNK No 3.8 Alive 1.6118421053
IV No 3.75 Alive 23.388157895
V Yes 3.75 Dead 17.730263158
IV Yes 3.75 Alive 33.618421053
V No 3.7 Dead 36.217105263
IV Yes 3.7 Dead 20.230263158
IV Unknown 3.7 Alive 42.828947368
IV Unknown 3.7 Alive 1.8421052632
IV Unknown 3.7 Alive 8.4210526316
III Yes 3.7 Alive 7.7960526316
IV No 3.64 Alive 5.5263157895
IV Yes 3.64 Alive 17.072368421
IV Yes 3.63 Alive 17.565789474
III No 3.63 Alive 6.5460526316
IV Yes 3.6 Alive 37.894736842
IV Unknown 3.6 Dead 54.802631579
IV Unknown 3.6 Dead 25.822368421
IV Yes 3.6 Alive 26.480263158
IV Yes 3.6 Alive 4.6381578947
V Yes 3.55 Dead 2.0723684211
IV No 3.5 Alive -0.032894737
IV No 3.5 Alive 5.7565789474
UNK Yes 3.5 Alive 40.131578947
IV No 3.5 Alive 6.5789473684
IV Yes 3.5 Dead 2.4013157895
IV Unknown 3.5 Dead 25.756578947
III No 3.5 Alive 9.7368421053
III Yes 3.5 Dead 17.993421053
IV Yes 3.5 Alive 4.9671052632
IV Yes 3.5 Alive 20.559210526
III Yes 3.5 Alive 20.690789474
UNK Unknown 3.5 Alive 0.6578947368
IV Yes 3.5 Alive 5.625
IV No 3.48 Alive 8.7828947368
IV Yes 3.45 Dead 15.855263158
III No 3.41 Alive 13.486842105
IV No 3.4 Dead 17.006578947
V Yes 3.4 Alive 49.934210526
UNK Unknown 3.4 Alive 31.184210526
IV Unknown 3.4 Alive 20.592105263
V Unknown 3.4 Alive 17.302631579
IV No 3.4 Alive 13.355263158
IV Yes 3.4 Alive 12.993421053
III Yes 3.4 Alive 3.9473684211
IV No 3.37 Alive 3.0263157895
IV Yes 3.35 Alive 12.697368421
IV No 3.3 Alive .
V Unknown 3.3 Alive 58.256578947
IV Unknown 3.3 Alive 24.802631579
IV Yes 3.3 Alive 18.782894737
IV No 3.3 Alive 0.4276315789
IV Yes 3.3 Alive 5.3289473684
IV No 3.28 Alive 21.381578947
IV Yes 3.25 Dead 18.322368421
IV Yes 3.25 Alive 13.125
IV Yes 3.23 Alive 14.967105263
IV Yes 3.21 Alive 5.0986842105
IV Yes 3.2 Dead 1.1513157895
IV Unknown 3.2 Alive .
IV Unknown 3.2 Alive 36.414473684
IV No 3.2 Alive 5.1315789474
IV Yes 3.2 Alive 0.4605263158
IV No 3.19 Alive 9.7368421053
IV Yes 3.17 Alive 0
III No 3.17 Alive 24.440789474
IV Yes 3.16 Alive 4.1776315789
IV Yes 3.16 Alive 10.296052632
V Yes 3.15 Alive 6.9736842105
III Unknown 3.13 Alive 76.315789474
V Yes 3.13 Alive 14.671052632
IV No 3.12 Alive 8.3881578947
IV Yes 3.1 Dead 6.8421052632
IV No 3.1 Alive 41.513157895
UNK Unknown 3.1 Dead 14.407894737
IV Yes 3.1 Alive 18.388157895
IV Unknown 3.1 Alive 40.361842105
IV Yes 3.1 Alive 12.631578947
IV No 3.1 Alive 2.0394736842
IV No 3.08 Dead 22.006578947
III Unknown 3.08 Alive 20.756578947
IV Yes 3.03 Dead 8.9802631579
IV Unknown 3.01 Alive 13.585526316
IV Yes 3.01 Alive 16.940789474
IV Yes 3 Alive 22.598684211
IV Unknown 3 Dead 23.322368421
IV Unknown 3 Alive 21.973684211
IV Unknown 3 Alive 37.631578947
IV Yes 3 Dead 20.723684211
III No 3 Alive 26.480263158
IV Yes 3 Alive 49.078947368
IV Unknown 3 Alive 46.052631579
IV Unknown 3 Alive 28.256578947
UNK No 3 Alive 23.980263158
IV Yes 3 Alive 48.881578947
IV Yes 3 Alive 37.763157895
IV Yes 3 Alive 14.605263158
IV Yes 3 Dead 15.394736842
II Yes 3 Alive 3.2236842105
III Yes 3 Alive 19.342105263
IV Yes 3 Alive 2.3355263158
IV Unknown 3 Alive 1.0855263158
IV Yes 3 Alive 0.4605263158
IV Yes 3 Alive 4.375
IV No 3 Alive 14.901315789
III Yes 3 Alive 12.993421053
V Yes 3 Alive 54.835526316
IV Yes 3 Alive 0.9210526316
IV Yes 3 Alive 10.361842105
IV Unknown 3 Alive 3.9473684211
IV No 3 Alive 5.8223684211
IV No 3 Alive 2.6973684211
III Unknown 3 Alive 1.1184210526
IV Yes 3 Alive 39.243421053
V No 3 Alive 6.2828947368
IV Unknown 2.92 Alive 17.993421053
IV Unknown 2.92 Alive 4.4078947368
III Yes 2.91 Alive 53.914473684
IV Unknown 2.9 Alive .
IV Yes 2.9 Alive 32.631578947
IV No 2.9 Alive 47.434210526
IV Unknown 2.9 Alive 42.039473684
IV Unknown 2.9 Alive 36.184210526
IV Yes 2.9 Dead 21.414473684
III Yes 2.89 Alive 17.894736842
IV Yes 2.89 Alive 10.361842105
IV Unknown 2.89 Alive 5.5921052632
IV No 2.88 Alive 13.289473684
V No 2.87 Alive 12.171052632
III Yes 2.86 Alive 44.078947368
IV No 2.84 Alive 61.677631579
IV No 2.82 Alive 15.493421053
III Unknown 2.8 Alive 10.328947368
IV No 2.8 Alive 37.302631579
IV Unknown 2.8 Alive 0.2302631579
IV Yes 2.8 Alive 1.9736842105
III Unknown 2.8 Dead 50.230263158
V No 2.8 Dead 8.0921052632
V Unknown 2.8 Alive 29.144736842
IV Yes 2.8 Alive 35.230263158
IV Yes 2.8 Alive 42.861842105
IV No 2.8 Alive 36.184210526
III No 2.8 Alive 31.085526316
IV Yes 2.8 Alive 23.651315789
IV Unknown 2.8 Alive 0.5921052632
IV Unknown 2.8 Alive 15.361842105
IV Unknown 2.8 Alive 20.756578947
IV No 2.8 Alive 8.6842105263
III Yes 2.8 Dead 8.4868421053
IV Yes 2.77 Alive 70.394736842
IV Yes 2.77 Dead 22.631578947
IV Yes 2.75 Alive 86.315789474
IV No 2.75 Alive 22.828947368
IV Yes 2.75 Alive 24.210526316
IV Yes 2.75 Alive 33.552631579
IV Yes 2.75 Alive 5.5592105263
IV Yes 2.75 Alive 5.5921052632
IV Yes 2.75 Alive 5.8881578947
IV Yes 2.74 Alive 15.855263158
IV Yes 2.73 Alive 50.263157895
IV Yes 2.7 Dead 74.736842105
UNK No 2.7 Alive 60.559210526
IV Unknown 2.7 Alive 38.421052632
IV Unknown 2.7 Alive 83.223684211
III Yes 2.7 Dead 9.0131578947
IV No 2.7 Alive 25.131578947
IV No 2.7 Alive 31.282894737
IV No 2.7 Alive 10.065789474
IV No 2.64 Alive 46.710526316
III No 2.64 Alive 40.065789474
III Yes 2.63 Alive 40.986842105
V No 2.62 Alive 36.414473684
IV No 2.6 Dead 41.217105263
IV Unknown 2.6 Dead 40.065789474
IV No 2.6 Dead 50.690789474
III No 2.6 Alive 49.506578947
IV Yes 2.6 Alive 48.717105263
IV No 2.6 Alive 1.0197368421
IV No 2.6 Alive 48.618421053
IV Yes 2.6 Alive 19.868421053
IV Yes 2.6 Alive 7.2697368421
IV No 2.6 Alive 13.026315789
IV No 2.6 Alive 4.6710526316
IV Unknown 2.58 Alive 18.421052632
III Unknown 2.57 Dead 27.335526316
IV Yes 2.57 Alive 20.888157895
IV No 2.55 Alive 47.730263158
IV No 2.55 Alive 39.835526316
IV No 2.55 Alive 16.809210526
IV Yes 2.55 Alive 0.4934210526
III Unknown 2.55 Alive 37.039473684
III Yes 2.55 Alive 39.177631579
IV No 2.55 Alive 2.5986842105
IV Unknown 2.55 Alive 14.013157895
IV No 2.54 Dead 48.848684211
IV No 2.54 Alive 9.7697368421
IV Yes 2.52 Alive 3.1907894737
III Unknown 2.5 Alive 24.046052632
III No 2.5 Alive 1.5460526316
IV No 2.5 Alive 68.355263158
III Yes 2.5 Alive 65.592105263
IV Unknown 2.5 Dead 5.8881578947
IV Yes 2.5 Alive 2.5657894737
IV Unknown 2.5 Dead 15.032894737
IV Unknown 2.5 Alive 0.6907894737
IV Yes 2.5 Alive 26.875
IV No 2.5 Alive 7.5986842105
IV Yes 2.5 Alive 18.651315789
IV No 2.5 Alive 14.736842105
IV Yes 2.5 Alive 14.506578947
III Unknown 2.5 Alive 0.3947368421
III Unknown 2.5 Alive 39.243421053
IV Yes 2.5 Alive 14.309210526
IV Yes 2.5 Alive 17.993421053
IV Yes 2.5 Alive 43.059210526
V Yes 2.5 Alive 3.8815789474
IV Unknown 2.5 Alive 6.875
IV No 2.5 Alive 7.8618421053
IV No 2.5 Alive 28.486842105
III Yes 2.5 Alive 26.25
IV No 2.49 Dead 13.75
IV No 2.46 Alive 18.059210526
IV No 2.45 Alive 14.769736842
IV No 2.45 Alive 9.2105263158
IV Yes 2.44 Dead 19.243421053
IV No 2.44 Alive 0.4605263158
III Yes 2.4 Dead 28.684210526
IV Unknown 2.4 Dead 31.480263158
IV Yes 2.4 Alive 4.6381578947
IV Yes 2.4 Dead 33.486842105
IV No 2.4 Alive 7.8289473684
IV No 2.4 Alive 37.763157895
IV No 2.4 Alive 66.743421053
IV Unknown 2.4 Alive 8.7171052632
IV No 2.4 Alive 20.986842105
III Yes 2.4 Dead 68.092105263
IV No 2.4 Alive 15.690789474
IV No 2.38 Dead 29.276315789
IV Yes 2.38 Alive 21.546052632
IV Yes 2.35 Alive 7.9276315789
IV Yes 2.35 Alive 5.0328947368
IV Yes 2.34 Alive 41.907894737
IV Yes 2.34 Alive 54.407894737
III Yes 2.32 Alive 36.151315789
IV Yes 2.32 Alive 15.394736842
IV Yes 2.31 Alive 30.296052632
IV Yes 2.3 Dead 66.25
IV No 2.3 Dead 39.078947368
III Yes 2.3 Dead 16.644736842
III Unknown 2.3 Alive 45.888157895
IV Yes 2.3 Alive 14.407894737
IV No 2.3 Alive 34.703947368
IV Unknown 2.3 Alive 63.289473684
III Yes 2.3 Dead 27.730263158
III Unknown 2.3 Alive 45.032894737
III No 2.3 Alive 22.861842105
IV Unknown 2.3 Alive 19.210526316
IV No 2.3 Alive 97.894736842
V Unknown 2.3 Alive 19.407894737
IV Yes 2.3 Alive 14.046052632
IV No 2.3 Alive 5.3618421053
IV Yes 2.3 Alive 54.111842105
IV No 2.3 Alive 56.25
IV Yes 2.3 Alive 45.032894737
IV Unknown 2.28 Dead 64.605263158
IV No 2.28 Alive 25.855263158
IV No 2.27 Alive 68.157894737
III Unknown 2.25 Alive 7.3684210526
IV No 2.25 Alive 17.763157895
IV Yes 2.25 Alive 10.361842105
V No 2.25 Alive 13.256578947
III No 2.25 Alive 11.480263158
UNK Unknown 2.25 Alive 0.2960526316
IV Unknown 2.25 Alive 5.3289473684
IV No 2.24 Alive 42.138157895
IV Yes 2.24 Alive 6.4473684211
IV Yes 2.23 Alive 0.4605263158
IV No 2.2 Alive 19.276315789
IV Yes 2.2 Alive 67.072368421
III Yes 2.2 Alive 61.743421053
IV Yes 2.2 Alive 46.776315789
IV Yes 2.2 Alive 4.1447368421
IV Yes 2.2 Dead 13.190789474
IV No 2.2 Alive 38.552631579
III Yes 2.2 Dead 34.539473684
III Yes 2.2 Alive 0.2631578947
III Unknown 2.2 Alive 22.302631579
III No 2.2 Alive -8.256578947
IV Unknown 2.2 Alive 2.4013157895
IV Unknown 2.2 Dead 23.421052632
IV No 2.2 Alive 25.131578947
IV No 2.2 Alive 13.256578947
IV No 2.2 Alive 11.052631579
IV No 2.2 Alive 21.085526316
IV Unknown 2.2 Alive 6.0855263158
IV No 2.2 Alive 10.098684211
III Yes 2.19 Alive 53.092105263
IV No 2.16 Alive 2.4013157895
IV No 2.15 Dead 42.993421053
III Yes 2.15 Dead 30
III Yes 2.12 Alive 7.6644736842
IV No 2.12 Alive 26.842105263
IV Yes 2.11 Alive 23.947368421
III No 2.1 Dead 67.006578947
IV No 2.1 Alive .
IV No 2.1 Alive 57.927631579
IV Unknown 2.1 Alive 30.263157895
III Unknown 2.1 Alive 36.875
IV Unknown 2.1 Alive 35.690789474
IV Unknown 2.1 Alive 29.901315789
IV No 2.1 Alive 36.184210526
II Unknown 2.1 Alive .
IV No 2.1 Alive 31.381578947
IV No 2.1 Alive 11.940789474
IV No 2.1 Alive 23.914473684
IV No 2.1 Alive 1.3157894737
II No 2.1 Alive 20.230263158
IV No 2.1 Alive 1.6118421053
IV Yes 2.1 Alive 12.434210526
IV No 2.1 Alive 22.828947368
IV Yes 2.1 Alive 10.921052632
IV No 2.05 Alive 49.111842105
IV Yes 2.05 Alive .
III Yes 2.05 Alive 8.8815789474
IV No 2.05 Alive 10.592105263
IV No 2.04 Alive 1.875
IV No 2.03 Alive 7.4671052632
IV No 2.02 Alive 34.375
IV No 2 Alive 81.875
IV Unknown 2 Alive .
IV No 2 Dead 37.171052632
IV No 2 Alive 35.394736842
IV No 2 Alive 0.4605263158
IV No 2 Alive 62.401315789
III No 2 Alive .
III No 2 Alive 11.973684211
IV No 2 Alive 58.322368421
IV No 2 Alive 14.802631579
IV Unknown 2 Alive 11.611842105
III No 2 Alive 38.059210526
IV No 2 Alive 42.401315789
IV Unknown 2 Alive 29.046052632
II Yes 2 Alive 34.078947368
IV No 2 Alive 46.348684211
IV Unknown 2 Alive 23.256578947
III No 2 Alive 0.4934210526
IV No 2 Alive 10.953947368
IV No 2 Alive 3.0592105263
IV Yes 2 Alive 0.9210526316
III Unknown 1.98 Dead 18.092105263
IV Yes 1.96 Alive 21.282894737
IV Yes 1.95 Dead 26.480263158
III No 1.95 Alive 54.144736842
IV Unknown 1.95 Alive 24.901315789
IV No 1.95 Alive 1.0855263158
III Yes 1.95 Alive 8.0592105263
IV Unknown 1.93 Alive 22.105263158
IV Yes 1.92 Alive 9.375
III No 1.9 Alive 57.828947368
IV Yes 1.9 Alive 25.526315789
UNK Yes 1.9 Alive 35.690789474
IV Unknown 1.9 Alive 10.460526316
UNK Yes 1.9 Alive 34.046052632
IV No 1.89 Alive 14.309210526
II No 1.87 Alive 38.684210526
IV No 1.87 Alive 21.315789474
IV Unknown 1.87 Alive 24.375
IV No 1.87 Alive 14.934210526
IV Yes 1.87 Alive 10.296052632
III No 1.86 Alive 56.414473684
IV No 1.86 Alive 30.230263158
IV Unknown 1.85 Alive 31.348684211
IV No 1.85 Alive 5.4605263158
IV Yes 1.85 Alive 7.4671052632
IV No 1.85 Alive 0.6907894737
III Yes 1.84 Alive 42.368421053
IV Unknown 1.84 Alive 2.5328947368
IV No 1.83 Alive 27.664473684
III Yes 1.83 Alive 33.980263158
III No 1.82 Alive 20.197368421
III Yes 1.82 Alive 24.013157895
IV Unknown 1.81 Alive 29.078947368
III No 1.8 Dead 11.677631579
III No 1.8 Alive 76.907894737
III Yes 1.8 Alive 66.710526316
IV Unknown 1.8 Dead 37.269736842
III No 1.8 Alive 25.361842105
IV Yes 1.8 Alive 47.664473684
III No 1.8 Alive 45.789473684
IV Yes 1.8 Dead 6.8421052632
IV Unknown 1.8 Alive 41.414473684
IV Yes 1.8 Dead 24.572368421
III No 1.8 Alive 24.309210526
IV Unknown 1.8 Alive 22.730263158
III No 1.8 Alive 15.427631579
IV Unknown 1.8 Alive 9.8684210526
III Yes 1.8 Alive 52.796052632
IV Yes 1.79 Dead 37.796052632
III Yes 1.79 Alive 18.421052632
IV No 1.78 Alive 58.782894737
IV Yes 1.78 Alive 8.2894736842
IV Yes 1.78 Alive 27.861842105
III Unknown 1.77 Alive 11.677631579
IV No 1.76 Alive 42.006578947
IV No 1.76 Alive 9.1118421053
IV Yes 1.75 Alive 4.4078947368
IV No 1.75 Alive 28.782894737
IV No 1.75 Alive 16.578947368
IV Yes 1.75 Alive 15.855263158
IV No 1.75 Alive 12.236842105
IV Unknown 1.75 Alive 42.368421053
IV Yes 1.75 Alive 4.6381578947
III Yes 1.74 Alive 45.328947368
IV No 1.74 Alive 35.131578947
IV No 1.73 Alive 60.394736842
IV No 1.73 Alive 1.9736842105
IV Yes 1.73 Alive 55.592105263
IV Unknown 1.72 Dead 44.407894737
IV No 1.72 Alive 51.151315789
III No 1.72 Alive 26.019736842
IV No 1.72 Alive 19.901315789
IV No 1.72 Alive 11.282894737
IV No 1.72 Alive 20.032894737
III No 1.71 Alive 45.921052632
III Unknown 1.71 Alive 47.927631579
IV Unknown 1.7 Alive 57.993421053
III Yes 1.7 Alive 76.315789474
III No 1.7 Alive 2.5328947368
IV No 1.7 Alive 54.638157895
IV No 1.7 Alive 33.157894737
III No 1.7 Alive 24.309210526
IV No 1.7 Alive 3.125
IV Yes 1.7 Alive 4.0460526316
IV Unknown 1.7 Alive 38.092105263
III No 1.69 Alive .
IV No 1.68 Alive 18.552631579
IV Unknown 1.68 Alive 3.6513157895
IV No 1.68 Alive 15.098684211
IV No 1.68 Alive 1.4144736842
IV Yes 1.67 Alive 7.3355263158
III No 1.67 Alive 14.605263158
III Yes 1.66 Alive 0.4276315789
IV No 1.65 Alive 28.684210526
III No 1.65 Alive 35.098684211
IV No 1.65 Alive .
IV No 1.65 Alive 25.361842105
IV No 1.65 Alive 31.842105263
IV Unknown 1.65 Alive 4.9671052632
IV No 1.62 Dead 29.638157895
IV Unknown 1.62 Alive 19.111842105
IV No 1.62 Alive 57.631578947
IV Unknown 1.62 Alive 11.118421053
III No 1.6 Alive 67.302631579
IV No 1.6 Alive 58.848684211
IV No 1.6 Alive 39.967105263
IV Yes 1.6 Alive 40.197368421
UNK No 1.6 Alive 29.440789474
III Unknown 1.6 Alive 45
IV Yes 1.6 Alive 13.684210526
IV Unknown 1.6 Alive 16.578947368
III Yes 1.6 Alive 18.190789474
IV Yes 1.6 Alive 27.171052632
III Yes 1.6 Alive 26.875
IV Yes 1.6 Alive 10
IV Yes 1.6 Alive 2.9934210526
IV Yes 1.6 Dead 10.098684211
III Unknown 1.6 Alive 16.118421053
III Yes 1.6 Alive 0.4605263158
III No 1.6 Alive 71.151315789
IV No 1.59 Alive 11.315789474
III No 1.58 Alive 55.394736842
III No 1.58 Alive 0.5263157895
III No 1.58 Alive 29.901315789
IV No 1.57 Alive 30.032894737
III No 1.56 Alive 36.414473684
IV Unknown 1.56 Alive 30.657894737
III Unknown 1.56 Alive 64.802631579
III No 1.56 Alive 13.651315789
IV No 1.56 Alive 43.125
III Yes 1.55 Alive 16.940789474
III No 1.55 Alive 68.322368421
IV No 1.55 Alive 24.901315789
IV No 1.55 Alive 3.4210526316
IV No 1.54 Alive 36.414473684
IV No 1.54 Alive 1.8421052632
IV No 1.53 Dead 28.651315789
IV No 1.52 Alive 37.401315789
UNK No 1.52 Alive 16.677631579
IV No 1.51 Alive 38.223684211
IV No 1.51 Alive 4.9342105263
IV No 1.5 Alive -2.894736842
IV Unknown 1.5 Alive 45.592105263
II Unknown 1.5 Dead 68.848684211
III Yes 1.5 Alive 10.328947368
UNK Yes 1.5 Alive 3.8815789474
IV No 1.5 Alive 12.796052632
IV No 1.5 Alive 6.2171052632
IV No 1.5 Alive 10.098684211
III No 1.5 Alive 53.848684211
IV Unknown 1.5 Alive 36.973684211
IV Unknown 1.5 Alive 20.986842105
IV Unknown 1.5 Alive 21.480263158
III Yes 1.5 Alive 17.631578947
III Unknown 1.5 Alive 75.460526316
IV Yes 1.5 Alive 18.914473684
IV No 1.5 Alive 15.690789474
IV No 1.5 Alive 13.453947368
IV No 1.5 Alive 3.1578947368
IV Yes 1.5 Alive 9.9671052632
IV Unknown 1.5 Alive 26.282894737
IV No 1.5 Alive 13.026315789
III Unknown 1.5 Alive 7.6644736842
IV No 1.5 Alive 0.7894736842
IV No 1.5 Alive 7.9934210526
III Yes 1.5 Alive 10.789473684
III No 1.5 Alive 4.5723684211
IV Unknown 1.5 Alive 19.177631579
IV No 1.5 Alive 44.868421053
IV No 1.49 Alive 5.3618421053
IV No 1.48 Alive 78.519736842
IV Unknown 1.48 Alive 30.559210526
III Unknown 1.47 Alive 5.5921052632
IV Unknown 1.46 Alive 41.710526316
IV No 1.46 Alive 12.138157895
IV No 1.45 Alive 73.256578947
III No 1.45 Alive 31.151315789
III No 1.45 Alive 60.986842105
IV No 1.45 Alive 4.4407894737
IV Unknown 1.45 Alive 35.296052632
IV No 1.45 Alive 25.164473684
IV No 1.45 Alive 4.2105263158
III Unknown 1.45 Alive 2.0065789474
IV No 1.44 Alive 4.0131578947
III No 1.43 Alive 26.282894737
IV Yes 1.43 Alive 48.092105263
IV Yes 1.43 Alive 11.019736842
IV No 1.42 Alive 1.7763157895
IV No 1.42 Alive 9.375
IV Unknown 1.4 Alive 6.7105263158
III No 1.4 Alive 80.197368421
IV No 1.4 Alive 30.361842105
IV No 1.4 Alive 57.401315789
III No 1.4 Alive 84.967105263
III No 1.4 Alive 48.585526316
IV No 1.4 Alive 1.6118421053
III No 1.4 Alive 14.967105263
III Yes 1.4 Alive 9.0131578947
III Unknown 1.4 Alive 18.848684211
IV No 1.4 Alive 0.7565789474
III No 1.4 Alive 18.421052632
V Unknown 1.4 Dead 7.4342105263
IV Unknown 1.4 Alive 7.4013157895
IV Unknown 1.4 Alive 3.7171052632
IV Unknown 1.4 Alive 1.6118421053
IV Yes 1.39 Alive 14.078947368
III Yes 1.38 Alive 1.6776315789
IV Unknown 1.38 Alive 10.394736842
IV No 1.37 Alive 61.875
III Yes 1.37 Alive 19.835526316
IV No 1.36 Alive 0.3947368421
III No 1.35 Alive 53.026315789
IV No 1.35 Alive 0.3947368421
III No 1.35 Alive 2.3684210526
III Unknown 1.35 Alive 23.157894737
III No 1.35 Alive 10.493421053
III No 1.35 Alive 4.6710526316
IV No 1.35 Dead 83.552631579
IV No 1.34 Alive 50.921052632
IV No 1.33 Alive 72.368421053
III No 1.33 Alive 33.815789474
IV No 1.32 Alive 41.611842105
IV Unknown 1.32 Alive 5.5921052632
III Unknown 1.32 Alive 56.282894737
III No 1.32 Alive 84.111842105
IV No 1.32 Alive 36.513157895
IV Unknown 1.31 Alive 39.605263158
IV No 1.31 Alive 49.703947368
IV No 1.3 Alive 79.144736842
III No 1.3 Alive 13.519736842
III No 1.3 Alive 71.151315789
III No 1.3 Alive 45.723684211
III No 1.3 Alive 44.473684211
IV Unknown 1.3 Dead 21.019736842
III Unknown 1.3 Alive 0.7236842105
II Yes 1.3 Alive 47.861842105
IV Unknown 1.3 Alive 1.1842105263
IV No 1.3 Alive 13.355263158
IV No 1.3 Alive 11.842105263
III No 1.3 Alive 12.664473684
IV Yes 1.3 Alive 9.7368421053
IV No 1.3 Alive 9.2434210526
III No 1.3 Alive 9.9671052632
IV Yes 1.3 Alive 2.4342105263
III Unknown 1.29 Alive 12.960526316
III Yes 1.28 Alive 20.328947368
IV No 1.28 Alive 48.815789474
IV No 1.28 Alive 33.388157895
III No 1.28 Alive 1.7105263158
IV Yes 1.27 Dead 50.822368421
IV No 1.27 Dead 14.276315789
III No 1.27 Alive 15.394736842
III Unknown 1.26 Alive 5.5592105263
IV No 1.25 Alive 13.125
IV No 1.25 Alive 9.6052631579
IV No 1.25 Alive 29.309210526
III Unknown 1.25 Alive -8.453947368
III No 1.25 Alive 32.861842105
III No 1.25 Alive 87.5
IV Unknown 1.25 Alive 3.5197368421
IV Unknown 1.25 Alive 22.171052632
III No 1.24 Alive 29.671052632
UNK Unknown 1.23 Dead 86.677631579
IV Unknown 1.23 Alive 35.888157895
IV No 1.22 Alive 34.046052632
III No 1.22 Alive 8.5197368421
IV Unknown 1.21 Alive 29.506578947
UNK Unknown 1.2 Alive 0.5592105263
III No 1.2 Alive 88.421052632
III Yes 1.2 Alive 79.769736842
IV No 1.2 Alive 9.5394736842
UNK No 1.2 Alive 77.828947368
IV No 1.2 Alive 0.625
III Yes 1.2 Alive 80.625
III No 1.2 Alive 59.802631579
III No 1.2 Alive 70.822368421
III No 1.2 Alive 67.467105263
III No 1.2 Alive 58.75
III No 1.2 Alive 28.125
II No 1.2 Alive 47.565789474
IV Unknown 1.2 Alive 61.25
IV No 1.2 Alive 29.539473684
III Unknown 1.2 Alive 49.013157895
III No 1.2 Alive 12.006578947
IV No 1.2 Alive 21.513157895
IV Unknown 1.2 Alive 13.815789474
IV Unknown 1.2 Alive 0.5263157895
III No 1.2 Alive 1.6118421053
IV No 1.2 Alive 9.2434210526
III No 1.2 Alive 1.7105263158
II Unknown 1.2 Alive 25.098684211
IV Unknown 1.2 Alive 37.006578947
III Yes 1.2 Alive 47.697368421
IV No 1.2 Alive 9.4078947368
III No 1.18 Alive 13.75
III No 1.18 Alive 12.5
III No 1.17 Alive 54.375
IV No 1.15 Alive 59.144736842
III Yes 1.15 Alive .
III Unknown 1.15 Alive 37.039473684
III Unknown 1.15 Alive 1.0197368421
IV Unknown 1.15 Alive 0.8552631579
III No 1.15 Alive 34.506578947
IV No 1.15 Alive 24.835526316
IV No 1.15 Alive 16.414473684
III No 1.15 Alive .
IV Unknown 1.15 Alive 5.1644736842
II No 1.14 Alive 30.197368421
IV Yes 1.14 Alive 8.2894736842
IV No 1.12 Alive 50.230263158
III No 1.12 Alive 13.552631579
IV No 1.1 Alive 93.519736842
III No 1.1 Alive 88.618421053
III No 1.1 Alive 60.789473684
III Unknown 1.1 Alive .
III Yes 1.1 Alive 55
III No 1.1 Alive 34.210526316
IV Yes 1.1 Alive 0.5592105263
III No 1.1 Alive 39.111842105
III No 1.1 Alive 21.743421053
IV No 1.1 Alive 18.190789474
III Unknown 1.1 Alive 41.315789474
III No 1.1 Alive 11.118421053
IV No 1.1 Alive 32.236842105
III No 1.1 Alive 31.546052632
III No 1.1 Alive 29.506578947
IV Unknown 1.1 Alive 28.486842105
IV No 1.1 Alive 29.736842105
III Unknown 1.1 Alive 20.394736842
III Unknown 1.1 Alive 29.243421053
IV Unknown 1.1 Dead 80.921052632
IV No 1.1 Alive 15.789473684
IV No 1.1 Alive 15.032894737
III No 1.1 Alive 5.0657894737
III Yes 1.1 Alive 7.0394736842
IV No 1.1 Alive 34.967105263
III Yes 1.1 Alive 7.1052631579
III No 1.1 Alive 5.5592105263
II Yes 1.1 Alive 15.197368421
IV Unknown 1.1 Alive 4.9013157895
IV Yes 1.1 Alive 4.375
IV Unknown 1.1 Alive 10.065789474
IV Unknown 1.08 Alive 6.7763157895
IV Unknown 1.08 Alive 15.427631579
IV No 1.07 Alive 13.125
III Yes 1.05 Alive 8.5197368421
II Unknown 1.05 Alive 30.427631579
IV Yes 1.05 Alive 1.1513157895
III No 1.05 Alive 4.5065789474
III No 1.05 Alive 6.6776315789
IV No 1.05 Alive 3.2894736842
IV No 1.05 Alive 4.6052631579
III Unknown 1.05 Alive 1.7105263158
III Unknown 1.04 Alive 42.335526316
III Unknown 1.04 Alive 12.894736842
III Unknown 1.04 Alive 4.6710526316
III Unknown 1.04 Alive 19.177631579
III No 1.04 Alive 15.394736842
IV Yes 1.04 Alive 13.289473684
III Yes 1.04 Alive 8.5197368421
III No 1.04 Alive 9.2105263158
III No 1.03 Alive 19.111842105
III No 1.02 Alive 5.2631578947
III No 1.02 Alive 44.046052632
IV No 1.02 Alive 34.375
III No 1.01 Alive 11.381578947
III No 1.01 Alive 79.934210526
III Unknown 1 Alive 36.513157895
III No 1 Dead 14.078947368
III No 1 Alive 13.322368421
III No 1 Alive 6.1513157895
III No 1 Alive 57.828947368
III Unknown 1 Alive 42.138157895
IV Yes 1 Alive 23.092105263
III No 1 Alive 9.1447368421
III Unknown 1 Alive 1.3815789474
III No 1 Alive 12.664473684
IV Unknown 1 Alive 10.559210526
III Unknown 1 Alive 2.2039473684
III Unknown 1 Alive 16.019736842
III Unknown 1 Alive 13.026315789
III No 1 Alive 15.921052632
IV Unknown 1 Alive 23.223684211
IV No 1 Alive 17.072368421
IV Yes 1 Alive 17.072368421
IV Yes 1 Alive 15.427631579
IV No 1 Alive 9.9671052632
III No 1 Alive 22.368421053
III No 1 Alive 12.171052632
III Unknown 1 Alive 67.072368421
IV Yes 1 Alive 2.2697368421
III No 1 Alive 1.1513157895
III No 1 Alive 1.8092105263
III No 1 Alive 63.782894737
II No 1 Alive 51.546052632
III No 1 Alive 50.361842105
IV Unknown 1 Alive 9.5065789474
IV No 1 Alive 9.2434210526
IV No 0.99 Alive 14.572368421
IV No 0.98 Alive 13.190789474
III No 0.98 Alive 53.651315789
III No 0.98 Alive 2.6315789474
III No 0.97 Alive 23.914473684
III No 0.97 Alive 60
III No 0.97 Alive 38.914473684
III No 0.96 Alive 39.111842105
III No 0.95 Alive 40.723684211
III No 0.95 Alive 13.914473684
IV No 0.95 Alive 74.440789474
III Unknown 0.95 Alive 4.9013157895
III No 0.95 Alive 3.75
II No 0.95 Alive 5.3289473684
IV No 0.95 Alive 7.2697368421
IV No 0.95 Alive 8.3881578947
IV No 0.95 Alive 61.085526316
III Unknown 0.94 Alive 36.217105263
I Unknown 0.94 Alive .
III No 0.94 Alive 11.578947368
III Unknown 0.94 Alive 64.736842105
III No 0.93 Alive 3.9144736842
III Unknown 0.93 Alive 34.144736842
IV No 0.92 Alive 58.980263158
III Unknown 0.92 Alive 11.315789474
III No 0.92 Alive 11.644736842
IV No 0.92 Alive 55.789473684
III Unknown 0.92 Alive 29.506578947
III No 0.92 Alive 22.072368421
III No 0.92 Alive 4.3421052632
IV Unknown 0.92 Alive 4.2105263158
III No 0.91 Alive 0.5263157895
III Unknown 0.9 Dead 18.519736842
III Unknown 0.9 Alive 7.5986842105
III Unknown 0.9 Alive 0.625
III No 0.9 Alive 25.263157895
V Unknown 0.9 Dead 8.0592105263
IV No 0.9 Alive 36.940789474
III No 0.9 Alive 37.401315789
IV No 0.9 Alive 36.414473684
IV Unknown 0.9 Alive 9.9342105263
III Unknown 0.9 Alive 51.184210526
IV Unknown 0.9 Alive 0.9539473684
IV Unknown 0.9 Alive 30.625
III Unknown 0.9 Alive 27.072368421
II Unknown 0.9 Alive .
III Unknown 0.9 Alive 54.835526316
III No 0.9 Alive 13.947368421
IV No 0.9 Alive 16.743421053
III No 0.9 Alive 9.5394736842
III Unknown 0.9 Alive 18.651315789
III Unknown 0.9 Alive 4.8355263158
IV No 0.9 Alive 7.9605263158
IV Yes 0.9 Alive 81.25
III Unknown 0.9 Alive 14.967105263
III No 0.9 Alive 2.1381578947
IV No 0.89 Alive 47.434210526
III No 0.89 Alive 11.973684211
III Yes 0.88 Alive 24.243421053
IV No 0.88 Alive 22.368421053
IV No 0.87 Alive 25.427631579
III No 0.86 Alive 7.6315789474
III No 0.86 Alive 33.453947368
III No 0.86 Alive 30.296052632
II No 0.85 Alive 72.796052632
IV No 0.85 Alive 0.9868421053
III No 0.85 Alive 36.118421053
III Unknown 0.85 Alive 16.677631579
III No 0.85 Alive 2.0065789474
II Unknown 0.85 Alive 5.9868421053
III Unknown 0.85 Alive .
III Unknown 0.85 Alive 19.802631579
II No 0.85 Alive 17.532894737
IV No 0.85 Alive 2.7302631579
III Yes 0.85 Alive 14.407894737
IV Yes 0.85 Alive 0.9539473684
III No 0.85 Alive 11.940789474
III No 0.84 Alive 23.486842105
III No 0.83 Alive 35.526315789
III No 0.83 Alive 16.052631579
III No 0.82 Alive 14.539473684
III No 0.82 Alive 0.625
III Unknown 0.82 Alive 0.1973684211
IV Unknown 0.82 Alive 29.835526316
IV Unknown 0.82 Alive 13.486842105
III No 0.82 Alive 5.7236842105
III No 0.82 Alive 5.0986842105
III Unknown 0.81 Alive 93.717105263
II No 0.81 Alive 0.5592105263
III No 0.81 Alive 24.703947368
III Unknown 0.8 Alive 0.2302631579
III No 0.8 Alive 62.269736842
III No 0.8 Alive 77.861842105
III Yes 0.8 Alive 16.151315789
III Yes 0.8 Alive 44.802631579
III No 0.8 Alive 34.013157895
IV No 0.8 Alive 25.098684211
III Unknown 0.8 Alive 31.480263158
III Unknown 0.8 Alive 37.105263158
III No 0.8 Alive 0.8881578947
II No 0.8 Alive 30.921052632
III No 0.8 Alive 8.9473684211
II Unknown 0.8 Alive 31.414473684
III No 0.8 Alive 16.019736842
IV Unknown 0.8 Alive 23.881578947
III Unknown 0.8 Alive 1.875
II No 0.8 Alive 97.796052632
III Yes 0.8 Alive 8.8157894737
IV Unknown 0.8 Alive 7.8947368421
III Unknown 0.8 Alive 7.1052631579
III Yes 0.8 Alive 7.2039473684
II No 0.8 Alive 0.3618421053
III No 0.8 Alive 2.0394736842
III No 0.79 Alive 38.618421053
I No 0.79 Alive 7.1052631579
III No 0.79 Alive 59.111842105
III No 0.78 Alive 50.230263158
II No 0.78 Alive 7.1381578947
III No 0.77 Alive 39.506578947
III Unknown 0.77 Alive 26.118421053
III Unknown 0.77 Alive 12.796052632
IV No 0.76 Alive 24.210526316
III No 0.76 Alive 30.065789474
III No 0.76 Alive 29.111842105
III No 0.76 Alive 25.822368421
III No 0.76 Alive 6.4473684211
II No 0.75 Alive 39.769736842
III Unknown 0.75 Alive .
II Unknown 0.75 Alive 1.875
II No 0.75 Alive 65.625
III No 0.75 Alive 7.1710526316
IV Yes 0.75 Alive 32.532894737
II No 0.75 Alive 3.3881578947
UNK Unknown 0.75 Dead 11.809210526
III No 0.75 Alive 80.296052632
IV No 0.75 Dead 40.625
III No 0.75 Alive 1.9736842105
III Unknown 0.75 Alive 15.855263158
IV No 0.75 Alive 0.7565789474
III Unknown 0.75 Dead 31.414473684
III No 0.75 Alive 2.2039473684
III No 0.75 Alive 26.677631579
III No 0.75 Alive 41.085526316
III Unknown 0.75 Alive 50.822368421
II Unknown 0.74 Alive 9.4078947368
III No 0.74 Alive 61.085526316
II No 0.74 Alive 2.1052631579
II No 0.74 Alive 7.3684210526
II No 0.73 Alive 1.875
III No 0.72 Alive 89.868421053
IV Yes 0.72 Alive 4.1447368421
III No 0.72 Alive 55.328947368
III No 0.72 Alive 31.578947368
II No 0.72 Alive 0.2960526316
IV Unknown 0.72 Alive 0.4605263158
III No 0.71 Alive 31.414473684
II Unknown 0.71 Alive 90.164473684
IV No 0.7 Alive 5.0657894737
III Unknown 0.7 Alive 0.8223684211
IV No 0.7 Alive 34.638157895
II No 0.7 Dead 2.9934210526
II No 0.7 Alive 1.5131578947
III Unknown 0.7 Alive 0.9210526316
III No 0.7 Alive 12.532894737
II Yes 0.7 Alive .
II No 0.7 Alive 3.9473684211
II No 0.7 Alive 7.9276315789
III Yes 0.7 Alive 19.901315789
II No 0.7 Alive 1.5789473684
III Yes 0.7 Alive 30.888157895
III No 0.7 Alive 13.355263158
III No 0.7 Alive 5.2960526316
III Yes 0.69 Alive 23.618421053
III Unknown 0.69 Alive 34.605263158
II Yes 0.68 Dead 25.625
IV No 0.68 Alive 57.631578947
III No 0.68 Alive 40.460526316
II No 0.68 Alive 37.335526316
II No 0.67 Alive 55.559210526
III No 0.67 Alive 0.2960526316
III Unknown 0.67 Alive 58.848684211
I No 0.66 Alive 22.598684211
III No 0.65 Alive 23.980263158
III No 0.65 Alive 27.434210526
III No 0.65 Alive 43.355263158
II No 0.65 Alive 20.855263158
III No 0.65 Alive 52.269736842
III No 0.65 Alive 23.355263158
III No 0.65 Alive 36.052631579
III No 0.65 Alive .
III Yes 0.65 Alive 12.236842105
III Unknown 0.65 Alive 1.8421052632
II No 0.65 Alive 19.144736842
II Unknown 0.65 Alive .
II Unknown 0.65 Alive 11.875
III No 0.65 Alive 7.5986842105
II No 0.65 Alive 1.2171052632
III No 0.65 Alive 32.894736842
II No 0.64 Alive 18.223684211
UNK No 0.64 Alive 0.4276315789
III No 0.64 Alive 11.677631579
III No 0.63 Alive .
II No 0.63 Alive 3.125
III Unknown 0.63 Alive 9.8684210526
II No 0.63 Alive 37.993421053
II No 0.63 Alive .
II Unknown 0.63 Alive 8.7171052632
IV No 0.63 Alive 46.973684211
III No 0.62 Alive 73.881578947
III No 0.62 Alive 1.2828947368
III No 0.62 Alive 2.9934210526
III No 0.62 Alive 34.539473684
III Unknown 0.62 Alive 35.625
II No 0.62 Alive 39.177631579
III No 0.62 Alive .
II Unknown 0.61 Alive 0.5592105263
II Unknown 0.61 Alive 3.0921052632
II No 0.61 Alive 7.0065789474
II Unknown 0.6 Alive 60.197368421
II No 0.6 Alive 54.078947368
III No 0.6 Alive 1.1184210526
III No 0.6 Alive 14.769736842
III No 0.6 Alive 12.236842105
II No 0.6 Alive 56.315789474
II Unknown 0.6 Alive 2.0723684211
II No 0.6 Alive 31.052631579
II No 0.6 Alive 57.763157895
III Unknown 0.6 Alive 30.888157895
II No 0.6 Alive 34.736842105
II No 0.6 Alive 28.355263158
II No 0.6 Alive .
III Unknown 0.6 Alive .
II Unknown 0.6 Alive 0.3618421053
III No 0.6 Alive .
III No 0.6 Alive 9.6052631579
III No 0.6 Alive 11.546052632
III No 0.6 Alive 0.4605263158
III No 0.6 Alive 46.743421053
III No 0.6 Alive 3.9473684211
II No 0.6 Alive 32.894736842
III No 0.6 Alive 1.875
II No 0.6 Alive .
II No 0.59 Alive .
III No 0.59 Alive 8.0592105263
III Yes 0.59 Alive 7.5657894737
II No 0.58 Alive .
III Unknown 0.58 Alive 32.861842105
III No 0.58 Alive 11.644736842
III Unknown 0.57 Alive 4.7697368421
II No 0.57 Dead 14.177631579
III Yes 0.57 Alive 17.861842105
III No 0.57 Alive 10.032894737
II No 0.55 Alive 2.4342105263
II No 0.55 Alive 46.611842105
III No 0.55 Alive 63.815789474
III No 0.55 Alive 72.236842105
III Unknown 0.55 Alive 70.230263158
II No 0.55 Alive 0.4605263158
III No 0.55 Alive 37.796052632
III No 0.55 Alive 0.4605263158
III No 0.55 Dead 4.7368421053
II Unknown 0.55 Alive 19.605263158
II Unknown 0.55 Alive .
II No 0.55 Alive 30.592105263
II Unknown 0.55 Alive 0
III Unknown 0.55 Alive 0.7894736842
II Unknown 0.54 Alive 24.177631579
III No 0.54 Alive 19.901315789
II Unknown 0.54 Alive 48.75
II Unknown 0.54 Alive 1.1842105263
III Unknown 0.54 Alive 9.8026315789
II No 0.53 Alive 4.6381578947
II No 0.53 Alive 12.598684211
II Unknown 0.52 Alive .
III No 0.52 Alive 0.3618421053
II No 0.52 Alive 34.703947368
II Unknown 0.52 Alive 8.0592105263
II No 0.52 Alive .
III No 0.51 Alive 44.177631579
II No 0.51 Alive 42.138157895
III No 0.51 Alive 2.8289473684
III Unknown 0.51 Alive 16.875
II No 0.51 Alive 14.309210526
II No 0.51 Alive .
III Unknown 0.51 Alive 6.4144736842
III No 0.5 Alive 63.256578947
II No 0.5 Alive 4.6381578947
II No 0.5 Alive .
II No 0.5 Alive 15.065789474
III No 0.5 Alive 57.105263158
III No 0.5 Alive 38.026315789
II No 0.5 Alive 0.8881578947
II No 0.5 Alive 0.5592105263
II No 0.5 Alive .
III Unknown 0.5 Alive 39.078947368
II No 0.5 Alive .
II No 0.5 Alive 7.0723684211
II Unknown 0.5 Alive 0.8552631579
II No 0.5 Alive 15.263157895
II No 0.5 Alive .
III Unknown 0.5 Alive 23.256578947
III No 0.5 Alive 1.2828947368
III Unknown 0.5 Alive 19.078947368
III No 0.5 Alive 3.0263157895
II Unknown 0.5 Alive 25.526315789
II Yes 0.5 Alive 15.888157895
II Yes 0.5 Alive 22.467105263
II No 0.5 Alive 61.151315789
II Yes 0.5 Alive 12.467105263
II No 0.5 Alive 5.9868421053
III No 0.5 Alive 10.986842105
IV Unknown 0.5 Alive 4.0460526316
II No 0.5 Alive 1.1842105263
II No 0.49 Alive 15.460526316
II No 0.49 Alive 17.006578947
II Unknown 0.48 Alive 74.407894737
III No 0.48 Alive 40.328947368
II No 0.48 Alive 35.657894737
III Unknown 0.48 Alive 25.065789474
II No 0.48 Alive 19.638157895
II No 0.47 Alive 3.8815789474
III No 0.47 Alive 7.1381578947
II No 0.47 Alive 12.467105263
I No 0.47 Alive 30.625
II No 0.46 Alive 1.0526315789
II No 0.46 Alive 1.1513157895
II No 0.46 Alive 10.197368421
II No 0.46 Alive 0.6578947368
II No 0.45 Alive .
III No 0.45 Alive .
II No 0.45 Alive 83.355263158
II No 0.45 Alive 0.2631578947
II No 0.45 Alive 76.677631579
II No 0.45 Alive 46.282894737
II No 0.45 Alive 43.059210526
III No 0.45 Alive 46.677631579
II No 0.45 Alive 2.3355263158
II Unknown 0.45 Alive 1.2828947368
III No 0.45 Alive 25.822368421
II No 0.45 Alive 3.2565789474
II Unknown 0.45 Alive 9.2105263158
II No 0.45 Alive 9.8684210526
III Unknown 0.45 Alive .
II No 0.45 Alive 8.6842105263
II Unknown 0.44 Alive 0.625
II No 0.43 Alive 0.8223684211
II No 0.43 Alive 1.7763157895
III No 0.43 Alive 13.684210526
II Unknown 0.42 Alive .
II No 0.42 Alive 33.585526316
II Unknown 0.42 Alive 1.3815789474
II No 0.42 Alive 12.697368421
II Unknown 0.42 Alive 12.763157895
III No 0.41 Alive 88.717105263
II No 0.41 Alive 7.7631578947
II No 0.41 Alive 83.388157895
II No 0.41 Alive 6.9078947368
II Unknown 0.41 Alive 35.394736842
II No 0.4 Alive .
III Unknown 0.4 Alive 51.611842105
III Unknown 0.4 Alive 38.717105263
II No 0.4 Alive 3.7171052632
III No 0.4 Alive 32.960526316
II No 0.4 Alive .
II No 0.4 Alive .
III No 0.4 Alive 38.717105263
II No 0.4 Alive 16.348684211
II No 0.4 Alive .
II Unknown 0.4 Alive 36.480263158
II No 0.4 Alive 24.210526316
III No 0.4 Alive 7.1052631579
III No 0.4 Alive 40.230263158
II No 0.4 Alive 0.625
II Unknown 0.4 Alive .
II No 0.4 Alive 2.7960526316
III Unknown 0.4 Alive 52.5
II No 0.4 Alive 35.888157895
II No 0.4 Alive 3.0263157895
UNK No 0.4 Alive 60.822368421
II No 0.4 Alive 64.473684211
II Unknown 0.4 Alive 2.5986842105
II Unknown 0.4 Alive 80.822368421
II No 0.4 Alive 16.875
II Unknown 0.4 Alive .
II No 0.4 Alive 29.934210526
II No 0.4 Alive .
II Unknown 0.4 Alive 12.763157895
II Yes 0.4 Alive 11.381578947
II No 0.4 Alive 13.256578947
II No 0.4 Alive -3.059210526
II No 0.4 Alive .
II No 0.4 Alive 12.861842105
II No 0.4 Alive 5.2960526316
II No 0.4 Alive 7.8289473684
II No 0.4 Alive 4.3421052632
II Unknown 0.4 Alive 1.1513157895
II No 0.4 Alive 6.7105263158
II No 0.4 Alive 7.4013157895
II No 0.4 Alive .
III No 0.4 Alive 3.8157894737
II Unknown 0.39 Alive 50.657894737
II Unknown 0.38 Alive 37.072368421
II Unknown 0.38 Alive 27.565789474
II Unknown 0.38 Alive .
II Unknown 0.38 Alive .
II Unknown 0.38 Alive 13.947368421
II Unknown 0.38 Alive 51.25
II No 0.37 Alive 9.0789473684
UNK Unknown 0.36 Alive 0.8552631579
II No 0.36 Alive 14.638157895
II No 0.36 Alive 89.835526316
II No 0.36 Alive 3.5197368421
II No 0.36 Alive 5.7236842105
II No 0.36 Alive 8.5855263158
II No 0.36 Alive .
II No 0.35 Alive .
II No 0.35 Alive 36.842105263
II No 0.35 Alive 10.098684211
II No 0.35 Alive 62.532894737
II No 0.35 Alive 17.203947368
II No 0.35 Alive 49.539473684
II No 0.35 Alive 3.9144736842
III Unknown 0.35 Alive .
II No 0.35 Alive 0.1315789474
II Unknown 0.35 Alive 8.0921052632
II Unknown 0.35 Alive 47.631578947
II Unknown 0.35 Alive 18.914473684
II No 0.35 Alive 25.888157895
II Unknown 0.35 Alive 4.1118421053
II Yes 0.35 Alive 42.993421053
III No 0.35 Alive 11.907894737
II No 0.35 Alive 0.4934210526
III No 0.35 Alive 0.1973684211
II No 0.34 Alive 5.4934210526
II No 0.34 Alive .
II No 0.34 Alive 6.9078947368
II No 0.34 Alive 9.9342105263
II No 0.33 Alive 36.085526316
II No 0.33 Alive 77.894736842
II No 0.33 Alive .
II No 0.33 Alive 96.710526316
III No 0.33 Alive 11.282894737
II Unknown 0.33 Alive 19.473684211
II No 0.33 Alive 37.993421053
II Unknown 0.33 Alive .
II No 0.32 Alive 18.848684211
II Unknown 0.32 Alive 3.75
II Unknown 0.32 Alive .
II No 0.32 Alive 25.361842105
II No 0.32 Alive 0.8223684211
II No 0.32 Alive 1.1842105263
III No 0.32 Alive 4.0460526316
II No 0.32 Alive 2.7302631579
II No 0.31 Alive 58.453947368
II Unknown 0.31 Alive 16.151315789
II No 0.31 Alive 37.105263158
UNK Unknown 0.31 Alive 38.881578947
III Unknown 0.31 Alive .
II No 0.3 Alive 4.6710526316
II Unknown 0.3 Alive 71.776315789
II Unknown 0.3 Alive 11.019736842
II No 0.3 Alive 31.611842105
II Unknown 0.3 Alive 2.2039473684
II No 0.3 Alive 0.4934210526
II No 0.3 Alive 22.368421053
II Yes 0.3 Alive 49.375
II Unknown 0.3 Alive 6.8092105263
II Unknown 0.3 Alive 17.730263158
II No 0.3 Alive .
II Unknown 0.3 Alive 6.6118421053
II No 0.3 Alive 3.7828947368
II No 0.3 Alive .
II No 0.3 Alive 31.644736842
II Unknown 0.3 Alive .
I No 0.3 Alive .
III No 0.3 Alive .
II Yes 0.3 Alive 0.4605263158
II No 0.3 Alive .
I Unknown 0.3 Alive 5.0328947368
II Yes 0.3 Alive 26.315789474
III No 0.3 Alive .
II No 0.3 Alive 0.4934210526
II No 0.3 Alive 14.144736842
II No 0.3 Alive 6.4144736842
II No 0.3 Alive 6.7763157895
II Unknown 0.3 Alive 11.743421053
II Unknown 0.3 Alive 25.263157895
II Unknown 0.29 Alive .
II Unknown 0.29 Alive .
II No 0.28 Alive 84.703947368
II No 0.28 Alive 78.651315789
II Unknown 0.28 Alive .
II Unknown 0.28 Alive 2.9934210526
II No 0.28 Dead 7.2697368421
II No 0.27 Alive 5.1644736842
II No 0.27 Alive 28.519736842
II Unknown 0.27 Alive .
II Unknown 0.27 Alive .
II No 0.27 Alive .
II No 0.26 Alive 10.789473684
II Unknown 0.26 Alive 0.4605263158
II Unknown 0.26 Alive 36.151315789
II No 0.26 Alive 18.782894737
II No 0.26 Alive 71.282894737
II No 0.25 Alive 0.3289473684
II Unknown 0.25 Alive 0.8881578947
II No 0.25 Alive 0.2960526316
II No 0.25 Alive .
II Unknown 0.25 Alive 7.8289473684
II Unknown 0.25 Alive 1.5131578947
II Unknown 0.25 Alive 24.638157895
II No 0.25 Alive 4.9671052632
II No 0.24 Alive 33.75
II No 0.24 Alive 31.315789474
II Unknown 0.24 Alive 84.671052632
II No 0.24 Alive 6.6776315789
II No 0.23 Alive 1.3157894737
II No 0.23 Alive 4.2105263158
II No 0.23 Alive 17.960526316
II No 0.23 Alive 2.2039473684
II No 0.22 Alive 23.322368421
II No 0.2 Alive 89.868421053
II No 0.2 Alive 58.355263158
I Unknown 0.2 Alive 26.677631579
II No 0.2 Alive 2.3026315789
II No 0.2 Alive .
II No 0.2 Alive 3.9473684211
II No 0.2 Alive 6.9078947368
II No 0.2 Alive 4.9013157895
II No 0.2 Alive 11.907894737
III Unknown 0.19 Alive .
II No 0.18 Alive 28.947368421
II No 0.18 Alive 47.631578947
II No 0.18 Alive 0.625
II No 0.13 Alive 1.1842105263
II No 0.1 Alive 6.0197368421
I No 0.1 Dead 8.9144736842
I Unknown 0.1 Alive 65.723684211
II Unknown 0 Alive .
I No 0 Alive 47.631578947
I No 0 Alive 0.9868421053
I No 0 Alive .
II Unknown 0 Dead 18.388157895
I No 0 Alive .
III Unknown 0 Alive .
I No 0 Alive 82.763157895
I No 0 Alive 95.592105263
I No 0 Alive 0.4934210526
I No 0 Alive 0.4605263158
I Unknown 0 Alive .
I No 0 Alive 23.322368421
I No 0 Alive 73.092105263
I No 0 Alive .
UNK No 0 Alive .
I Unknown 0 Dead 6.4473684211
I No 0 Alive .
I No 0 Alive .
V Unknown 0 Dead 16.875
I Unknown 0 Alive .
I No 0 Alive 37.072368421
II Unknown 0 Alive 95.164473684
I No 0 Alive 56.019736842
I No 0 Alive 23.322368421
I Unknown 0 Alive 29.276315789
II Unknown 0 Alive 52.368421053
I No 0 Alive 48.355263158
II No 0 Alive 0.5592105263
I No 0 Alive 6.8092105263
I No 0 Alive 1.2171052632
I No 0 Alive 2.0065789474
I No 0 Alive 40.296052632
IV Unknown 0 Alive 0.3947368421
I No 0 Alive .
I No 0 Alive .
I No 0 Alive .
I No 0 Alive 39.309210526
I No 0 Alive 2.4342105263
I Unknown 0 Alive 10.361842105
I No 0 Alive .
I No 0 Alive 4.7697368421
I No 0 Alive .
IV Unknown 0 Alive 84.835526316
I No 0 Alive 23.256578947
I Unknown 0 Alive 38.125
I Unknown 0 Alive 49.506578947
I Unknown 0 Alive 6.9407894737
I No 0 Alive .
I No 0 Alive 43.157894737
I Unknown 0 Alive 10
IV Unknown 0 Alive 1.1513157895
I No 0 Alive 2.7960526316
I Unknown 0 Alive 13.585526316
I Unknown 0 Alive 2.1052631579
I Unknown 0 Alive 23.026315789
I Unknown 0 Alive 36.973684211
IV Unknown 0 Alive .
I Unknown 0 Alive .
I Unknown 0 Alive .
I No 0 Alive .
I No 0 Alive 0.4934210526
I No 0 Alive 13.782894737
I Unknown 0 Alive 32.171052632
I Unknown 0 Alive 34.736842105
I No 0 Alive .
I No 0 Alive 4.0131578947
I Unknown 0 Alive 0.8881578947
UNK Unknown 0 Alive 33.157894737
V Yes 0 Alive 9.9013157895
I Unknown 0 Alive 2.0723684211
II Unknown 0 Alive 72.039473684
II Unknown 0 Alive 20.230263158
I Unknown 0 Alive 1.3815789474
IV Unknown 0 Alive 88.223684211
I No 0 Alive 2.2697368421
I No 0 Alive 71.25
I No 0 Alive 46.940789474
II Unknown 0 Alive 62.664473684
UNK No 0 Alive 27.598684211
II Unknown 0 Alive 65.559210526
IV Yes 0 Dead 15.526315789
I No 0 Alive 2.7631578947
III Unknown 0 Alive .
I Unknown 0 Alive 17.5
IV Unknown 0 Dead 0.8552631579
III Unknown 0 Alive 28.322368421
III No 0 Alive 23.651315789
III Yes 0 Alive 2.6644736842
I Unknown 0 Alive 10.065789474
UNK Unknown 0 Alive 2.1381578947
IV Unknown 0 Alive 0.4934210526
I Unknown 0 Alive 5.2631578947
III Unknown 0 Dead 11.381578947
III Unknown 0 Alive 4.6710526316
IV Unknown 0 Alive 19.605263158
I No 0 Alive 0.4276315789
I Unknown 0 Alive 14.802631579
I Unknown 0 Alive 1.4144736842
IV Unknown 0 Alive 44.605263158
III Unknown 0 Alive 5.1315789474
I Unknown 0 Alive 0.9868421053
UNK Unknown 0 Alive 9.5065789474
I Unknown 0 Alive 0.2302631579
I No 0 Alive 25.625
IV Unknown 0 Alive 74.769736842
I Unknown 0 Alive 53.947368421
I Unknown 0 Alive 15.263157895
I No 0 Alive 14.013157895
III Unknown 0 Alive 70.328947368
III Unknown 0 Alive 1.4473684211
I No 0 Alive 11.381578947
I No 0 Alive 1.4802631579
I No 0 Alive 1.3486842105
UNK Unknown 0 Alive 1.875
I Unknown 0 Alive 3.6513157895
I Yes 0 Alive 9.8026315789
IV Yes 0 Alive 12.039473684
I No 0 Alive 8.5197368421
II No 0 Alive .
III Unknown 0 Alive 36.184210526
I Unknown 0 Alive 3.4539473684
III Unknown 0 Alive 31.25
III Unknown 0 Alive 6.7105263158
III Yes 0 Alive 2.8289473684
I No 0 Alive 1.7105263158
I No 0 Alive 0.6907894737
I Unknown 0 Alive .
III Unknown 0 Alive 7.4342105263
I Unknown 0 Alive .
I No 0 Alive .
I No 0 Alive .
UNK Unknown 0 Alive 6.7434210526
I Unknown 0 Alive .
I No 0 Alive .
I No 0 Alive .
IV Unknown 0 Alive 2.7302631579
I No 0 Alive 2.2368421053
I No 0 Alive .
II Unknown 0 Alive 27.434210526
I Unknown 0 Dead 33.717105263
IV Unknown 0 Alive 19.046052632
IV Unknown 0 Alive .
I Unknown 0 Alive 2.0394736842
IV Yes 0 Alive 73.618421053
I Unknown 0 Dead 9.9671052632
I No 0 Alive 21.644736842
III Unknown 0 Alive 10.986842105
;

/****************************************************
 * The following data set is mentioned on page 127, *
 * where it is used to produce output 4.5.          *
 * A slight change was made to the data causing the *
 * output to differ slightly from that in the book  *  ****************************************************/


data; input                         
DFSTIME DFSCENS LOCCODE LOC1 LOC2 LOC3 CLARK sex ulcer thickness; datalines;
 10.395    1       2      0    1    0    4     1   .      .
 89.868    0       3      0    0    1    2     1   0     0.20
 63.257    0       1      1    0    0    3     1   0     0.50
 23.914    0       1      1    0    0    3     0   0     0.97
 52.895    0       1      1    0    0    3     0   0     1.35
 39.770    0       3      0    0    1    2     1   0     0.75
 57.336    0       2      0    1    0    4     1   0     2.91
 38.618    0       3      0    0    1    3     1   0     0.79
  6.711    0       2      0    1    0    4     0   .     1.40
 22.204    1       1      1    0    0    3     1   .     2.50
  8.750    1       2      0    1    0    4     1   1     3.00
 14.967    0       1      1    0    0    4     0   1     3.23
 37.072    0       2      0    1    0    2     1   .     0.38
 10.329    0       2      0    1    0    3     1   .     2.80
 39.507    0       2      0    1    0    3     0   0     0.77
 15.493    1       2      0    1    0    .     0   1     3.80
 37.533    1       3      0    0    1    .     1   .     7.00
 36.513    0       1      1    0    0    3     1   .     1.00
  2.599    0       2      0    1    0    2     1   0     0.90
 51.250    0       2      0    1    0    3     1   0     0.65
   .       1       4      0    0    0    4     1   .      .
  4.671    0       2      0    1    0    2     1   0     0.30
 13.783    1       3      0    0    1    3     1   1     2.40
  8.026    1       1      1    0    0    4     1   0     1.50
 22.566    1       2      0    1    0    4     1   1     1.20
 23.980    0       2      0    1    0    3     1   0     0.65
 24.178    0       1      1    0    0    2     0   .     0.54
  1.875    0       1      1    0    0    2     1   .     0.75
 77.105    0       2      0    1    0    4     1   .     1.80
 28.882    1       2      0    1    0    2     1   0     0.25
101.974    0       1      1    0    0    3     0   0     0.47
 24.276    1       4      0    0    0    .     1   0     1.00
 74.408    0       1      1    0    0    2     0   .     0.48
 85.592    0       1      1    0    0    4     1   0     2.00
 42.368    0       2      0    1    0    3     1   1     1.84
 96.842    0       1      1    0    0    4     0   .     1.60
151.447    1       3      0    0    1    3     1   1     1.43
 114.013    0       2      0    1    0    2     0   .     0.25
  93.520    0       2      0    1    0    4     1   0     1.10
  83.355    0       2      0    1    0    2     1   0     0.45
 -72.434    1       2      0    1    0    3     1   0     2.10
  85.329    0       2      0    1    0    4     0   .     3.00
  57.993    0       2      0    1    0    4     0   .     1.70
  36.086    0       1      1    0    0    2     0   0     0.33
  11.678    0       3      0    0    1    3     1   0     1.80
  51.612    0       1      1    0    0    3     0   .     0.40
  27.664    1       3      0    0    1    3     .   .     2.40
   1.579    1       3      0    0    1    .     1   0     4.98
  45.592    0       3      0    0    1    4     1   .     1.50
 187.993    0       3      0    0    1    2     0   0     0.30
  -0.033    0       3      0    0    1    .     1   .     1.20
    .       0       4      0    0    0    4     .   0     0.70
  25.033    1       2      0    1    0    4     1   .     2.40
  38.717    0       1      1    0    0    3     0   .     0.40
  93.717    0       1      1    0    0    3     1   .     0.81
  25.164    1       1      1    0    0    4     0   0     2.60
 116.020    0       1      1    0    0    4     1   0     1.00
  10.493    1       3      0    0    1    2     0   0     0.26
  89.868    0       2      0    1    0    3     1   0     0.72
  36.842    0       2      0    1    0    2     1   0     0.35
  49.868    0       2      0    1    0    4     1   0     2.40
   0.855    0       1      1    0    0    .     0   .     0.36
  16.941    0       2      0    1    0    3     1   1     1.55
  88.421    0       2      0    1    0    3     1   0     1.20
   7.763    0       1      1    0    0    2     0   0     0.41
   0.000    0       2      0    1    0    2     0   0     0.45
  10.099    0       2      0    1    0    2     0   0     0.35
  26.118    1       1      1    0    0    4     1   0     2.76
   0.395    0       3      0    0    1    .     1   0     4.59
   0.625    0       2      0    1    0    2     1   .     0.44
  77.895    0       2      0    1    0    2     0   0     0.33
  79.770    0       3      0    0    1    3     1   1     1.20
  20.329    0       3      0    0    1    3     1   1     1.28
    .       0       4      0    0    0    4     1   0     1.20
  -0.033    0       3      0    0    1    4     1   0     3.50
  40.724    0       1      1    0    0    3     1   0     0.95
   0.230    0       2      0    1    0    3     1   .     0.80
  30.921    1       2      0    1    0    4     1   .     2.00
  88.618    0       1      1    0    0    3     1   0     1.10
  73.257    0       2      0    1    0    4     1   0     1.45
   0.000    0       1      1    0    0    2     1   0     0.40
  76.316    0       3      0    0    1    3     1   1     1.70
  56.250    0       1      1    0    0    3     0   0     0.57
 134.967    0       1      1    0    0    2     0   0     0.30
    .       0       4      0    0    0    3     .   .     0.90
   9.408    0       2      0    1    0    2     0   .     0.74
   5.197    0       3      0    0    1    .     0   1     8.10
  79.145    0       1      1    0    0    4     1   0     1.30
  77.829    0       3      0    0    1    .     1   0     1.20
  62.204    0       1      1    0    0    3     0   0     0.80
  46.842    1       2      0    1    0    2     1   .     0.30
  88.586    0       1      1    0    0    .     0   0     4.68
  13.125    0       2      0    1    0    4     0   0     1.25
   0.625    0       2      0    1    0    4     1   0     1.20
  67.072    0       1      1    0    0    4     0   1     2.20
  78.520    0       3      0    0    1    4     1   0     1.48
  57.007    1       1      1    0    0    4     1   .     1.50
   0.625    0       1      1    0    0    3     1   .     0.90
  20.428    0       2      0    1    0    4     1   1     7.60
  91.645    1       2      0    1    0    3     0   .     3.30
  98.355    0       1      1    0    0    3     0   1     0.90
   0.822    0       2      0    1    0    3     1   .     0.70
  13.849    1       2      0    1    0    3     1   1     1.70
   0.822    0       2      0    1    0    2     0   0     0.43
  60.132    0       1      1    0    0    2     1   .     0.60
   6.776    1       1      1    0    0    .     0   1     3.90
  42.138    0       1      1    0    0    4     1   0     2.24
  72.796    0       2      0    1    0    2     0   0     0.85
  76.908    0       2      0    1    0    3     0   0     1.80
  61.743    0       2      0    1    0    3     0   1     2.20
  13.586    0       2      0    1    0    4     0   .     3.01
 84.704    0       1      1    0    0    2     0   0     0.28
 90.428    1       1      1    0    0    4     0   0     1.85
 78.651    0       3      0    0    1    2     0   0     0.28
 55.164    1       2      0    1    0    4     .   0     0.75
 80.625    0       1      1    0    0    3     0   1     1.20
  3.882    0       1      1    0    0    3     0   .     0.57
 46.283    0       1      1    0    0    2     1   0     0.45
  4.145    0       2      0    1    0    4     1   1     0.72
 58.980    0       2      0    1    0    4     1   0     0.92
 51.645    0       3      0    0    1    4     0   0     1.69
 32.961    0       1      1    0    0    3     0   0     0.40
 51.349    0       2      0    1    0    4     0   0     1.60
 59.803    0       1      1    0    0    3     0   0     1.20
103.618    1       1      1    0    0    4     0   0     2.50
 11.020    0       2      0    1    0    2     0   .     0.30
 80.757    0       2      0    1    0    3     0   0     1.40
  7.072    1       3      0    0    1    .     0   0     5.50
 50.493    1       1      1    0    0    2     1   .     1.50
 41.711    0       1      1    0    0    4     1   .     1.46
  1.513    0       2      0    1    0    4     1   1     4.00
 13.750    1       1      1    0    0    4     1   1     1.95
 13.520    0       1      1    0    0    3     1   0     1.30
 31.612    0       2      0    1    0    2     0   0     0.30
  2.434    0       1      1    0    0    2     0   0     0.55
 54.079    0       1      1    0    0    2     0   0     0.60
 72.928    0       2      0    1    0    4     0   1     6.00
 13.026    1       2      0    1    0    4     1   1     4.20
103.618    1       2      0    1    0    3     0   0     0.45
 27.434    0       1      1    0    0    3     1   0     0.65
 70.395    0       1      1    0    0    4     1   1     2.77
 25.559    1       1      1    0    0    4     1   1     2.50
 68.322    0       1      1    0    0    3     0   0     1.55
 19.803    1       1      1    0    0    4     0   .     3.00
 45.461    0       1      1    0    0    2     1   0     0.55
 64.901    0       2      0    1    0    3     1   0     0.55
 72.697    1       1      1    0    0    3     1   0     0.62
 25.625    0       3      0    0    1    2     0   1     0.68
 65.230    0       3      0    0    1    3     1   0     1.60
 22.993    1       2      0    1    0    3     1   1     1.80
 18.421    1       3      0    0    1    4     1   1     5.55
  7.171    0       1      1    0    0    3     0   0     0.75
  3.914    0       3      0    0    1    3     1   0     0.93
  9.112    1       2      0    1    0    3     1   .     1.98
 58.125    1       2      0    1    0    3     0   0     1.90
 60.559    0       3      0    0    1    .     1   0     2.70
  1.118    0       2      0    1    0    3     1   0     0.60
 38.717    0       1      1    0    0    3     1   0     0.40
 30.724    1       1      1    0    0    2     0   0     0.25
 28.684    0       1      1    0    0    4     0   0     1.65
 30.230    1       1      1    0    0    3     0   1     4.00
112.829    1       3      0    0    1    4     1   0     0.80
  3.355    0       3      0    0    1    2     0   0     0.47
  5.855    1       1      1    0    0    3     1   0     1.00
 83.388    0       1      1    0    0    2     0   0     0.41
 71.151    0       2      0    1    0    3     1   0     1.30
  6.908    0       1      1    0    0    2     1   0     0.41
 87.533    0       3      0    0    1    2     1   0     0.50
 86.382    1       2      0    1    0    2     1   0     0.54
 37.895    0       2      0    1    0    4     1   1     3.60
 32.829    1       1      1    0    0    3     0   0     0.87
 34.145    0       1      1    0    0    3     0   .     0.93
  1.743    0       1      1    0    0    3     1   0     2.50
 37.303    0       2      0    1    0    4     1   0     2.80
 72.237    0       2      0    1    0    3     0   0     0.55
 62.763    0       1      1    0    0    2     0   0     0.31
 11.053    1       4      0    0    0    4     .   .     3.00
 21.974    0       1      1    0    0    4     0   .     3.00
 54.572    1       1      1    0    0    3     1   1     4.00
 25.855    0       2      0    1    0    4     1   0     2.28
 56.217    0       2      0    1    0    3     1   0     5.50
 37.632    0       3      0    0    1    4     1   .     3.00
 68.224    0       2      0    1    0    4     1   0     2.50
 62.533    0       3      0    0    1    2     0   0     0.35
  2.204    0       2      0    1    0    2     0   .     0.30
 61.086    0       2      0    1    0    3     1   0     0.74
 25.263    0       2      0    1    0    3     0   0     0.90
 39.605    0       2      0    1    0    4     1   .     1.31
 24.671    1       2      0    1    0    2     0   0     0.33
 14.539    0       3      0    0    1    3     0   0     0.82
 13.322    0       1      1    0    0    3     0   0     1.00
 10.855    1       1      1    0    0    4     1   0     2.00
 10.329    0       2      0    1    0    3     1   1     1.50
  0.987    0       2      0    1    0    4     0   0     0.85
  0.461    0       3      0    0    1    4     1   0     2.00
 20.263    0       2      0    1    0    3     1   .     7.10
 14.770    0       3      0    0    1    3     0   0     0.60
  0.493    0       2      0    1    0    2     1   0     0.30
 58.355    0       1      1    0    0    2     0   0     0.20
 72.368    0       2      0    1    0    4     1   0     1.33
 86.316    0       2      0    1    0    4     1   1     2.75
  5.033    1       2      0    1    0    .     1   1     7.00
 57.632    0       2      0    1    0    4     1   0     0.68
102.204    1       1      1    0    0    3     0   .     0.98
 77.862    0       1      1    0    0    3     0   0     0.80
 62.401    0       2      0    1    0    4     1   0     2.00
 60.789    0       1      1    0    0    3     0   0     1.10
 70.230    0       2      0    1    0    3     0   .     0.55
 42.796    1       1      1    0    0    4     0   0     2.10
  4.638    0       4      0    0    0    2     0   0     0.50
177.072    0       1      1    0    0    3     0   .     0.74
 22.829    0       1      1    0    0    4     1   0     2.75
 90.559    1       2      0    1    0    3     0   0     1.30
  0.000    0       3      0    0    1    4     1   .     2.80
 24.539    1       4      0    0    0    4     0   1     1.79
 35.789    1       2      0    1    0    4     0   1     4.15
 58.257    1       1      1    0    0    .     0   0    10.00
 25.329    1       4      0    0    0    .     1   .     4.00
109.243    1       2      0    1    0    4     1   1     4.00
 73.355    1       1      1    0    0    4     0   .     1.28
112.566    0       2      0    1    0    2     0   0     0.42
  6.151    0       2      0    1    0    3     0   0     1.00
  6.086    1       1      1    0    0    4     1   0     2.15
 27.336    0       3      0    0    1    3     0   .     2.57
 13.914    0       2      0    1    0    3     1   0     0.95
 38.421    0       1      1    0    0    4     1   .     2.70
 67.467    0       2      0    1    0    3     1   0     1.20
 16.612    1       2      0    1    0    4     1   1     1.27
  5.691    1       1      1    0    0    3     1   0     1.45
 16.349    0       3      0    0    1    2     0   0     0.40
 61.382    1       1      1    0    0    .     0   1     5.50
 10.362    0       1      1    0    0    3     0   0     2.00
 21.612    0       3      0    0    1    3     1   1     1.79
 16.118    1       1      1    0    0    .     0   0     9.50
  0.296    0       2      0    1    0    2     1   0     0.25
 65.592    0       2      0    1    0    3     0   1     2.50
 11.974    0       2      0    1    0    3     0   0     2.00
 14.638    0       2      0    1    0    2     1   0     0.36
 34.803    1       2      0    1    0    4     1   0     2.71
 13.059    1       4      0    0    0    .     0   1     7.00
 11.316    0       2      0    1    0    3     0   .     0.92
  1.349    1       2      0    1    0    2     1   0     0.70
  0.461    0       1      1    0    0    2     0   0     0.55
  1.283    0       2      0    1    0    3     1   0     0.62
 43.355    0       2      0    1    0    3     1   0     0.65
 24.211    0       1      1    0    0    4     0   0     0.76
 30.033    0       2      0    1    0    4     0   0     1.57
 44.737    1       2      0    1    0    3     1   0     0.60
 27.533    1       2      0    1    0    4     0   0     1.70
  2.533    0       3      0    0    1    4     1   .     1.84
  8.651    1       2      0    1    0    .     1   0      .
 27.664    0       2      0    1    0    4     0   0     1.83
107.270    0       2      0    1    0    2     0   .     0.37
  5.263    0       3      0    0    1    3     1   0     1.02
 14.079    1       2      0    1    0    4     1   0     3.75
 51.974    0       2      0    1    0    4     1   0     1.60
 26.480    0       1      1    0    0    3     0   0     3.00
119.638    0       2      0    1    0    2     0   0     0.31
  8.651    1       2      0    1    0    4     1   1     4.80
  61.612    1       1      1    0    0    3     1   0     1.30
106.086    0       3      0    0    1    4     0   0     2.00
 59.145    0       2      0    1    0    4     1   0     1.15
 61.678    1       2      0    1    0    3     0   .     4.00
 23.026    0       2      0    1    0    4     1   1     4.00
 49.474    0       2      0    1    0    2     .   0     0.41
  0.428    0       3      0    0    1    4     1   1    10.00
  7.105    0       3      0    0    1    1     0   0     0.79
 32.862    0       1      1    0    0    3     0   .     0.58
 50.921    0       2      0    1    0    4     0   0     1.34
  1.053    0       2      0    1    0    2     1   0     0.46
 15.395    0       1      1    0    0    4     0   0     4.20
  1.513    0       3      0    0    1    2     0   0     0.70
  7.796    1       3      0    0    1    .     0   0    20.00
  9.967    1       2      0    1    0    4     1   1     5.00
 44.178    0       3      0    0    1    3     0   0     0.51
 45.329    0       2      0    1    0    3     0   1     1.74
 15.066    0       4      0    0    0    2     1   0     0.50
 34.901    1       3      0    0    1    4     1   .     2.60
 36.480    0       4      0    0    0    2     0   .     0.40
 22.368    0       1      1    0    0    2     1   0     0.30
 13.191    0       2      0    1    0    4     0   0     0.98
 61.678    0       2      0    1    0    4     1   0     2.84
 60.395    0       1      1    0    0    4     0   0     1.73
 18.553    0       1      1    0    0    4     1   0     1.68
  3.125    0       2      0    1    0    2     0   0     0.63
 34.211    0       2      0    1    0    3     1   0     1.10
   .       0       3      0    0    1    4     1   .     2.90
 12.007    1       3      0    0    1    .     1   .     0.90
  1.875    0       2      0    1    0    4     1   0     2.04
 32.763    1       2      0    1    0    3     1   0     1.55
 43.092    1       2      0    1    0    4     1   0     4.00
 66.053    1       2      0    1    0    3     1   .     2.50
 11.546    1       1      1    0    0    3     1   0     1.20
 36.151    0       3      0    0    1    3     1   1     2.32
  6.480    0       2      0    1    0    4     1   1     5.00
 42.138    0       1      1    0    0    2     1   0     0.51
  3.882    0       4      0    0    0    .     0   1     1.50
  1.974    0       1      1    0    0    4     0   1     2.80
 12.796    0       1      1    0    0    4     0   0     1.50
 16.151    0       2      0    1    0    2     1   .     0.31
  1.184    0       2      0    1    0    2     1   0     0.13
 24.375    0       3      0    0    1    4     1   0     5.10
  6.875    1       1      1    0    0    4     1   0     3.40
  8.454    1       2      0    1    0    .     1   0     3.70
 60.000    0       2      0    1    0    3     1   0     0.97
 49.375    0       1      1    0    0    2     0   1     0.30
102.204    0       2      0    1    0    3     0   0     1.50
 36.579    1       1      1    0    0    3     0   .     2.80
 58.322    0       1      1    0    0    4     1   0     2.00
 17.204    0       1      1    0    0    2     1   0     0.35
 19.901    0       2      0    1    0    3     1   0     0.54
 15.822    0       2      0    1    0    4     1   0     5.40
  6.447    1       4      0    0    0    4     1   1     3.25
  0.559    0       2      0    1    0    4     .   1     1.10
 11.382    1       2      0    1    0    4     1   1     3.45
 71.118    1       1      1    0    0    .     1   .     1.23
 46.908    0       3      0    0    1    4     1   0     5.05
 18.914    1       2      0    1    0    4     1   0     1.54
 30.954    1       2      0    1    0    .     0   .     1.94
 57.105    0       1      1    0    0    3     0   0     0.50
 30.362    0       2      0    1    0    4     1   0     1.40
 50.263    0       3      0    0    1    4     1   1     2.73
  0.461    0       1      1    0    0    .     1   0     4.29
 32.533    0       2      0    1    0    4     0   1     0.75
 14.803    0       2      0    1    0    4     1   0     2.00
 46.776    0       1      1    0    0    4     1   0     2.64
  5.954    1       1      1    0    0    4     0   0     2.40
 42.434    1       2      0    1    0    3     0   0     1.71
  7.105    0       3      0    0    1    3     1   0     0.40
 89.836    0       1      1    0    0    2     1   0     0.36
 40.230    0       2      0    1    0    3     1   0     0.40
 11.645    0       1      1    0    0    3     0   0     0.92
 36.941    0       2      0    1    0    4     0   0     0.90
 87.2039    1       4      0    0    0    3     0   0     2.10
58.4211    0       1      1    0    0    4     0   0     4.10
31.7763    1       3      0    0    1    4     1   .     1.80
48.2566    0       1      1    0    0    4     0   0     0.89
83.2237    0       2      0    1    0    4     0   .     2.70
49.0789    0       1      1    0    0    4     1   1     3.00
15.4605    0       1      1    0    0    2     0   0     0.49
 6.2171    0       2      0    1    0    4     1   0     1.50
 3.3882    0       1      1    0    0    2     0   0     0.75
 0.6250    0       2      0    1    0    2     0   0     0.40
 0.3947    0       4      0    0    0    4     0   1     2.50
49.5395    0       1      1    0    0    2     1   0     0.35
57.8289    0       4      0    0    0    3     0   0     1.00
29.7039    1       2      0    1    0    3     0   0     2.00
38.9145    0       2      0    1    0    3     1   0     0.97
24.5724    0       1      1    0    0    4     0   1     4.75
 2.9934    0       2      0    1    0    3     1   0     0.62
38.4868    0       2      0    1    0    3     1   0     0.50
41.3158    0       2      0    1    0    2     0   0     0.45
18.8487    0       3      0    0    1    2     1   0     0.32
 2.0724    0       1      1    0    0    .     1   1     3.55
40.1974    0       2      0    1    0    4     1   1     1.60
28.5526    1       2      0    1    0    4     1   .     1.72
 8.8816    1       2      0    1    0    4     1   0     1.50
30.0658    0       2      0    1    0    3     0   0     0.76
55.3947    0       2      0    1    0    3     0   0     1.58
29.4408    0       4      0    0    0    .     0   0     1.60
 0.6250    0       2      0    1    0    3     0   0     0.82
46.6776    0       3      0    0    1    3     1   0     0.45
20.8553    0       2      0    1    0    2     0   0     0.65
49.7039    0       2      0    1    0    4     1   0     1.31
 1.1513    0       1      1    0    0    2     1   0     0.46
32.6316    0       2      0    1    0    4     1   1     2.90
30.4276    1       1      1    0    0    4     1   0     2.60
57.5987    0       2      0    1    0    4     1   0     2.10
13.8816    1       2      0    1    0    3     1   0     2.60
53.0921    0       4      0    0    0    3     1   1     2.19
  2.796    0       2      0    1    0    2     1   0     0.40
 37.796    0       3      0    0    1    3     1   0     0.55
 50.230    0       1      1    0    0    4     1   0     1.12
 44.572    0       3      0    0    1    .     1   0     5.10
 37.401    0       3      0    0    1    3     0   0     0.90
 21.809    1       3      0    0    1    2     1   0     0.67
  0.461    0       2      0    1    0    3     0   0     0.55
 18.454    0       2      0    1    0    4     0   1     5.12
  2.961    0       2      0    1    0    2     1   0     0.20
 46.776    0       3      0    0    1    4     1   1     2.20
105.493    1       1      1    0    0    4     0   1     3.30
 57.401    0       3      0    0    1    4     1   0     1.40
 39.112    0       3      0    0    1    3     1   0     1.10
 46.283    0       3      0    0    1    2     1   0     0.10
 27.401    1       1      1    0    0    3     0   0     1.20
 11.283    0       1      1    0    0    3     0   0     0.33
  5.000    1       1      1    0    0    4     0   1     2.44
 47.730    0       1      1    0    0    4     0   0     2.55
 47.434    0       2      0    1    0    4     1   0     2.90
  0.592    0       4      0    0    0    .     1   1     5.00
  1.842    0       1      1    0    0    4     0   0     1.54
 50.230    0       1      1    0    0    3     1   0     0.78
 12.237    0       1      1    0    0    3     0   0     0.60
 45.724    1       3      0    0    1    4     1   0     2.54
 47.566    0       3      0    0    1    2     1   0     1.20
  0.526    0       2      0    1    0    3     1   0     0.91
  8.618    1       2      0    1    0    3     1   1     2.91
 41.612    0       2      0    1    0    4     1   0     1.32
 46.053    0       2      0    1    0    4     0   .     3.00
 52.270    0       1      1    0    0    3     0   0     0.65
  3.914    0       1      1    0    0    2     1   0     0.35
  0.493    1       3      0    0    1    4     1   .     2.50
 51.151    0       3      0    0    1    4     1   0     1.72
 28.257    0       3      0    0    1    4     1   .     3.00
 53.849    0       2      0    1    0    3     0   0     1.50
 17.862    0       3      0    0    1    4     0   1     4.85
 23.224    1       2      0    1    0    4     0   0     1.62
 53.651    0       3      0    0    1    3     1   0     0.98
 48.586    0       1      1    0    0    1     0   0     0.50
 15.395    0       2      0    1    0    3     1   0     1.27
 45.724    0       2      0    1    0    3     1   0     1.30
 32.401    1       1      1    0    0    3     0   0     1.40
 30.296    0       1      1    0    0    4     1   1     2.31
 95.000    0       2      0    1    0    4     1   0     1.20
 16.151    0       2      0    1    0    3     1   1     0.80
  4.145    0       2      0    1    0    4     0   1     2.20
 30.197    0       2      0    1    0    2     1   0     1.14
 34.539    0       1      1    0    0    3     0   0     0.62
  0.395    0       3      0    0    1    4     1   0     1.35
 38.684    0       2      0    1    0    2     1   0     1.87
 60.559    1       4      0    0    0    2     1   0     0.48
 47.664    1       3      0    0    1    4     0   0     0.95
 18.651    1       2      0    1    0    4     1   0     4.00
 21.250    1       2      0    1    0    3     1   0     2.64
 20.658    1       2      0    1    0    .     1   1     6.47
 34.671    0       1      1    0    0    4     1   0     3.89
 23.059    1       1      1    0    0    3     1   0     1.17
 29.112    0       1      1    0    0    3     0   0     0.76
  9.474    1       2      0    1    0    4     1   0     4.34
215.789    0       3      0    0    1    4     1   0     1.40
 40.132    0       2      0    1    0    .     1   1     3.50
 27.599    1       3      0    0    1    4     1   0     2.55
 25.362    0       1      1    0    0    3     1   0     1.80
  0.888    0       2      0    1    0    2     1   0     0.50
  7.796    1       2      0    1    0    4     1   0     1.53
 48.816    0       4      0    0    0    4     1   0     1.28
 11.842    1       2      0    1    0    4     1   .     5.00
 24.901    0       2      0    1    0    4     1   0     1.55
 59.112    0       1      1    0    0    3     0   0     0.79
 47.533    1       2      0    1    0    4     0   1     2.30
 56.316    0       2      0    1    0    2     1   0     0.60
 30.132    0       2      0    1    0    4     1   1     2.50
 50.658    0       1      1    0    0    2     0   .     0.39
  0.559    0       2      0    1    0    2     1   0     0.50
 40.329    0       2      0    1    0    3     0   0     0.48
 25.691    1       2      0    1    0    3     1   0     1.72
  2.105    0       1      1    0    0    2     0   0     0.74
  7.138    0       1      1    0    0    3     0   0     0.47
 55.789    0       2      0    1    0    4     0   0     0.92
 10.625    1       1      1    0    0    4     0   1     2.20
 13.750    1       2      0    1    0    4     1   1     4.40
 44.507    1       1      1    0    0    4     0   0     1.78
 22.697    1       2      0    1    0    4     0   0     2.30
  4.178    0       3      0    0    1    4     1   1     3.16
  0.789    0       1      1    0    0    .     0   .    10.00
  4.112    1       1      1    0    0    3     1   1     2.30
  9.868    0       2      0    1    0    3     0   .     0.63
  0.428    0       1      1    0    0    3     0   1     1.66
 26.283    0       2      0    1    0    3     0   0     1.43
 54.145    0       3      0    0    1    3     1   0     1.95
  0.921    0       1      1    0    0    4     0   1    12.10
  0.888    0       3      0    0    1    4     1   1     3.17
 24.243    0       1      1    0    0    3     0   1     0.88
 42.401    0       1      1    0    0    2     0   0     0.50
 11.086    1       3      0    0    1    4     1   0     2.55
 12.138    0       1      1    0    0    4     0   0     1.46
 48.092    0       2      0    1    0    4     0   1     1.43
 44.803    0       2      0    1    0    3     0   1     0.80
 22.303    1       2      0    1    0    4     1   0     1.70
 36.118    0       2      0    1    0    3     1   0     0.85
 38.553    0       1      1    0    0    4     0   0     2.20
 79.079    0       2      0    1    0    3     1   .     0.50
 16.711    1       2      0    1    0    3     1   .     1.71
  5.691    1       3      0    0    1    .     1   .     0.75
152.401    0       2      0    1    0    3     1   .     0.75
 18.553    1       1      1    0    0    4     0   1     1.80
  0.493    0       2      0    1    0    4     0   1     2.55
 10.296    0       3      0    0    1    4     1   1     3.16
 39.079    0       1      1    0    0    3     1   .     0.50
 35.625    0       3      0    0    1    3     1   .     0.62
 23.026    1       2      0    1    0    3     1   .     0.40
 36.414    0       1      1    0    0    4     1   0     0.90
 70.033    0       2      0    1    0    2     0   0     0.39
 44.046    0       2      0    1    0    3     0   0     1.02
 21.151    1       2      0    1    0    3     1   .     1.60
 47.204    0       1      1    0    0    .     0   1     3.80
  2.072    0       1      1    0    0    2     1   .     0.60
  0.461    0       1      1    0    0    2     1   .     0.26
  3.684    1       2      0    1    0    4     1   .     3.83
 36.414    0       3      0    0    1    3     0   0     1.56
 31.053    0       2      0    1    0    2     1   0     0.60
  4.638    0       1      1    0    0    2     1   0     0.53
 16.678    0       2      0    1    0    3     1   .     0.85
  0.921    0       3      0    0    1    3     1   .     0.70
 21.743    0       1      1    0    0    3     0   0     1.10
 17.895    0       1      1    0    0    3     1   1     2.89
 15.132    1       2      0    1    0    3     0   0     1.30
 14.967    1       3      0    0    1    2     1   0     0.60
 42.138    0       1      1    0    0    3     0   .     1.00
 19.474    0       2      0    1    0    2     0   .     0.33
  8.783    0       3      0    0    1    .     0   1     8.00
 45.789    0       2      0    1    0    3     1   0     1.80
 10.197    0       2      0    1    0    2     1   0     0.46
 35.099    0       2      0    1    0    3     1   0     1.65
 21.809    1       3      0    0    1    .     1   1     6.00
  8.618    1       3      0    0    1    4     1   .     0.90
 43.684    0       1      1    0    0    3     0   0     0.72
152.730    0       1      1    0    0    4     0   1     1.32
  7.336    0       2      0    1    0    4     0   1     1.67
 18.191    0       1      1    0    0    4     0   0     1.10
  2.368    0       2      0    1    0    3     1   0     1.35
 30.888    0       2      0    1    0    3     0   .     0.60
 34.013    0       1      1    0    0    3     0   0     0.80
 37.039    0       1      1    0    0    3     0   .     1.15
 21.414    1       1      1    0    0    3     1   1     4.00
  6.809    0       2      0    1    0    2     1   .     0.30
 11.612    0       1      1    0    0    4     0   .     2.00
 26.118    0       2      0    1    0    3     1   .     0.77
  5.296    1       3      0    0    1    3     1   0     1.67
 15.526    0       1      1    0    0    2     0   0     0.36
 20.428    1       2      0    1    0    4     1   1     1.90
 18.947    1       3      0    0    1    3     1   .     0.90
  0.296    0       1      1    0    0    3     1   0     0.67
  0.625    0       3      0    0    1    4     1   1     5.50
 35.395    0       3      0    0    1    2     1   .     0.41
 17.730    0       1      1    0    0    2     0   .     0.30
 25.099    0       3      0    0    1    4     1   0     0.80
 93.882    0       2      0    1    0    3     1   0     0.75
 48.750    0       2      0    1    0    2     1   .     0.54
 45.888    0       3      0    0    1    3     1   .     2.30
 40.099    1       2      0    1    0    3     0   0     0.96
 59.770    1       2      0    1    0    4     0   1     4.10
 43.454    0       1      1    0    0    2     0   .     0.42
 29.211    1       2      0    1    0    4     1   1     5.50
  4.901    0       1      1    0    0    3     0   .     0.95
  0.658    0       2      0    1    0    2     1   0     0.46
 61.250    0       1      1    0    0    4     0   .     1.20
  0.132    0       3      0    0    1    2     1   0     0.35
  9.671    1       3      0    0    1    .     1   1     3.90
 16.941    1       2      0    1    0    4     1   .     2.90
  5.493    0       2      0    1    0    2     1   0     0.34
 30.263    0       2      0    1    0    4     1   .     2.10
134.934    0       2      0    1    0    2     0   .     0.40
 37.039    0       1      1    0    0    3     0   .     2.55
  5.592    0       2      0    1    0    4     1   .     1.32
 37.105    0       2      0    1    0    2     1   0     0.31
176.875    0       2      0    1    0    3     1   .     1.10
 11.546    1       2      0    1    0    3     1   1     2.86
 34.079    1       4      0    0    0    4     0   .     1.60
 44.408    0       2      0    1    0    4     1   .     7.40
 29.934    1       1      1    0    0    .     0   1     3.40
 35.888    0       1      1    0    0    2     0   0     0.40
  5.987    1       1      1    0    0    4     1   .     1.30
  2.566    0       2      0    1    0    4     0   1     2.50
 36.151    0       1      1    0    0    2     1   .     0.26
31.4145    0       2      0    1    0    3     1   0     0.71
23.4868    0       2      0    1    0    3     0   0     0.84
59.1118    1       2      0    1    0    3     1   0     0.70
 4.7697    0       2      0    1    0    2     0   0     0.36
36.8750    0       2      0    1    0    3     1   .     2.10
 3.6513    0       3      0    0    1    4     1   .     1.68
12.5329    0       2      0    1    0    3     1   0     0.70
 6.6118    0       2      0    1    0    2     0   .     0.30
37.7632    0       2      0    1    0    4     1   1     3.00
 3.8816    0       3      0    0    1    4     1   .     5.10
 0.2632    0       4      0    0    0    3     1   1     2.20
36.4145    1       2      0    1    0    4     1   0     3.10
37.7632    0       3      0    0    1    4     0   0     2.40
 0.4934    0       2      0    1    0    4     1   1     3.80
20.8553    1       3      0    0    1    4     0   .     3.60
 1.6447    1       2      0    1    0    4     0   0     2.05
35.5263    0       1      1    0    0    3     1   0     0.83
 1.9737    0       2      0    1    0    4     1   0     1.73
35.2303    0       2      0    1    0    4     1   1     2.80
 8.5197    0       1      1    0    0    3     0   1     1.05
40.4605    0       1      1    0    0    3     1   0     0.68
 8.0921    0       2      0    1    0    2     1   .     0.35
50.4605    1       2      0    1    0    4     1   0     1.24
11.1184    0       2      0    1    0    3     0   0     1.10
29.2763    0       2      0    1    0    4     1   0     2.38
 0.3947    0       3      0    0    1    4     1   .     0.90
36.4145    0       2      0    1    0    4     1   .     3.20
 6.2500    1       1      1    0    0    .     1   1    12.00
 3.5526    0       2      0    1    0    4     1   0     1.45
23.3553    0       2      0    1    0    3     1   0     0.65
 0.0000    0       2      0    1    0    2     1   0     0.40
 0.0000    0       1      1    0    0    .     1   0     0.40
11.3487    1       2      0    1    0    4     0   0     1.87
35.4605    0       1      1    0    0    2     1   0     0.48
30.6250    0       3      0    0    1    4     1   .     0.90
28.9474    0       1      1    0    0    2     0   0     0.18
14.4079    0       2      0    1    0    4     1   1     2.30
 64.474    0       3      0    0    1    2     1   0     0.40
  8.289    0       2      0    1    0    4     1   1     1.78
 49.375    1       2      0    1    0    4     1   .     4.30
  5.164    0       1      1    0    0    2     0   0     0.27
  2.336    0       4      0    0    0    2     1   0     0.45
 48.553    0       1      1    0    0    2     1   .     0.35
  3.750    0       1      1    0    0    2     1   .     0.32
 30.559    0       1      1    0    0    4     1   .     1.48
 37.993    0       1      1    0    0    2     1   0     0.63
  2.599    0       1      1    0    0    2     0   .     0.40
 79.803    0       2      0    1    0    2     1   .     0.40
 73.750    1       2      0    1    0    4     0   .     1.90
  2.993    0       2      0    1    0    2     0   .     0.28
  1.283    0       3      0    0    1    2     0   .     0.45
  4.967    0       3      0    0    1    4     1   1     4.10
  0.724    0       1      1    0    0    3     0   .     1.30
  0.789    0       1      1    0    0    3     0   .     1.15
 19.605    0       3      0    0    1    2     1   .     0.55
 35.592    0       1      1    0    0    2     0   .     0.40
 32.664    0       1      1    0    0    .     1   1     5.00
 35.691    0       1      1    0    0    4     1   .     2.10
  7.368    0       2      0    1    0    3     1   .     2.25
  3.257    0       1      1    0    0    4     0   1     4.50
101.908    0       2      0    1    0    .     0   .     0.90
 38.882    0       1      1    0    0    .     1   .     0.31
  5.263    1       1      1    0    0    3     1   1     1.83
  3.750    0       2      0    1    0    3     1   0     0.95
 36.974    0       4      0    0    0    4     0   .     1.50
 25.428    0       1      1    0    0    4     0   0     0.87
 22.007    0       2      0    1    0    4     1   0     3.08
 35.921    0       1      1    0    0    4     0   0     2.00
 36.414    0       3      0    0    1    .     0   0     2.62
 37.138    0       1      1    0    0    4     1   1     2.62
 48.717    1       2      0    1    0    3     1   0     1.86
 37.401    0       2      0    1    0    4     1   0     1.52
  0.855    0       2      0    1    0    4     0   .     1.15
  3.191    0       1      1    0    0    4     0   1     2.52
35.6908    0       1      1    0    0    .     0   1     1.90
41.4145    0       2      0    1    0    4     1   .     1.80
13.1250    0       1      1    0    0    4     0   0     1.07
33.7500    0       1      1    0    0    2     1   0     0.24
31.4803    0       4      0    0    0    3     1   .     0.80
36.4474    0       2      0    1    0    4     1   1     5.20
18.1250    1       1      1    0    0    .     1   1     6.00
 0.2303    0       1      1    0    0    3     0   0     0.80
29.9013    0       3      0    0    1    4     0   .     2.10
 2.2697    0       2      0    1    0    .     1   .    11.00
 4.4079    0       3      0    0    1    4     1   1     1.75
36.0526    0       2      0    1    0    3     0   0     0.65
66.3816    0       1      1    0    0    .     0   .     8.00
 7.8289    0       2      0    1    0    2     0   .     0.25
27.5658    0       1      1    0    0    2     0   .     0.38
11.6776    0       2      0    1    0    3     1   .     1.77
30.9539    0       2      0    1    0    2     1   0     0.80
30.6579    0       3      0    0    1    4     0   .     1.56
36.1842    0       2      0    1    0    4     1   .     2.90
35.2961    0       1      1    0    0    4     0   .     1.45
29.0461    0       2      0    1    0    4     1   .     2.00
84.4408    1       3      0    0    1    3     1   .     0.85
12.8947    1       3      0    0    1    4     0   1     2.11
 8.0263    1       3      0    0    1    .     1   .    11.00
11.2171    1       1      1    0    0    4     1   1     3.70
38.2895    1       2      0    1    0    3     1   0     1.40
21.7105    1       1      1    0    0    .     0   .     3.40
36.1842    0       1      1    0    0    4     1   0     2.10
10.1645    1       1      1    0    0    4     0   .     1.50
27.0724    0       2      0    1    0    3     0   .     0.90
 1.7763    0       3      0    0    1    2     1   0     0.43
34.3421    0       3      0    0    1    2     1   0     0.42
 2.5000    0       1      1    0    0    4     1   .     5.38
33.3882    0       3      0    0    1    4     0   0     1.28
34.0789    0       3      0    0    1    2     0   1     2.00
34.5066    0       2      0    1    0    3     0   0     1.15
20.4276    1       2      0    1    0    4     1   0     2.30
 22.599    0       3      0    0    1    1     1   0     0.66
 35.888    0       1      1    0    0    4     1   .     1.23
  3.947    0       2      0    1    0    2     1   0     0.70
  3.783    0       2      0    1    0    2     0   0     0.30
 62.730    1       1      1    0    0    4     1   0     1.68
 18.191    0       2      0    1    0    3     0   1     1.60
  0.888    0       1      1    0    0    4     0   .     4.40
  1.546    0       3      0    0    1    .     1   0     5.94
  1.612    0       2      0    1    0    4     1   0     1.40
 22.303    0       2      0    1    0    3     1   .     2.20
 29.474    0       3      0    0    1    3     1   .     0.92
 15.164    1       2      0    1    0    4     1   1     1.80
132.171    0       1      1    0    0    .     0   .     2.73
  3.717    1       1      1    0    0    .     0   1    13.00
 34.737    0       1      1    0    0    2     1   0     0.60
 18.914    0       2      0    1    0    2     1   .     0.35
 27.961    1       1      1    0    0    4     1   0     0.75
 30.428    0       2      0    1    0    2     1   .     1.05
  7.632    0       1      1    0    0    3     1   0     0.86
  6.809    1       1      1    0    0    .     1   1     4.62
  3.750    0       1      1    0    0    3     0   0     2.20
  0.691    0       1      1    0    0    4     1   .     2.50
 18.224    0       2      0    1    0    2     0   0     0.64
 19.803    1       1      1    0    0    .     0   .     3.30
 16.875    0       1      1    0    0    2     0   0     0.40
  0.000    1       1      1    0    0    4     0   .     1.21
 23.289    0       2      0    1    0    2     1   0     0.22
 28.586    0       2      0    1    0    2     1   0     0.27
  7.072    0       2      0    1    0    2     1   0     0.50
123.289    0       2      0    1    0    3     0   .     1.75
 24.375    1       1      1    0    0    4     0   0     4.42
 13.125    1       3      0    0    1    3     0   1     2.55
  0.921    0       1      1    0    0    2     1   0     0.81
 31.086    0       2      0    1    0    3     1   0     2.80
  0.526    0       1      1    0    0    3     1   0     1.58
 29.770    0       3      0    0    1    2     1   0     0.35
 32.237    0       2      0    1    0    4     0   0     1.10
 31.546    0       1      1    0    0    3     0   0     1.10
 33.454    0       2      0    1    0    3     1   0     0.86
  6.776    0       1      1    0    0    4     0   .     1.08
 14.112    1       2      0    1    0    4     1   1     2.55
 27.862    0       1      1    0    0    4     0   1     1.78
 25.822    0       1      1    0    0    3     0   0     0.76
  8.914    0       1      1    0    0    3     0   0     0.80
 15.625    1       2      0    1    0    4     0   0     2.00
 29.901    0       1      1    0    0    3     0   0     1.58
  9.605    0       1      1    0    0    4     0   0     1.25
  0.855    0       2      0    1    0    2     0   .     0.50
  2.007    0       2      0    1    0    3     1   0     0.85
 14.638    0       2      0    1    0    4     0   1     3.00
 31.579    0       2      0    1    0    3     0   0     0.72
 25.526    0       2      0    1    0    .     1   1     6.00
 31.250    0       2      0    1    0    4     1   1     4.80
 25.559    1       1      1    0    0    4     1   1     4.55
 31.316    0       2      0    1    0    2     1   0     0.24
 29.539    0       2      0    1    0    4     1   0     1.20
 33.125    1       2      0    1    0    3     0   .     1.56
  5.987    0       2      0    1    0    2     1   .     0.85
 35.033    1       2      0    1    0    3     1   .     1.04
129.638    1       2      0    1    0    4     1   .     2.00
  4.671    1       3      0    0    1    4     1   .     1.50
 11.579    1       2      0    1    0    4     1   .     1.87
  6.579    0       2      0    1    0    4     1   0     3.50
  0.987    1       2      0    1    0    .     1   0     1.52
 12.467    0       2      0    1    0    2     1   0     0.47
 29.309    0       1      1    0    0    4     0   0     1.25
  5.395    1       1      1    0    0    3     0   0     1.82
  7.664    1       2      0    1    0    4     1   .     3.30
 29.671    0       2      0    1    0    3     0   0     1.24
 93.026    1       2      0    1    0    2     1   .     0.56
 78.026    0       2      0    1    0    2     1   0     0.27
 22.467    0       2      0    1    0    4     1   1     5.20
  4.934    1       2      0    1    0    4     0   1     1.00
 31.645    0       1      1    0    0    2     0   0     0.30
31.3816    0       2      0    1    0    4     0   0     2.10
30.2303    0       1      1    0    0    4     1   0     1.86
 2.4013    0       3      0    0    1    4     0   .     2.20
28.7829    0       1      1    0    0    4     0   0     1.75
12.8947    0       2      0    1    0    3     0   .     1.04
79.9342    1       2      0    1    0    4     0   .     2.03
14.2763    0       2      0    1    0    2     1   0     0.50
29.5066    0       2      0    1    0    3     0   0     1.10
13.2895    0       1      1    0    0    4     0   0     2.88
54.1447    0       1      1    0    0    3     1   .     1.32
29.9342    0       1      1    0    0    2     1   0     0.40
31.4145    0       2      0    1    0    2     1   .     0.80
 4.1118    0       3      0    0    1    2     1   .     0.35
 2.6316    1       2      0    1    0    4     0   1     2.90
 6.6118    1       1      1    0    0    4     1   1     8.20
 3.5526    0       3      0    0    1    3     1   .     1.25
34.0461    0       3      0    0    1    4     1   0     1.22
28.3553    0       1      1    0    0    2     0   0     0.60
27.1711    0       2      0    1    0    4     0   1     1.60
 9.0132    1       2      0    1    0    4     0   0     1.35
67.1053    1       2      0    1    0    4     1   0     2.25
24.0132    0       1      1    0    0    3     0   1     1.82
 8.9803    0       1      1    0    0    3     1   0     1.00
 4.1447    1       1      1    0    0    4     0   1      .
28.3553    1       1      1    0    0    4     0   1     4.50
19.2434    1       2      0    1    0    3     1   1     2.30
 0.2961    0       3      0    0    1    2     0   0     0.72
23.2566    0       2      0    1    0    3     1   .     0.50
 0.3618    0       1      1    0    0    3     1   0     0.52
 6.8750    1       1      1    0    0    4     0   1     3.00
12.2368    0       2      0    1    0    3     1   1     0.65
26.8421    1       3      0    0    1    3     1   .     0.90
25.0658    0       3      0    0    1    3     1   .     0.48
 3.2237    0       1      1    0    0    2     1   1     3.00
24.7039    0       2      0    1    0    3     1   0     0.81
22.0724    0       1      1    0    0    3     1   0     0.92
23.6184    0       1      1    0    0    3     0   1     0.69
 19.3421    0       2      0    1    0    3     1   1     3.00
 48.0263    0       2      0    1    0    2     1   1     1.30
 25.3618    0       3      0    0    1    2     0   0     0.32
 66.3158    1       2      0    1    0    4     1   .     3.80
  1.6776    1       1      1    0    0    4     1   0     1.74
 65.7237    0       3      0    0    1    1     1   .     0.10
 13.9803    0       1      1    0    0    4     1   0     6.00
  1.3816    0       3      0    0    1    3     1   .     1.00
 23.7500    1       2      0    1    0    4     1   .     3.50
  0.4276    0       1      1    0    0    .     1   0     0.64
 27.2039    1       1      1    0    0    4     0   0     1.76
  0.0000    1       1      1    0    0    4     0   .     1.85
 64.9671    1       3      0    0    1    3     0   0     3.80
 54.1118    1       1      1    0    0    4     1   0     2.40
  0.5592    0       2      0    1    0    2     0   .     0.61
 28.4868    0       3      0    0    1    4     1   .     1.10
  3.1250    0       3      0    0    1    .     1   .    10.60
  4.6711    0       1      1    0    0    3     0   .     1.04
 26.8750    0       1      1    0    0    4     0   1     2.50
 -2.9934    1       2      0    1    0    4     1   0     2.49
 26.9408    1       1      1    0    0    3     1   .     1.20
  0.0000    1       2      0    1    0    3     1   0     1.00
 26.4803    0       3      0    0    1    4     1   1     3.60
 44.7039    1       1      1    0    0    3     1   .     2.30
  1.2171    1       3      0    0    1    4     1   0     2.70
  1.2829    0       2      0    1    0    3     0   0     0.50
  0.0000    0       2      0    1    0    3     1   0     7.00
  2.3355    0       1      1    0    0    4     1   1     3.00
 13.9474    0       4      0    0    0    3     1   0     0.90
  1.8421    0       2      0    1    0    3     1   .     0.65
 19.0789    0       1      1    0    0    3     1   .     0.50
 11.4803    0       1      1    0    0    4     0   0     2.10
 28.4868    0       2      0    1    0    4     1   0     4.00
 16.7434    0       1      1    0    0    4     0   0     0.90
 19.6382    0       1      1    0    0    2     0   0     0.48
 28.1579    0       2      0    1    0    3     1   0     0.50
  0.1974    0       1      1    0    0    3     0   .     0.82
  1.086    0       1      1    0    0    4     1   .     3.00
 17.303    0       3      0    0    1    4     1   0     5.50
166.447    1       2      0    1    0    3     1   .     0.81
  2.007    1       1      1    0    0    3     1   .     0.67
 25.526    0       1      1    0    0    2     0   .     0.50
  2.599    0       1      1    0    0    4     0   0     2.55
 24.441    0       2      0    1    0    3     1   0     3.17
 16.349    1       2      0    1    0    4     0   .     2.20
  8.717    0       2      0    1    0    4     1   .     2.40
 34.375    0       3      0    0    1    4     1   0     2.02
 34.375    0       2      0    1    0    4     1   0     1.02
  9.507    0       3      0    0    1    4     1   0     4.10
  0.461    0       3      0    0    1    4     1   1     3.00
 11.579    0       2      0    1    0    3     1   0     0.94
  2.829    0       1      1    0    0    3     1   0     0.51
  4.013    0       2      0    1    0    4     0   0     1.44
 22.862    0       2      0    1    0    3     1   0     2.30
 23.158    0       2      0    1    0    3     1   .     1.35
 25.362    0       2      0    1    0    4     1   0     1.65
 29.737    0       2      0    1    0    4     0   0     1.10
  9.539    0       3      0    0    1    3     1   0     0.90
 10.132    1       1      1    0    0    4     0   0     1.70
  1.513    0       2      0    1    0    2     0   .     0.25
 24.474    0       1      1    0    0    4     0   .     5.50
  8.882    0       2      0    1    0    3     .   1     2.05
 12.237    1       3      0    0    1    4     1   .     2.00
  0.888    1       2      0    1    0    2     1   .     0.71
 24.901    0       2      0    1    0    4     1   .     1.95
 23.651    0       2      0    1    0    4     0   1     2.80
 18.849    0       1      1    0    0    4     0   1     4.50
 19.112    0       2      0    1    0    3     0   0     1.03
 17.632    0       3      0    0    1    3     1   1     1.50
  9.408    1       2      0    1    0    4     0   1     4.10
 10.066    1       2      0    1    0    4     1   1     4.70
 20.395    0       2      0    1    0    3     1   .     1.10
 11.579    1       3      0    0    1    4     0   1     2.77
 16.875    0       1      1    0    0    3     0   .     0.51
 14.605    1       2      0    1    0    4     1   1     5.00
  1.020    0       3      0    0    1    4     0   0     2.60
 10.559    0       4      0    0    0    4     1   .     1.00
 26.217    1       1      1    0    0    4     1   0     2.60
 20.395    0       2      0    1    0    4     1   .     5.30
  7.368    0       2      0    1    0    4     0   0     2.50
  1.678    0       1      1    0    0    3     0   1     1.38
 24.638    0       1      1    0    0    2     0   .     0.25
 19.211    0       3      0    0    1    4     1   .     2.30
 23.914    0       2      0    1    0    4     1   0     2.10
 24.309    0       1      1    0    0    3     1   0     1.70
  1.842    0       2      0    1    0    2     1   .     0.42
 11.678    0       3      0    0    1    4     1   .     4.00
 18.783    0       2      0    1    0    4     1   1     3.30
 19.868    0       1      1    0    0    4     0   1     2.60
  9.671    0       2      0    1    0    4     1   1     5.80
 16.875    0       2      0    1    0    4     1   1     3.63
 15.888    0       1      1    0    0    2     1   1     0.50
  8.586    0       1      1    0    0    2     0   0     0.36
 26.908    0       1      1    0    0    .     1   1    11.00
 22.895    0       2      0    1    0    4     1   1     6.00
  2.204    0       1      1    0    0    3     1   .     1.00
  1.645    0       2      0    1    0    3     1   0     1.28
 12.007    0       2      0    1    0    3     0   0     1.20
 11.053    1       1      1    0    0    4     0   0     2.12
 10.691    1       1      1    0    0    4     0   0     0.99
 13.750    0       1      1    0    0    3     0   0     1.18
 12.500    0       2      0    1    0    3     1   0     1.18
130.757    0       2      0    1    0    2     0   0     0.33
 22.368    0       2      0    1    0    4     1   0     0.88
 15.395    0       2      0    1    0    4     1   0     2.82
 13.553    0       1      1    0    0    3     0   0     1.12
 63.684    1       2      0    1    0    3     0   0     1.32
 21.513    0       3      0    0    1    4     0   0     1.20
 16.941    0       3      0    0    1    4     0   1     3.01
 25.164    0       2      0    1    0    4     0   0     1.45
 19.803    0       1      1    0    0    3     1   .     0.85
 13.7500    1       2      0    1    0    4     0   1     2.38
19.1776    0       2      0    1    0    3     0   .     1.04
29.8355    0       1      1    0    0    4     0   .     0.82
34.7039    0       2      0    1    0    2     0   0     0.52
18.6184    0       1      1    0    0    3     0   .     0.90
36.5132    0       1      1    0    0    4     0   0     1.32
 4.3750    0       2      0    1    0    4     0   1     3.00
24.8355    0       1      1    0    0    4     1   0     1.15
34.6053    1       2      0    1    0    3     1   .     0.69
14.9671    0       2      0    1    0    3     0   0     1.40
20.7566    0       1      1    0    0    3     1   .     3.08
29.2434    0       2      0    1    0    3     1   .     1.10
16.5789    0       1      1    0    0    4     0   0     1.75
 5.1316    0       1      1    0    0    4     1   0     3.20
19.9013    0       1      1    0    0    4     1   0     1.72
19.8355    0       1      1    0    0    3     1   1     1.37
 0.7237    1       1      1    0    0    .     0   1     3.75
31.1184    0       1      1    0    0    4     0   .     1.62
 0.8224    0       1      1    0    0    2     1   0     0.32
 1.0526    0       1      1    0    0    .     1   0     3.80
63.4211    1       2      0    1    0    2     1   .     0.24
14.0789    1       2      0    1    0    4     1   0     3.28
 7.2697    0       1      1    0    0    4     0   1     2.60
20.5921    0       2      0    1    0    4     0   .     3.40
25.8224    0       2      0    1    0    3     0   0     0.45
 1.1184    0       1      1    0    0    4     1   1     1.05
 1.9737    0       1      1    0    0    3     1   0     0.75
12.6974    1       3      0    0    1    2     1   1     0.50
18.6513    0       1      1    0    0    4     1   1     2.50
16.0197    0       2      0    1    0    3     0   .     1.00
 5.7237    1       1      1    0    0    2     0   1     0.35
 9.7368    0       2      0    1    0    3     1   0     3.50
 2.6316    1       4      0    0    0    4     1   1     3.10
85.7237    1       1      1    0    0    4     1   0     1.75
13.0263    0       3      0    0    1    3     1   .     1.00
22.1053    0       2      0    1    0    4     1   .     1.93
77.8618    1       1      1    0    0    4     0   0     2.30
  17.993    0       2      0    1    0    4     1   .     2.92
  19.803    0       2      0    1    0    3     1   1     0.70
   0.592    0       1      1    0    0    4     0   .     2.80
-130.164    1       2      0    1    0    3     1   .     0.72
   9.868    1       1      1    0    0    4     1   0     2.40
   1.316    0       2      0    1    0    4     1   0     2.10
  19.145    0       2      0    1    0    2     1   0     0.65
  13.816    0       2      0    1    0    4     1   .     1.20
  62.368    1              .    .    .    4     0   .     1.10
  63.355    1       2      0    1    0    3     1   1     2.40
   9.013    0       1      1    0    0    3     1   1     1.40
   1.842    0       1      1    0    0    4     1   .     3.70
  18.849    0       3      0    0    1    3     1   .     1.40
  11.974    0       2      0    1    0    3     1   0     0.89
   7.895    1       2      0    1    0    4     0   1     6.70
   4.211    0       2      0    1    0    2     0   0     0.23
   4.836    0       2      0    1    0    3     1   .     0.90
   0.789    0       3      0    0    1    2     1   .     0.54
  14.309    0       2      0    1    0    2     1   0     0.51
  21.250    0       2      0    1    0    4     0   .     3.14
  17.072    0       3      0    0    1    2     1   0     0.49
  17.763    0       1      1    0    0    2     1   0     0.85
   0.428    0       1      1    0    0    4     0   0     3.30
 178.947    1       3      0    0    1    3     1   0     0.40
  14.309    0       1      1    0    0    4     0   0     1.89
  17.862    0       1      1    0    0    3     1   1     0.57
  17.763    0       2      0    1    0    4     1   0     2.25
  26.875    0       2      0    1    0    3     1   1     1.60
  17.961    0       2      0    1    0    2     0   0     0.23
  13.750    1       2      0    1    0    4     1   0     3.00
  11.908    0       1      1    0    0    3     0   0     0.35
  57.204    1       3      0    0    1    3     0   .     1.50
   0.461    0              .    .    .    4     1   1     2.23
  20.230    0       1      1    0    0    2     0   0     2.10
  15.921    0       2      0    1    0    3     0   0     1.00
  39.934    1       1      1    0    0    4     1   0     1.62
  19.408    0       2      0    1    0    .     0   .     2.30
13.4868    0       1      1    0    0    3     1   0     3.41
 4.5066    0       1      1    0    0    3     1   0     1.05
 1.5461    0       1      1    0    0    4     1   0     1.55
23.2237    0       2      0    1    0    4     1   .     1.00
 6.6776    0       1      1    0    0    3     1   0     1.05
 9.1118    0       2      0    1    0    4     1   0     1.76
12.4342    1       2      0    1    0    4     1   .     6.90
12.0066    1       1      1    0    0    4     1   0     2.46
 0.4605    0       3      0    0    1    4     1   .     0.72
 3.2566    0       2      0    1    0    2     0   0     0.45
16.0526    0       1      1    0    0    3     0   0     0.83
18.7829    0       2      0    1    0    2     0   0     0.26
32.8618    1       2      0    1    0    3     1   0     1.33
12.5987    0       2      0    1    0    2     0   0     0.53
31.2829    0       1      1    0    0    4     0   0     2.70
 4.3421    0       2      0    1    0    3     0   0     0.92
18.9803    0       2      0    1    0    4     1   1    10.00
13.2895    0       3      0    0    1    .     0   0     5.60
17.0724    0       1      1    0    0    4     0   0     1.00
 4.4079    0       1      1    0    0    4     0   .     2.92
13.1250    0       3      0    0    1    4     1   1     3.25
16.4803    0       1      1    0    0    4     1   1     4.91
18.9145    0       1      1    0    0    4     1   1     1.50
 0.3947    0       2      0    1    0    2     1   1     0.30
20.0987    0       3      0    0    1    4     1   0     2.27
19.0461    1       1      1    0    0    4     0   0     1.65
 1.6776    0       2      0    1    0    .     1   1     6.87
13.2566    0       3      0    0    1    4     1   0     2.20
24.3092    0       2      0    1    0    3     0   0     1.80
16.0197    0       1      1    0    0    3     0   0     0.80
 2.7303    0       1      1    0    0    4     1   0     0.85
 5.4605    0       3      0    0    1    4     1   0     1.85
 5.3289    1       1      1    0    0    4     0   1     1.00
14.0461    0       3      0    0    1    4     0   1     2.30
14.7368    0       1      1    0    0    4     1   0     2.50
22.7303    0       1      1    0    0    4     1   .     1.80
16.3816    0       3      0    0    1    4     1   0     1.15
  1.184    0       2      0    1    0    4     1   .     1.30
 14.507    0       3      0    0    1    4     0   1     2.50
  7.862    1       2      0    1    0    4     0   1     4.13
  5.099    0       2      0    1    0    4     1   1     3.21
 10.000    0       1      1    0    0    4     0   1     1.60
 15.362    0       1      1    0    0    4     1   .     2.80
  0.461    0       2      0    1    0    2     1   0     0.35
 15.789    0       1      1    0    0    4     1   0     1.10
 15.855    0       2      0    1    0    4     1   1     2.74
 10.592    0       1      1    0    0    4     0   0     2.05
  0.000    0       1      1    0    0    2     0   .     0.55
 53.618    1       2      0    1    0    4     1   .     7.05
 65.230    0       4      0    0    0    4     1   .     5.80
 12.697    0       2      0    1    0    2     1   0     0.42
  2.303    0       3      0    0    1    4     1   0     4.87
  3.947    0       2      0    1    0    2     1   0     0.20
 17.072    0       1      1    0    0    4     0   1     3.64
 14.112    0       3      0    0    1    .     1   1     4.80
  0.493    0       2      0    1    0    3     0   0     2.00
162.138    1       1      1    0    0    4     1   0     1.58
 12.993    0       2      0    1    0    3     1   1     3.00
 12.763    0       2      0    1    0    2     1   .     0.42
 15.724    0       2      0    1    0    4     0   1     1.00
 19.605    1       1      1    0    0    4     1   1     2.75
 15.691    0       1      1    0    0    4     1   0     1.50
 15.033    0       1      1    0    0    4     1   0     1.10
 17.303    0       3      0    0    1    .     1   .     3.40
  0.724    0       3      0    0    1    .     0   1    13.00
  0.691    1       3      0    0    1    4     1   .     2.55
 20.757    0       2      0    1    0    4     0   .     2.80
 13.355    0       2      0    1    0    4     1   0     1.30
  4.211    0       1      1    0    0    4     0   0     1.45
 15.164    0       3      0    0    1    4     0   0     1.68
  0.526    0       3      0    0    1    4     0   .     1.20
  0.395    0       1      1    0    0    3     0   .     2.50
 10.855    0       3      0    0    1    4     0   1     5.00
 15.691    0       2      0    1    0    4     1   1     3.86
22.3684    1       1      1    0    0    4     0   .     4.00
61.1513    0       2      0    1    0    2     0   0     0.50
13.0263    0       3      0    0    1    4     0   0     2.60
15.4276    0       1      1    0    0    4     1   .     1.08
15.8553    0       2      0    1    0    3     1   .     0.75
14.7697    0       1      1    0    0    4     1   0     2.45
15.7895    0       2      0    1    0    4     0   1     1.75
 8.7171    0       1      1    0    0    2     0   .     0.63
15.3947    0       2      0    1    0    4     0   1     2.32
13.4868    0       1      1    0    0    4     0   .     0.82
12.6974    0       1      1    0    0    4     0   1     3.35
14.9342    0       1      1    0    0    4     0   0     1.87
 6.6118    1       1      1    0    0    4     1   .     0.80
14.6711    0       2      0    1    0    .     0   1     3.13
12.7632    0       3      0    0    1    2     0   .     0.40
15.3947    0       1      1    0    0    3     0   0     1.04
 8.0592    0       2      0    1    0    2     0   .     0.52
13.6842    0       1      1    0    0    3     0   0     0.43
 9.9671    0       1      1    0    0    4     0   0     1.00
 5.0329    0       3      0    0    1    1     1   .     0.30
13.2895    0       3      0    0    1    4     1   1     1.04
11.6447    0       2      0    1    0    3     1   0     0.58
20.8882    0       2      0    1    0    4     1   1     2.57
 2.6316    0       2      0    1    0    3     0   0     0.98
 5.5592    0       3      0    0    1    3     0   .     1.26
26.8421    0       1      1    0    0    2     1   1     0.30
11.2829    0       1      1    0    0    4     0   0     1.72
 7.9276    0       1      1    0    0    4     0   1     2.35
11.3816    0       2      0    1    0    2     0   1     0.40
13.2566    0       1      1    0    0    2     0   0     0.40
12.9605    0       2      0    1    0    3     1   .     1.29
11.2171    0       2      0    1    0    4     1   0     6.00
 3.2895    0       2      0    1    0    4     1   0     1.05
 0.7566    0       2      0    1    0    4     0   0     1.40
 7.0066    1       1      1    0    0    3     1   1     1.04
22.6316    1       1      1    0    0    2     1   0     0.68
12.5329    0       2      0    1    0    4     1   .     4.50
13.3553    0       2      0    1    0    4     1   0     3.40
13.4539    0       2      0    1    0    4     1   0     1.50
45.0000    0       1      1    0    0    2     0   0     0.40
 0.3618    0       3      0    0    1    2     1   .     0.60
12.4671    0       3      0    0    1    2     0   1     0.50
29.9342    1       2      0    1    0    1     0   0     0.47
14.3092    0       1      1    0    0    4     0   1     2.50
 0.9211    0       3      0    0    1    4     1   1     3.00
 1.3158    1       1      1    0    0    4     1   0    10.20
 1.6118    0       1      1    0    0    4     0   0     2.10
 0.4934    0       1      1    0    0    2     0   0     0.30
12.2368    0       1      1    0    0    4     0   0     1.75
14.1447    0       2      0    1    0    2     1   0     0.30
 5.0658    0       2      0    1    0    3     1   0     1.10
12.6316    0       1      1    0    0    4     1   1     3.10
 8.4211    0       3      0    0    1    4     1   .     3.70
10.3618    0       2      0    1    0    4     1   1     2.25
 5.5592    0       2      0    1    0    4     1   1     2.75
 6.6447    1       2      0    1    0    4     0   0     5.30
13.2566    0       3      0    0    1    .     1   0     2.25
10.9539    0       1      1    0    0    4     1   0     2.00
12.7961    0       2      0    1    0    3     1   .     0.77
14.4079    0       1      1    0    0    3     0   1     0.85
18.4211    0       2      0    1    0    3     1   0     1.40
22.3684    0       1      1    0    0    3     0   0     1.00
 5.0329    0       2      0    1    0    4     1   1     2.35
 5.9868    0       3      0    0    1    2     1   0     0.50
 1.6118    0       2      0    1    0    3     0   0     1.20
11.8421    0       2      0    1    0    4     1   0     1.30
10.0658    0       1      1    0    0    4     0   1     5.00
40.9211    1       2      0    1    0    4     1   1     2.34
 9.9671    0       2      0    1    0    4     0   1     1.50
93.9803    1       1      1    0    0    3     0   .     8.00
31.0526    1       2      0    1    0    4     1   .     1.75
 2.2039    0       2      0    1    0    2     0   0     0.23
12.1711    0       2      0    1    0    3     1   0     1.00
 2.4013    0       2      0    1    0    4     1   0     2.16
  11.382    0       2      0    1    0    3     0   0     1.01
 12.993    0       1      1    0    0    4     0   1     3.40
  0.954    0       2      0    1    0    4     1   1     0.85
  0.724    0       1      1    0    0    4     0   1     4.50
 10.296    0       3      0    0    1    4     1   1     1.87
  5.362    0       1      1    0    0    4     0   0     2.30
 12.434    0       1      1    0    0    4     0   1     2.10
 12.862    0       3      0    0    1    2     1   0     0.40
  2.961    0       2      0    1    0    4     1   1     1.60
 11.776    0       3      0    0    1    3     1   1     4.20
 67.072    0       3      0    0    1    3     1   .     1.00
  7.993    1       2      0    1    0    4     1   0     1.72
 13.191    1       1      1    0    0    4     0   1     4.00
 10.099    1       1      1    0    0    4     1   1     1.60
 11.743    0       2      0    1    0    3     1   0     0.64
  0.099    1       2      0    1    0    4     0   0     2.45
  0.789    0       1      1    0    0    3     0   .     0.55
  5.954    0       3      0    0    1    2     1   0     0.40
  9.243    0       2      0    1    0    4     1   0     1.20
 57.368    1       1      1    0    0    3     1   .     0.94
  1.184    0       2      0    1    0    2     0   0     0.32
 18.717    1       3      0    0    1    3     1   0     0.86
 11.875    0       3      0    0    1    2     0   .     0.65
 11.316    0       2      0    1    0    3     1   0     2.25
 15.230    1       1      1    0    0    4     0   .     1.50
 56.020    0       2      0    1    0    4     1   0     5.50
  5.757    0       3      0    0    1    2     0   0     0.30
  1.743    1       2      0    1    0    .     1   .     1.40
 10.855    0       1      1    0    0    4     0   1     3.87
  7.039    0       2      0    1    0    3     1   1     1.10
  7.829    0       1      1    0    0    2     0   0     0.40
  1.875    0       1      1    0    0    3     1   .     0.80
 15.428    0       1      1    0    0    3     0   0     1.80
146.941    0       2      0    1    0    2     0   0     0.34
 81.776    1       3      0    0    1    2     0   0     0.80
  9.605    0       1      1    0    0    3     0   0     0.60
 10.033    0       1      1    0    0    3     0   0     0.57
12.1711    0       1      1    0    0    .     0   0     2.87
 4.3421    0       1      1    0    0    2     0   0     0.40
 5.1974    1       4      0    0    0    .     0   1     8.00
 7.5987    0       3      0    0    1    3     0   0     0.65
 8.8158    0       2      0    1    0    3     1   1     0.80
36.2500    1       1      1    0    0    3     1   .     4.00
 9.2105    0       3      0    0    1    3     0   0     1.04
 6.7763    0       2      0    1    0    2     1   0     0.30
 6.5461    0       1      1    0    0    3     1   0     3.63
11.0526    0       1      1    0    0    4     0   0     2.20
11.1184    0       2      0    1    0    4     0   .     1.62
11.5461    0       1      1    0    0    3     0   0     0.60
 2.2697    0       1      1    0    0    4     0   1     1.00
40.5921    1       1      1    0    0    4     0   0     0.63
 3.0263    0       2      0    1    0    4     1   0     3.37
13.9474    0       2      0    1    0    2     0   .     0.38
 1.1513    0       1      1    0    0    3     0   0     1.00
13.0263    0       2      0    1    0    4     0   0     1.50
 1.7105    0       4      0    0    0    3     1   0     1.20
 1.7763    0       3      0    0    1    4     1   0     1.42
 3.1250    0       1      1    0    0    4     0   0     1.70
26.4803    1       1      1    0    0    4     0   0     1.10
 2.4671    0       3      0    0    1    4     0   1     5.75
 9.1776    0       3      0    0    1    .     1   1     4.10
 4.6711    0       1      1    0    0    4     0   0     2.60
 5.9211    0       3      0    0    1    4     1   1     5.12
71.4145    1       1      1    0    0    4     1   1     2.50
 3.0592    0       1      1    0    0    4     1   0     2.00
 6.6776    0       1      1    0    0    2     0   0     0.24
10.4934    0       2      0    1    0    3     0   0     1.35
 4.0461    0       3      0    0    1    3     1   0     0.32
 3.0921    0       1      1    0    0    2     1   .     0.61
 8.0592    0       1      1    0    0    3     1   0     0.59
51.7434    1       2      0    1    0    4     0   1     2.50
 2.0066    0       1      1    0    0    3     0   .     1.45
 9.6053    0       1      1    0    0    4     1   1     1.30
 7.6645    0       1      1    0    0    3     1   .     1.50
  0.625    1       1      1    0    0    4     0   .     1.80
  1.151    0       1      1    0    0    2     0   .     0.40
 10.592    0       1      1    0    0    4     1   0     4.55
  0.329    0       1      1    0    0    4     0   1     7.25
129.605    1       1      1    0    0    3     1   .     2.50
  1.875    0       2      0    1    0    3     1   0     1.00
 11.316    0       2      0    1    0    4     1   0     1.59
  6.711    0       2      0    1    0    2     0   0     0.40
  4.934    0       3      0    0    1    4     1   0     1.51
 11.480    0       1      1    0    0    .     0   0     8.00
 11.941    0       2      0    1    0    3     1   0     0.85
  7.467    0       1      1    0    0    4     0   1     1.85
  9.243    0       3      0    0    1    4     0   0     1.30
  7.138    0       1      1    0    0    2     0   0     0.78
 10.987    0       1      1    0    0    3     1   0     0.50
 29.046    1       2      0    1    0    2     1   0     0.28
  3.882    0       1      1    0    0    .     0   1     2.50
  6.020    0       3      0    0    1    .     1   0     4.00
  0.789    0       1      1    0    0    4     0   0     1.50
 20.592    0       2      0    1    0    .     1   0     4.50
  9.375    0       2      0    1    0    4     1   0     1.42
  9.967    0       1      1    0    0    3     0   0     1.30
  1.217    0       2      0    1    0    2     1   0     0.65
  9.375    0       1      1    0    0    4     1   1     1.92
 10.362    0       2      0    1    0    4     0   1     3.00
  7.895    0       1      1    0    0    4     1   .     0.80
  5.724    0       2      0    1    0    3     1   0     0.82
  1.184    0       2      0    1    0    4     1   1     4.60
  7.796    0       1      1    0    0    3     0   1     3.70
 10.362    0       3      0    0    1    4     1   1     2.89
  9.441    0       1      1    0    0    4     0   1     4.00
  1.151    0       2      0    1    0    4     1   1     6.20
  7.961    0       2      0    1    0    4     1   0     0.90
  8.717    0       3      0    0    1    4     1   1     5.00
  6.908    0       2      0    1    0    2     0   0     0.34
  4.671    0       1      1    0    0    3     1   0     1.35
  7.401    0       1      1    0    0    2     0   0     0.40
 10.461    1       2      0    1    0    4     0   .     7.40
  7.270    0       2      0    1    0    4     1   0     0.95
  1.414    0       3      0    0    1    4     0   0     1.68
  1.086    0       3      0    0    1    4     1   0     1.95
  1.579    0       1      1    0    0    2     0   0     0.70
  1.941    0       1      1    0    0    2     0   0     0.33
  7.763    0       2      0    1    0    4     1   .     1.90
  8.684    0       3      0    0    1    4     1   0     2.80
  1.579    0       2      0    1    0    4     1   1     7.00
  8.322    0       2      0    1    0    4     1   0     6.00
 11.743    0       1      1    0    0    2     0   .     0.30
  7.105    0       2      0    1    0    3     0   .     0.80
 14.507    1       1      1    0    0    3     0   0     1.25
  9.112    1       3      0    0    1    3     1   .     1.60
  7.401    0       1      1    0    0    4     1   .     1.40
132.138    1       3      0    0    1    1     0   0     0.30
  8.289    0       3      0    0    1    4     1   1     1.14
  8.388    0       1      1    0    0    4     0   0     0.95
  7.007    0       1      1    0    0    2     1   0     0.61
  7.105    0       1      1    0    0    3     0   1     1.10
  6.414    0       1      1    0    0    3     1   .     0.51
 11.053    1       1      1    0    0    4     0   0     2.20
  8.059    0       2      0    1    0    3     1   1     1.95
 16.250    1       4      0    0    0    3     1   .     4.00
 44.507    1       2      0    1    0    3     0   0     1.00
  4.211    0       3      0    0    1    4     0   .     0.92
  8.388    0       2      0    1    0    4     1   0     3.12
  5.592    0       1      1    0    0    4     1   1     2.75
  3.947    0       2      0    1    0    3     1   1     3.40
 14.079    0       2      0    1    0    4     1   1     1.39
  7.730    0       1      1    0    0    3     0   0     1.22
  5.855    1       3      0    0    1    3     0   1     2.80
  7.204    0       1      1    0    0    3     1   1     0.80
  0.461    0       1      1    0    0    3     0   0     0.60
 71.809    1       2      0    1    0    3     1   0     1.01
 23.882    1       2      0    1    0    3     1   0     0.65
  1.349    0       2      0    1    0    4     0   1    12.60
  7.993    0       1      1    0    0    4     0   0     1.50
  6.447    0       1      1    0    0    3     0   0     0.76
  5.526    0       1      1    0    0    .     0   .    11.00
  4.967    0       1      1    0    0    4     1   1     3.50
 10.789    0       3      0    0    1    3     1   1     1.50
 79.671    1       3      0    0    1    3     1   0     1.25
 46.743    0       2      0    1    0    3     1   0     0.60
  5.099    0       2      0    1    0    3     1   0     0.82
  0.362    0       1      1    0    0    2     1   0     0.80
  4.046    0       3      0    0    1    4     1   .     0.50
  7.368    0       2      0    1    0    2     1   0     0.74
  5.855    1       2      0    1    0    4     1   1     5.03
  0.921    0       2      0    1    0    4     1   1     2.00
  2.434    0       2      0    1    0    4     0   1     1.30
 12.928    1       1      1    0    0    4     1   1     3.50
  7.467    0       1      1    0    0    4     0   0     2.03
  2.039    0       1      1    0    0    3     0   0     0.80
 25.855    1       1      1    0    0    4     0   1     3.75
  6.908    0       3      0    0    1    2     0   0     0.20
  4.572    0       3      0    0    1    3     0   0     1.50
  4.638    0       2      0    1    0    4     0   1     3.60
  0.296    0       1      1    0    0    .     0   .     2.25
  3.947    0       2      0    1    0    4     1   .     3.00
 81.250    0       2      0    1    0    4     1   1     0.90
  6.875    0       2      0    1    0    4     1   .     2.50
  0.461    0       2      0    1    0    3     0   1     1.60
  6.974    0       1      1    0    0    .     0   1     3.15
  4.046    0       1      1    0    0    4     0   1     1.70
  4.901    0       1      1    0    0    2     1   0     0.20
  3.947    0       2      0    1    0    3     1   0     0.60
  3.191    0       2      0    1    0    4     1   .     1.25
  0.691    0       1      1    0    0    4     0   0     1.85
120.428    1       1      1    0    0    4     1   .     2.15
  3.717    0       2      0    1    0    4     1   .     1.40
  4.770    0       3      0    0    1    2     1   0     0.25
  4.967    0       1      1    0    0    4     0   .     1.65
  4.605    0       2      0    1    0    4     0   0     1.05
 34.046    0       1      1    0    0    .     1   1     1.90
  1.612    0       1      1    0    0    4     0   .     1.40
  0.461    0       2      0    1    0    4     1   1     3.20
  5.329    0       1      1    0    0    4     0   .     2.25
 13.651    0       2      0    1    0    3     1   0     1.56
  2.039    0       1      1    0    0    4     0   0     3.10
  1.711    0       1      1    0    0    3     1   .     1.05
  7.697    1       2      0    1    0    2     1   .     0.45
131.546    1       1      1    0    0    .     0   0     7.68
  5.822    0       1      1    0    0    4     0   0     3.00
  5.559    0       1      1    0    0    3     1   0     1.10
 59.605    1       2      0    1    0    4     1   0     1.35
 47.632    0       1      1    0    0    2     1   0     0.18
  0.033    0       2      0    1    0    4     1   0     0.75
 71.283    0       2      0    1    0    2     1   0     0.26
 51.546    0       1      1    0    0    2     1   0     1.00
154.309    0       2      0    1    0    2     0   0     0.70
  0.197    0       3      0    0    1    3     1   0     0.35
 20.691    0       3      0    0    1    3     1   1     3.50
  7.862    1       2      0    1    0    4     1   0     2.50
 79.178    0       4      0    0    0    2     1   0     0.35
  7.566    0       2      0    1    0    3     0   1     0.59
 25.263    0       1      1    0    0    2     1   .     0.30
 15.197    0       2      0    1    0    2     1   1     1.10
 28.487    0       2      0    1    0    4     1   0     2.50
 22.171    0       1      1    0    0    4     1   .     1.25
 54.112    0       3      0    0    1    4     1   1     2.30
  7.862    1       3      0    0    1    3     1   .     0.90
 50.362    0       2      0    1    0    3     1   0     1.00
 86.809    0       2      0    1    0    4     1   0     1.31
  9.507    0       1      1    0    0    4     1   .     1.00
 45.033    1       2      0    1    0    4     1   0     0.95
 30.888    0       2      0    1    0    3     1   1     0.70
  9.868    0       2      0    1    0    2     1   0     0.45
  0.625    0       2      0    1    0    2     1   0     0.18
 20.822    0       3      0    0    1    4     1   1     5.00
  2.730    0       1      1    0    0    2     0   0     0.32
 2.6974    0       2      0    1    0    4     1   0     3.00
 6.0855    0       2      0    1    0    4     1   .     2.20
 1.8750    0       1      1    0    0    3     1   0     0.60
13.3553    0       3      0    0    1    3     1   0     0.70
19.1776    0       2      0    1    0    4     1   .     1.50
11.1184    1       3      0    0    1    3     1   .     0.75
48.1908    1       2      0    1    0    4     1   0     2.30
 3.8487    1       2      0    1    0    3     0   0     0.70
44.8684    0       2      0    1    0    4     1   0     1.50
 1.1842    0       2      0    1    0    2     1   0     0.50
 2.2039    0       2      0    1    0    3     1   0     0.75
26.6776    0       2      0    1    0    3     1   0     0.75
17.0395    0       1      1    0    0    2     1   0     0.20
 9.7697    0       2      0    1    0    4     0   0     2.54
 1.8750    0       3      0    0    1    2     1   0     0.73
 2.1382    0       1      1    0    0    3     1   0     0.90
 3.8158    0       1      1    0    0    3     0   0     0.40
 0.6579    0       3      0    0    1    .     1   .     3.50
 5.8882    0       2      0    1    0    4     1   1     2.75
 8.6842    0       1      1    0    0    2     1   0     0.45
38.0921    0       2      0    1    0    4     1   .     1.70
60.0987    1       1      1    0    0    4     1   0     2.20
 9.9342    0       2      0    1    0    2     1   0     0.34
41.5789    1       1      1    0    0    3     1   1     1.80
 2.2697    0       1      1    0    0    .     0   0     6.75
10.3618    0       2      0    1    0    4     1   .     1.38
39.2105    1       2      0    1    0    4     1   0     1.56
66.1184    1       2      0    1    0    4     0   0     0.58
 2.1711    1       3      0    0    1    4     1   0     3.48
93.3553    1       2      0    1    0    3     1   0     1.38
31.6447    1       1      1    0    0    3     1   0     0.75
 5.2632    1       2      0    1    0    .     1   0     6.50
60.0658    1       2      0    1    0    4     0   .     3.40
 0.6908    1       3      0    0    1    4     1   0     2.10
50.8224    0       2      0    1    0    3     1   .     0.75
32.5329    1       1      1    0    0    3     1   .     1.10
45.0329    0       1      1    0    0    4     0   1     2.30
  9.243    0       2      0    1    0    4     0   0     1.00
 44.276    1       2      0    1    0    4     1   .     2.58
  5.625    0       3      0    0    1    4     1   1     3.50
  5.987    0       3      0    0    1    4     0   1     4.50
  6.283    0       1      1    0    0    .     0   0     3.00
 10.921    0       1      1    0    0    4     0   1     2.10
  5.329    0       1      1    0    0    4     1   1     3.30
  5.164    0       1      1    0    0    4     0   .     1.15
 10.099    1       2      0    1    0    4     1   .     1.20
 10.066    0       2      0    1    0    4     1   0     2.70
  4.408    0       2      0    1    0    4     1   0     1.30
 43.980    1       2      0    1    0    3     0   0     1.60
 16.217    0       4      0    0    0    4     0   1     8.10
 16.711    1       1      1    0    0    .     1   .     5.70
  5.592    0       2      0    1    0    4     1   .     2.89
  6.447    0       2      0    1    0    4     1   1     2.24
  5.592    0       3      0    0    1    3     1   .     1.47
 14.112    1       2      0    1    0    4     1   .     4.00
  4.901    0       1      1    0    0    4     0   .     1.10
 11.020    0       3      0    0    1    4     1   1     1.43
  5.362    0       3      0    0    1    4     1   0     1.49
 11.842    1       1      1    0    0    4     1   1     1.96
  4.704    0       2      0    1    0    4     1   1     1.10
235.559    1       2      0    1    0    3     1   0     2.24
  5.329    0       3      0    0    1    .     1   1     4.18
 46.118    0       3      0    0    1    4     0   .     1.10
  4.013    0       1      1    0    0    4     1   1     6.50
;












****************************************************
/* The following data set is discussed on page 45 ,*/ 
/* where it is used to produce output 2.8.         */
****************************************************

data; input l r;
datalines; 
0 0.0493
0 0.2849
0 0.4082
0.0517 0.8767
0.0627 0.8877
0.2983 1.1233
1.2247 15
0.5503 1.3753
0.7175 1.5425
0.7586 1.5836
0.9147 1.7397
0.9339 1.7589
0.9476 1.7726
1.0983 1.9233
1.9562 15
1.2243 2.0493
1.4736 2.2986
1.5175 2.3425
2.9065 3.7315
3.2298 4.0548
4.0685 15
3.7613 4.5863
4.1284 4.9534
5.1534 15
5.7315 15
5.0243 5.8493
5.0435 5.8685
6.0712 15
6.1151 15
7.3781 15
7.663 15
8.0438 15
8.189 15
8.2055 15
8.2548 15
8.4274 15
8.4521 15
8.7589 15
9.0356 15
9.8959 15
9.9151 15
9.9178 15
10.1151 15
10.4027 15
10.6 15
9.8353 10.6603
10.6685 15
10.726 15
10.926 15
10.937 15
11.2027 15
11.4548 15
11.4712 15
11.5589 15
11.6082 15
11.6164 15
11.6521 15
11.7123 15
11.7671 15
11.8466 15
11.8575 15
11.8685 15
11.9863 15
12.0082 15
;





*************************************************************************
*************************************************************************

EXAMPLE CODE USED IN THIS BOOK



******************************************************
/*The following example code appears on page 29.     */
/*It produced output 2.1.                            */
******************************************************

                   
data; 
        input time d @@;
        cards;
0.0493 1   0.2849 1   0.4082 1   0.8767 1   0.8877 1   1.1233 1   
1.2247 0   1.3753 1   1.5425 1   1.5836 1   1.7397 1   1.7589 1   
1.7726 1   1.9233 1   1.9562 0   2.0493 1   2.2986 1   2.3425 1   
3.7315 1   4.0548 1   4.0685 0   4.5863 1   4.9534 1   5.1534 0   
5.7315 0   5.8493 1   5.8685 1   6.0712 0   6.1151 0   7.3781 0   
7.6630 0   8.0438 0   8.1890 0   8.2055 0   8.2548 0   8.4274 0   
8.4521 0   8.7589 0   9.0356 0   9.8959 0   9.9151 0   9.9178 0  
10.1151 0  10.4027 0  10.6000 0  10.6603 1  10.6685 0  10.7260 0  
10.9260 0  10.9370 0  11.2027 0  11.4548 0  11.4712 0  11.5589 0  
11.6082 0  11.6164 0  11.6521 0  11.7123 0  11.7671 0  11.8466 0  
11.8575 0  11.8685 0  11.9863 0  12.0082 0
;
 
proc lifetest plots=(s); 
      time time*d(0);
run;



******************************************************
/*The following example code appears on page 33.     */
/*It produced output 2.2.                            */
******************************************************



%kmtable(
         dataset= leuk    /* default is _last_ */
                          /* default is 95 for 95% CI */
         ,time= time      /* time variable */
         ,cens=d          /* variable indicating censored
                             or complete times */
         ,censval= 0      /* value(s) that indicate censored
                             observation */
         ,method= 2       /* 1 for method used in Proc Lifetest
                             2 for method that yields limits in     
                            (0,1) */
         ,variance=p      /* G or g for Greenwood's formula, P or   
                             p for Peto's formula */
                          /* optional variable for separate         
                             tables  */
                          /* yes (default) to print table, no to
                             suppress printing */
)



/* or equivalently      */


%kmtable(dataset=leuk, time=time, cens=d, censval=0, method=2
         variance=p)



******************************************************
/*The following example code appears on page 36 and  */
/*and produces figure 2.3.                           */
******************************************************


%kmplot(
         mark= yes      /* yes to mark times on curve,
                           no (default) to not mark times */
         ,ci= yes       /* yes for confidence intervals,
                           no (default) for no ci's */
                        /* yes to produce multiple plots
                           on the same graph, no (default)
                           for separate plots */
                        /* label for the horizontal axis,
                           default is time */
                        /* label for the vertical axis,
                           default is Pct Survival */

         ,title= Figure 2.3 /* default is Kaplan-Meier Survival     
                           Curve */
                             /* clause to restrict curve(s),        
                              usually of form time < value or r     
                           < value (for n at risk)*/
)



******************************************************
/*The following example code appears on page 40 and  */
/*and produced output 2.5.                           */  
******************************************************


%macro doit;
%do nn = 120 %to 260 %by 20;
   title "Sample Size = &nn";
   %kmplan(s = exp(-.045*u), h = .045 ,N = &nn , A = 4 , tau = 3 , 
           t = 5);
%end;
%mend;

%doit;

******************************************************
/*The following example code appears on page 44      */
/*and produced output 2.6.                           */
******************************************************


data ex1;
     input l r f;
     cards;
0 2  1
1 3  1
2 10 4
4 10 4
;
run;
%ice(data=ex1, time=(l r), freq=f, options=plot)


***************************************************
/* The following code is found on page 60.  It   */
/* produced output 3.1.                          */
**************************************************

data; set tmp1.breastdata;
if agegrp = '0-59' then age = 'LT 60'; 
else age = 'GE 60';
run;
symbol1 c=black l = 1 w = 3;
symbol2 c=black l = 3 w = 3;
proc lifetest censoredsymbol = none plots = (s) timelist = 1 to 8; 
time years*cens(0); 
strata age; 
run;

***************************************************
/* The following code is found on page 67.  It   */
/* produced output 3.2.                          */
**************************************************

data x; set breastdata;
if agegrp = '0-59' then age = 'LT 60'; 
else age = 'GE 60';
%include 'c:\linrank.sas';
%linrank( time=years, cens= cens ,
          censval=0   ,groupvar= age )  

***************************************************
/* The following code is found on page 77.  It   */
/* produced output 3.6.                          */
**************************************************

data x; input time cens group;
cards;
3 1 1  
5 1 1
8 0 1
10 1 1
15 1 1
2 1 2
5 1 2
11 0 2
13 0 2
14 1 2
16 1 2
;

%perm_gen( indata = x, time = time, cens = cens, n1 = 5, n2 = 6, group = group);

%test(time = time  , cens = cens, censval = 0  , test = logrank, group = group, type = perm);

***************************************************
/* The following code is found on page 81.  It   */
/* produced output 3.8.                          */
**************************************************

data; input patid state time; cards;
1 1 0
1 2 3.1
1 3 5.0
2 2 0
2 1 3.2
2 0 5.0
3 1 0
3 2 4.2
3 3 5.1
;
%mantbyar(dataset= _last_ , state=state , time=time, nstates=2 , format= default.,id=patid);

***************************************************
/* The following code is found on pages 88-89.  It*/
/* produced output 3.10.                           */
**************************************************

data group1; 
        input t s; 
        cards;
0               1.00
1               0.86    
2               0.68
3               0.60
4               0.51
5               0.39
6               0.25
7               0.24
8               0.23
;
data group2; 
        input t s; 
        cards;
0               1.00
1               0.95
2               0.85
3               0.75
4               0.65
7               0.25
8               0.24
;

%survpow(s1=group1 ,s2=group2       /* data sets that 
         define the alternative survival distributions for groups 1 and 2*/         
      ,actime=4     /* accrual time */
      ,futime=3     /* post-accrual followup time  */ 
      ,rate=30      /* accrual rate */
) ;


***************************************************
/* The following code is found on pages 89-90.  It*/
/* produced output 3.11.                          */
**************************************************

/* Create data set for weight functions.  n**.5 for the Tarone Ware statistic, n for the Gehan statistic, and 1 for the log rank statistic
*/

data data;
        input w $; 
        cards;
        (n**.5)
n
1
;

/* Create macro variables from weight functions */

data _null_;  
        set data;
        i=_n_;
        call symput('w'||left(i), w);
run;

/* Create data sets for alternative */
data group1; 
        input t s; cards;
0            1.00
1            0.86
2            0.68
3            0.60
4            0.51
5            0.39
6            0.25
7            0.24
8            0.23
;
data group2; 
        input t s; 
cards;
0            1.00
1            0.95
2            0.85
3            0.75
4            0.65
7            0.25
8            0.24
;


/* loop on accrual rates and weight functions */

%macro loop;
%do arate=40 %to 70 %by 5;
        %do jj=1 %to 3;
        %survpow(s1=group1, s2= group2,  actime=4,futime=3
                 ,rate=&arate, w=&&w&jj ) ;
        %end;
%end;
%mend;
%loop;
run;

***************************************************
/* The following code is found on pages 118.  It  */
/* produced output 4.1.                           */
***************************************************

data; set sas.melanoma;
if clarklevel = 'I' then clark = 1;
if clarklevel = 'II' then clark = 2;
if clarklevel = 'III' then clark = 3;
if clarklevel = 'IV' then clark = 4;
if clarklevel = 'V' then clark = 5;
months = (followup - biopsy)/30.4;
if ulceration = 'Yes' then ulcer = 1;
if ulceration = 'No' then ulcer = 0;
if status = 'Dead' then d = 1;
else d = 0;

proc phreg; model months*d(0) = clark;
proc phreg; model months*d(0) = ulcer;
proc phreg; model months*d(0) = thickness;
run;

***************************************************
/* The following code is found on pages 122.  It  */
/* produced output 4.3.                           */
***************************************************

data; set sas.melanoma;
months = (followup - biopsy)/30.4;
if ulceration = 'Yes' then ulcer = 1;
if ulceration = 'No' then ulcer = 0;
if status = 'Dead' then d = 1;
else d = 0;
thicknessxulcer = thickness*ulcer;
proc phreg; model months*d(0) =  ulcer thickness thicknessxulcer; 
run;




**************************************************
/*The following example code appears on page 127.*/
/*It produced output 4.5.                        */ 
**************************************************

proc phreg;
     model dfstime*dfscens(0) = loc1-loc3 sex clark 
          thickness ulcer/ selection = forward rl
          details;
 title1 'Proportional Hazards Regresion Analysis';
 title2 'Of Melanoma Data';
 run; 

**************************************************
/*The following is referred to on page 135.  It  */
/*was written by Leslie Kalish who has graciously*/
/*allowed me to use it in my book and include it */
/*in this site.                                  */ 
**************************************************


* tvcov.mac  Macro for implementing time varying covariates in Proc Phreg; 

/* 

Author: Leslie A. Kalish 
        New England Research Institutes 

Email:  LesK@neri.org 

Date:   24 MAY, 2000 

Note:   This macro has not been extensively tested, although I 
        believe it does work as advertised.  Please let me know if you 
        have problems with it. 

************************************************************************** 
INTRODUCTION 

Normally, programming statements in Proc Phreg are required to implement 
time-varying covariates.  The macro is meant to be placed after the Model 
statement, replacing the programming statements.  Each use of the macro 
creates one variable, which ordinarily is a covariate that also appears 
in the model statement.  The macro can be used more than once in the 
same Proc, to create several different covariates. 

**************************************************************************; 
USAGE 

%MACRO TVCOV(HX=,TIME=,OUTVAR=,XTIMES=,COVARS=,SINCE=,LAG=); 
  HX     = One of six options for summarizing covariate history. 
           1, most recent (default) 
           2, average 
           3, least squares slope 
           4, maximum value 
           5, minimum  value 
           6, range 
  TIME   = Time-to-event variable.  Must be the same as the outcome 
           variable on the left hand side of the model statement. 
  OUTVAR = Name of covariate created by the macro.  Ordinarily, this 
           variable is also on the right hand side of the model statement. 
  XTIMES = Variables holding covariate measurement times.  
           Must be in same units as TIME. 
  COVARS = Variables holding covariate measurement values 
  SINCE  = Most distant time to be considered (optional).  If omitted, 
           the macro assumes no restriction, i.e., that covariates measured 
           since time 0 are considered. 
  LAG    = Most recent time to be considered (optional).  If omitted, 
           the macro assumes no restriction, i.e., that covariates up 
           to the present are considered. 

======================================================================== 
EXAMPLE 

Suppose 
  DEATHT = time from study entry to death (months) 
  DEATH  = death censoring indicator (1=dead, 0=alive) 
  X1-X25 = covariate values measured at times T1-T25 
  T1-T25 = times (must be in same scale as DEATHT) that covariates 
           X1-X25 are measured. 

To fit a proportional hazards model with the most recently measured 
covariate as the only covariate, use the following syntax. 
  PROC PHREG; 
  MODEL DEATHT*DEATH(0)=RECENT; 
  %TVCOV(HX=1,TIME=DEATHT,OUTVAR=RECENT,XTIMES=T1-T25,COVARS=X1-X25) 
  RUN; 

To fit a proportional hazards model with the slope over the past 6 
months as the only covariate, use the following syntax. 
  PROC PHREG; 
  MODEL DEATHT*DEATH(0)=SLOPE; 
  %TVCOV(HX=3,TIME=DEATHT,OUTVAR=SLOPE ,XTIMES=T1-T25,COVARS=X1-X25,SINCE=6) 
  RUN; 

One can include both the most recent value and the slope over the past 
6 months in the same model, as follows: 
  PROC PHREG; 
  MODEL DEATHT*DEATH(0)=RECENT SLOPE; 
  %TVCOV(HX=1,TIME=DEATHT,OUTVAR=RECENT,XTIMES=T1-T25,COVARS=X1-X25) 
  %TVCOV(HX=3,TIME=DEATHT,OUTVAR=SLOPE ,XTIMES=T1-T25,COVARS=X1-X25,SINCE=6) 
  RUN; 

*/ 

* ========================================================================; 
* MACRO; 



%macro tvcov(hx=1,time=,outvar=,xtimes=,covars=,since=0,lag=0); 

%* Trick so that can run macro >1 time in same SAS session.; 
%global _zz; 
%if (%length(&_zz) = 0) %then %let _zz = 0; %else %let _zz = %eval(&_zz+1); 

%* Put measurement values and times in arrays; 
array _xx&_zz{*} &covars; 
array _tt&_zz{*} &xtimes; 

%* Initialize; 
&outvar=.; 
%if (&hx=2 | &hx=3 | &hx=6) %then %str(nsofar=0;); 
%if  &hx=2                  %then %str(&outvar=0;); 
%if  &hx=3                  %then %str(st=.; s_tt=.; sy=.; syt=.;); 
%if  &hx=6                  %then %str(mmin=.; mmax=.;); 

*% Start loop through repeated measurements of covariate; 
do j=1 to dim(_tt&_zz); 

   %* Cross-product (only needed for slope); 
   %if &hx = 3       %then %str( 
      if (_xx&_zz{j}>. and _tt&_zz{j}>.) then yt = _xx&_zz{j}*_tt&_zz{j}; 
      else yt=.; 
      ); 

   %* Check that time is in correct interval and covar value is nonmissing; 
   %if &since=0 %then 
   %str(if(           .<  _tt&_zz{j}<=&time-&lag & _xx&_zz{j}>.) then do;); 
   %if &since>0 %then 
   %str(if(&time-&since<  _tt&_zz{j}<=&time-&lag & _xx&_zz{j}>.) then do;); 

   %* Evaluate covariate history here; 
   %if &hx = 1 %then %str( 
      &outvar = _xx&_zz{j}; 
      ); 
   %if &hx = 2 %then %str( 
      nsofar=nsofar+1; 
      &outvar = (1/nsofar)*_xx&_zz{j}+(1-1/nsofar)*&outvar; 
      ); 
   %if &hx = 3 %then %str( 
      nsofar=nsofar+1; 
      st=sum(st,_tt&_zz{j}); 
      s_tt=sum(s_tt,_tt&_zz{j}*_tt&_zz{j}); 
      sy=sum(sy,_xx&_zz{j}); 
      syt=sum(syt,yt); 
      if (nsofar > 1) then &outvar=(syt-sy*st/nsofar) / (s_tt-st*st/nsofar); 
      ); 
   %if &hx = 4 %then %str( 
      &outvar=max(_xx&_zz{j},&outvar); 
      ); 
   %if &hx = 5 %then %str( 
      &outvar=min(_xx&_zz{j},&outvar); 
      ); 
   %if &hx = 6 %then %str( 
      nsofar=nsofar+1; 
      mmin=min(_xx&_zz{j},mmin); 
      mmax=max(_xx&_zz{j},mmax); 
      ); 

      end; 
   end; 

   %* Only calculate average if at least one data point; 
   %if &hx = 2 %then %str( if (nsofar = 0) then &outvar = .; ); 

   %* Only calculate range if at least two data points. ; 
   %if &hx = 6 %then %str( if (nsofar > 1) then &outvar = mmax-mmin; ); 

%mend tvcov; 
 

****************************************************
/* The following code appears on page 139.  It     */
/* produced output 4.7.                            */
****************************************************

data cov_vals;
    input thickness ulcer;
    cards;
4.0  1
 .3  0
4.0  0
;
proc phreg data=melanoma noprint;
   model months*d(0)= thickness ulcer;
   baseline  covariates=cov_vals  survival=survival
   stderr=se lower=lo_bound  upper=up_bound  out=estsurv / nomean;
proc print;
run;

*******************************************************
/* The following code appears on page 141 - 142.  It  */
/* produced figure 4.2.                               */
*******************************************************

proc format; 
        value c 1 = 'Low' 2 = 'Intermediate' 3 = 'High';
        proc sort data = estsurv; 
        by thickness ulcer;
data estsurv; 
        set estsurv; 
        by thickness ulcer months;
        retain c 0;
        if first.ulcer then c+1;
        format c c. ;
label c = 'Risk';

%phplot(
        yvar=survival       /*Variable name associated with                                     keyword survival of baseline statement */
       ,ylabel=Pct Survival /*Label for vertical axis.  Default is Pct Survival */
       ,byvar=c        /*Variable used to distinguish covariate vectors */
       ,xvar=months   /*The time variable used in the proc                                 statement. The default is time */    
       ,xlabel=Months  /*The label for the horizontal axis.  The default is Time */    
       ,combine = yes   /*yes to combine curves on one graph, no (the default) to produce separate graphs for each curve.  If curves are combined on one graph, confidence intervals can not be plotted. */ 
       ,title = Figure 4.2 /*Title to be printed. Default is                                    Proportional Hazards Survival Curve */
       ,lcl = lo_bound /*Variable name associated with lower                                keyword in baseline statement.  Default is lcl */
       ,ucl = up_bound /*Variable name associated with upper                                keyword in baseline statement. Default is ucl */
)

**************************************************
/*The following example code appears on page 149.*/
/*It produced output 4.10.                       */
**************************************************

proc mi data = dataset out = imputations noprint;
var x1 x2;
run;

proc phreg outest = out covout noprint; 
model time*cens(0) = x1 x2; 
by _imputation_;

proc mianalyze data = out;
var x1 x2; 
run;


 ******************************************************
/* The following data set is used for exercise 4.18.2 */
/*on page 150.                                        */ 
/******************************************************/



/* x1 and x2 are covariates, time is the time the patient was observed.  Cens = 1 if the patient died, 0 if censored.
*/
Data ex_4_18_2; 
Input id x1 x2 time cens;
Datalines;

                           1    12.3287      .         1.2156      1
                           2    10.9218    55.1459     7.9554      1
                           3    11.3121    57.0456     2.9250      1
                           4      .        58.5621     0.9621      1
                           5      .        52.3874     1.8050      1
                           6      .        50.4670     0.3094      1
                           7    12.2353    59.8188     2.1371      1
                           8    11.4210    58.1252     2.2197      1
                           9    11.5080    53.1021     6.9517      1
                          10    10.4844    57.5046    10.2008      1
                          11      .        54.9479     5.4848      1
                          12    11.8035      .         0.7029      1
                          13      .        56.9062     3.5465      1
                          14    11.2254    54.2180     3.2547      1
                          15    10.6788    59.8057    18.5000      0
                          16    12.6269    51.9732     0.1835      1
                          17    12.5793    51.1388     0.1338      1
                          18    11.2094    53.0963     2.1169      1
                          19    10.7267      .        18.1000      0
                          20    11.1453    56.0006     1.2938      1
                          21    10.7082    54.5896     7.5864      1
                          22      .          .         0.7544      1
                          23      .        57.2073     4.2078      1
                          24      .        56.0106     0.5551      1
                          25    10.3376      .         2.0302      1
                          26    11.2606    52.8284     5.5608      1
                          27    12.9358    58.7939     1.6514      1
                          28      .        50.2757     0.7036      1
                          29      .          .        17.1000      0
                          30      .        54.1234     4.3242      1
                          31    12.8282    53.9267     0.1889      1
                          32      .        54.2909     0.1652      1
                          33    11.0596    58.4193     2.9197      1
                          34    11.1375      .         0.0081      1
                          35    10.9177      .         3.0395      1
                          36    10.8543      .        16.4000      0
                          37    12.2401    55.6292     0.4115      1
                          38    11.1776    58.1161    14.3147      1
                          39    12.8818    50.6129     0.0999      1
                          40    10.3951    54.0858     0.2128      1
                          41    12.8831    56.1193     0.2371      1
                          42    11.7779      .         0.1301      1
                          43    12.3936    54.8616     0.0916      1
                          44    12.6147      .         2.7396      1
                          45    10.5717    52.4771     0.2278      1
                          46    10.6492    54.1929     9.3861      1
                          47    11.9100    51.1555     0.0598      1
                          48    10.2467    57.7899    15.1312      1
                          49    10.3359    55.9767     2.2812      1
                          50    10.9714      .         0.0133      1
                                   

                           51    11.4703    58.6877     2.3821      1
                           52      .        55.9946     8.4219      1
                           53    10.2551    55.4293     5.0773      1
                           54    10.0892    57.6119     1.8256      1
                           55      .        59.0977     1.6652      1
                           56    11.6243    52.7312     2.3398      1
                           57    10.7684    51.8873     8.7690      1
                           58    10.1591    50.2268     1.7924      1
                           59    10.0154      .         2.2419      1
                           60    12.1567    54.5669     6.9494      1
                           61    12.7212      .         1.9483      1
                           62    12.3659    56.3426     0.5164      1
                           63    11.3154    51.8964     1.0055      1
                           64      .        55.3102     0.3519      1
                           65    12.4114    58.4728     0.2433      1
                           66    11.2461    50.9602     0.1532      1
                           67    11.3202    58.1167     5.8493      1
                           68    12.0766    58.9753     1.6886      1
                           69    12.3359      .         3.7602      1
                           70    12.4174    52.9789     0.1029      1
                           71      .          .         5.5158      1
                           72    11.0216      .         1.4579      1
                           73    12.1850      .         8.0417      1
                           74      .        53.0516    12.0522      1
                           75    12.4210    54.6284     1.3338      1
                           76    12.5339    51.4161     0.9457      1
                           77      .          .         1.9716      1
                           78    10.6903    50.0855     0.5586      1
                           79      .        54.5308     0.0488      1
                           80    12.9477    54.1178     0.9272      1
                           81    10.5136    55.3421     6.9854      1
                           82    10.5545    59.2927     6.5906      1
                           83    11.7403    57.6955     0.5613      1
                           84    10.2464      .        11.6000      0
                           85    12.9755      .         0.1805      1
                           86    11.3005      .         0.7308      1
                           87    11.8805    56.8714     0.6732      1
                           88      .        51.0788     0.2373      1
                           89    11.8867    50.1781     0.0884      1
                           90    11.7378    56.4153     6.0328      1
                           91    10.3159    57.5350    10.9000      0
                           92    11.6738      .         1.8417      1
                           93      .        59.4420    10.7000      0
                           94    10.6474    59.4237    10.6000      0
                           95    10.9086    50.6709     0.8013      1
                           96      .        54.7673    10.4000      0
                           97    12.7734      .         0.0002      1
                           98    10.5732    56.3307     4.8323      1
                           99    10.5891    56.2606     7.8506      1
                          100      .        54.9770     6.2871      1
;

**************************************************
/*The following example code appears on page 161.*/
/*It produced output 5.2 and figure 5.1          */
**************************************************

/* Create artificial patient with time missing */
data add; 
   c = 1;
   clark = 2 ;
   breslow = .4;
   run;
/* Add artificial patient to data set */
data mel2; 
   set melanoma add; 
proc lifereg data = mel2; 
 
   model dfstime*dfscens(0) = clark breslow;
   output out = weibull cdf = cdf predicted = months
   quantiles = 0.02 to 0.98 by .02
   control = c;
data dfs; 
   set weibull; 
   dfs_est = (1 - _prob_)*100;
proc print; 
   var  months dfs_est ; 
   title 'Weibull Model with Clark = 2.0, Breslow = 0.4'; 
data; 
   set dfs; 
   if _n_ = 1 then do; 
      dfs_est = 100 ; 
      months = 0; 
      output; 
      end; 
   output; 
title1 h=1.5 f=swissb 'Figure 5.1'; 
title2 h=1.5 f=swissb 'Weibull Model for Melanoma DFS'; 
title3 h=1.5 f=swissb 'Clark = 2.0, Breslow = 0.4'; 
axis1 width=2 minor=none label=(h=1.5 f=swissb a=90 j=center 
      'Pct DFS') value = (h = 1.2 f = swissb);
axis2 width=2 label=(h=1.5 f=swissb 'Months') value=(h=1.2 f=swissb);
symbol1 v=none l=1 i=spline w = 2 c = black; 
proc gplot;  
   plot dfs_est*months / haxis = axis2 vaxis = axis1; 
run;  

**************************************************
/*The following example code appears on page 167.*/
/*It produced output 5.3                         */
**************************************************

%paramest(t1=dfstime
         ,t2=dfscens 
/* Names of time variables. Defaults are t1 and t2. */
         ,covs=clark breslow 
/* Names of the covariates */
         ,method=2  
/* Method of specifying time.  Default is 2. */
 
         ,hazard=  theta[1]*theta[2]*theta[3]**x[1]*theta[4]**x[2]*t**(theta[2] - 1)  /* Formula for the hazard function */
         ,survival= 
exp(-theta[1]*theta[3]**x[1]*theta[4]**x[2]*t**theta[2])
/* Formula for the survival function */
         ,init={1 1 1 1}     
/* Initial values for the parameters */
               ,lower = {.0001 .0001 .0001 .0001}   
 /* Lower bounds for parameters.  Default is no lower bounds. */ 
               ,upper = {10 10 10 10} 
/* Upper bounds for parameters. Default is no upper bounds. */
)


**************************************************
/*The following example code appears on page 168.*/
/*It produced output 5.4                         */
**************************************************

data pred; 
   do t = 10 to 500 by 10;
      clark = 2.0;
      breslow = 0.4;
      output;
      end;
%paramest(
          dataset = melanoma
         ,t1 = dfstime , t2= dfscens
/* Name of time variables. Defaults are is t1 and t2.  */
         ,covs = clark breslow
/* Names of covariates */
         ,hazard =  theta[1]*theta[2]*theta[3]**x[1]*theta[4]**x[2]*t**(theta[2] - 1)  
/* Formula for the hazard function */
         ,survival = 
exp(-theta[1]*theta[3]**x[1]*theta[4]**x[2]*t**theta[2])
/* Formula for the survival function */
         ,init = {1 1 1 1}     
/* Initial values for the parameters */
         ,lower = {.0001 .0001 .0001 .0001}     
/* Lower bounds for parameters.  Default is no lower bounds. */ 
         ,upper = {10 10 10 10}         
/* Upper bounds for parameters. Default is no upper bounds. */
         ,pred = pred
);
run;

**************************************************
/*The following example code appears on page 170.*/
/*It produced output 5.5                         */
**************************************************

data pred;
   do t = 0 to 12;
   output;
   end;
 
title2 ?Exponential with Cure Model?;

%paramest(dataset =leuk
,hazard = (1 - theta[1])*theta[2]*exp(-theta[2]*t)/
          (theta[1] + (1 - theta[1])*exp(-theta[2]*t))
,t1 = time 
,t2 = d
,method = 2
,survival = theta[1] + (1 - theta[1])*exp(-theta[2]*t) 
,init={.6 .7}
,pred = pred
,lower = {.0001 .0001}
,upper = {.9999 .}
)


%paramest(
dataset =leuk
,hazard = theta[1]*exp(theta[2]*t) 
,t1 = time
,t2 = d
,method = 2
,survival=exp(-(theta[1]/theta[2])*(exp(theta[2]*t)-1)) 
,init={.3 -.6}
,pred = pred
,lower = {.0001 .}
,upper = {. .}   
)

**************************************************
/*The following example code appears on page 173.*/
/*It produced output 5.6                         */
**************************************************

data melanaoma; 
   set melanoma;
/* Define group = 1 if clark = 4, 2 otherwise */        
   group = 2 -(clark = 4);
proc sort; 
   by group;
proc lifereg; 
   model dfstime*dfscens(0) = ; 
   by group;
   title 'Individual Groups';
run;
proc lifereg; 
   model dfstime*dfscens(0) =;
   title 'Combined Sample';
run;

********************************************************
/*The following example code appears on page 177 - 178.*/
/*It produced output 5.7                               */
********************************************************

%paramest(dataset=leuk
         ,hazard=
exp(theta[3]+theta[4]*x[1])*(1-(1+exp(theta[1]+theta[2]*x[1]))**
(-1))*exp(-exp(theta[3]+theta[4]*x[1])*t)/ ((1+exp(theta[1]+theta[2]*x[1]))**(-1)
+(1-(1+exp(theta[1]+theta[2]*x[1]))**(-1))*
exp(-exp(theta[3]+theta[4]*x[1])*t))
         ,t1=years
         ,t2=cens 
         ,covs=group
         ,method=2
         ,survival=
(1+exp(theta[1]+theta[2]*x[1]))**(-1)
 +(1-(1+exp(theta[1]+theta[2]*x[1]))**(-1))*
exp(-exp(theta[3]+theta[4]*x[1])*t)
         ,init={0 0 .3 0}
)


********************************************************
/*The following example code appears on page 209.      */
********************************************************

data mydata; 
input patid @8 date_of_birth mmddyy8. @18 date_of_dx mmddyy8. cancertype $;
/*  Define age at diagnosis.  */ 
    age_at_dx = (date_of_dx - date_of_birth)/365;
datalines;
21375  03/05/56  06/29/98  HD
36534  09/16/45  12/04/99  NHL
41224  11/17/62     .      MEL
;

********************************************************
/*The following example code appears on page 212.      */
/*It produced the output on page 213.                  */
********************************************************

proc iml;
 /* Define the Gumbel pdf as the integrand */
  start f(x);
         v = exp(x-exp(x));
      return(v);
  finish;

  /* Define limits of integration,
     Call QUAD, and print results */
  a   = { .M 1 };  /* for -infinity to 1 */
  call quad(z,"f",a);
  print z[format = 8.6];
  run;

********************************************************
/*The following example code appears on page 214.      */
/*It produced the output on page 215.                  */
********************************************************

/* Invoke IML */
proc iml; 
/* establish constraints, lambda > 0 and gamma > 0 */ 
con = {.001 .001, . .};
/*  convert data set to matrix xmatrix */
use times;
read all var {time} into xmatrix;
/*  define loglikelihood function */
start loglik(theta)  global (xmatrix);
lambda = theta[1];
gamma = theta[2];
sum1 = 0;
sum2 = 0;
LL = 100*(log(lambda) + log(gamma));
do i = 1 to 100;
x = xmatrix[i,1];
sum1 = sum1 + log(x);
sum2 = sum2 + x**gamma;
end;
LL = LL + (gamma - 1)*sum1 - lambda*sum2;
return(LL);
finish loglik;
/*  options: first component specifies maximization second 
    controls amount of printout */  
optn = {1 2};
a = {0 0};
/*  find initial feasible values, theta0 */
call nlpfea(theta0, a, con);
/* invoke optimization program to find MLE, thetares */  
call nlpnra(rc, thetares,"loglik",theta0 ,optn, con ,,,,,);
/*  find Hessian h */
call nlpfdd(f, g, h, "loglik", thetares);
/* find covariance matrix of parameter estimates and print it */                      
cov = -inv(h);
print cov;
run;


***********************************************************
/*The following example code appears on page 216 and 217. */
***********************************************************

%macro mle(dataset = _last_, n =  , varname = , lower = , upper = ,  logpdf =   );
proc iml; 
/*  convert data set to matrix xmatrix */
use &dataset;
read all var {&varname} into xmatrix;
/*  define loglikelihood function */
start loglik(theta)  global (xmatrix);
LL = 0;
do i = 1 to &n;
x = xmatrix[i,1];
LL = LL + &logpdf;
end;
return(LL);
finish loglik;
/*  options: first component specifies maximization
    second argument controls amount of printing */ 
optn = {1 2};
con = &lower//&upper;
k = ncol(con);
a = j(1,k,0);
/*  find intitial feasible values, theta0 */
call nlpfea(theta0, a, con);
/* invoke optimization program to find MLE, thetares */
call nlpnra(rc, thetares,"loglik",theta0 ,optn, con ,,,,,);
/*  find Hessian, h */
call nlpfdd(f, g, h, "loglik", thetares);
/* find covariance matrix of parameter estimates and print it */
cov = -inv(h);
print  cov;
run;
%mend;

%mle(dataset = times,varname = time, n = 100, 
lower = {.001 .001}, upper = {  .  .}, 
logpdf = log(theta[1]) + log(theta[2]) + (theta[2] - 1)*log(x) - theta[1]*x**theta[2]);





*************************************************************************
*************************************************************************

MACRO CODE USED IN THIS BOOK

The following macros are presented in this file:

CHECKDIST
KMTABLE
KMPLAN
KMPLOT
LINRANK
MANTBYAR
PARAMEST
PHPLOT
PHPOW
SURVPOW
CONDPOW
RAND_GEN
RAND_PERM
TEST
PARAMEST



**************************************************
/*The following macro appears on page 186.       */
**************************************************

                                     
The CHECKDIST Macro

%macro chekdist(data = _last_ , time = , cens = , censvals = 0 ,
                model = , pi = ) ;
%if "&model" = "exp" %then %do;
     proc lifetest data = &data noprint plots = (ls)  graphics;
          time &time*&cens(&censvals);
     %end;
%if "&model" = "weibull" %then %do;
     proc lifetest data = &data noprint plots = (lls) graphics;
          time &time*&cens(&censvals);
     %end;
%if "&model" ne "weibull" and "&model" ne "exp" %then %do;
     proc lifetest data = &data noprint outs = out;
          time &time*&cens(&censvals);
          axis1 label = (a = 90);
     %end;
%if "&model" = "lognorm" %then %do;
     data; 
          set out;
          x = log(&time);
          y = -probit(survival);
          label x = 'log(t)';
          label y = '-probit(survival)';
     proc gplot;
          plot y*x /vaxis = axis1;
     %end;
%if "&model" = "expcure" %then %do;
     data; 
          set out;
          do pi = &pi ;
               y = log((survival - pi)/(1 - pi));
               output;
          end;
     label y = 'log[(survival-pi)/(1-pi)]';
     %end;
%if "&model" = "gomp" %then %do;
     data; 
          set out;
          do pi = &pi;
               y=log(1-log(survival)/log(pi));
               output;
               end;
          label y = 'log[1-log(survival)/log(pi)]';
          %end;
%if "&model" = "gomp" or "&model" = "expcure" %then %do;
     proc gplot;
          plot y*t = pi /vaxis = axis1;
     %end;
%mend;


******************************************************
/*The following macro appears on page 48.            */
******************************************************

  The KMTABLE Macro

/* Note:  Although the book says that you can use more than one by
variable, that is not the case.  Only one by variable can be specified.
As a "workaround", you can create one by variable from several by 
contatenation. For example if you want tables by byvar1 and byvar2,
define byvar = byvar1||byvar2.  */
%macro kmtable(dataset=_last_     /* dataset used by macro */
               ,pct=95            /* for conf. int. */ 
               ,time=             /* time variable  */
               ,cens=             /* variable that indicates   
                                                censored or complete time */
               ,censval=  0        /* value(s) that indicate  
                                                 censored time */ 
               ,method=           /* 1 for conf. int. method used 
                                               in Proc Lifetest, 2 for other*/                                        
               ,variance=         /* G or g for Greenwoods                  
                                                 formula, P or p for Petos */                                      
               ,byvar=none        /* Optional by variable(s) */     
               ,print=yes         /* no to suppress printing */
);
%global byvari perc ttime;
%let byvari=&byvar;
%let perc=&pct;
%let ttime=&time;
data &dataset; 
set &dataset; 
none=1;
run;
proc sort data=&dataset; 
by &byvar;
run;
/*  Create dataset, x, with survival estimates */
proc lifetest noprint outs=x data=&dataset;
by &byvar;
time &time*&cens(&censval); 
run;
data x; set x; retain temp;
if survival ne . then temp = survival;
if survival = . then survival = temp;
proc sort out=y; 
by &byvar &time;
run;
/* Add number at risk, r, to dataset */ 
data y; 
set y; 
by &byvar;
if first.&byvar then r=0; 
else r+1;
keep r &byvar;

run;
/* Merge number at risk with survival estimates */
proc sort; 
by &byvar descending r; 
run;
data table; 
merge x y;
run;
proc sort; 
by &byvar descending r;
run;
/* Create Life Table */
data table; 
set table;      
by &byvar;
             /* Allow for G or P, check for valid values, 
                if mis-specified, set values and put     
                warning in log.                          */
if _n_ = 1 then do;
        %if &variance = G %then %let variance=g;
        %if &variance = P %then %let variance=p; 
        if "&variance" not in ('g', 'p') then do;
                put;
                put '*************************************';
                put '*Note: Invalid value of variance used*'; 
                put '*for choice of variance formula.  g *';
                put '*for Greenwood will be used.        *';
                put '*************************************';
                put; 
        end;
         if &method not in (1, 2) then do;
                put;
                put '*************************************';
                put '*Note:  Invalid value of method used*'; 
                put '*for choice of CI. Method 1 (as in  *';
                put '*Proc Lifetest) will be used.       *';
                put '*************************************';
                put; 
        end;
end;
                  /* defaults for variance and conf int method */ %if &variance ne g and &variance ne p %then %let variance = g; %if &method ne 1 and &method ne 2 %then %let method = 1; 
                 /* normal critical value for conf. int. */ z=-probit((100-&pct)/200); d=1-_censor_;
                 /* Peto s.e. */ 
sp=survival*sqrt((1-survival)/r);
                 /* Greenwood s.e. */ 
if first.&byvar then do;
        sum=0;
        stderr=0;
end;
else do;
*******************************************************************************************************;
        sum+d/(r*(r+1));     Change this to:      sum+d/(r*(r-d));                                           ; 
*******************************************************************************************************;
        sg=survival*sqrt(sum); 
end;
if "&variance"='g' 
then stderr=sg;
if "&variance"='p' 
then stderr=sp;
  /*  Confidence interval limits */
if &method=1 then do;
        lcl=survival-z*stderr; 
        lcl=max(0,lcl);
        ucl=survival+z*stderr;
        ucl=min(1.00, ucl);
end;
if &method=2 then do;
        s=-stderr/log(survival)/survival;
        lcl=survival**(exp(z*s));
        ucl=survival**(exp(-z*s)); 
end;
if first.&byvar then do;
        stderr=0;
        lcl=1;
        ucl=1;
end;
  /*  Create column label for table */
%if &variance=g %then
label stderr = 'Greenwood*stderr';; 
%if &variance = p %then
label stderr = 'Peto*stderr';;
%if &method = 1 %then %do;
        label lcl= "Method 1*&pct pct lcl";;
        label ucl="Method 1*&pct pct ucl";; 
%end;
%if &method = 2 %then %do;
        label lcl = "Method 2*&pct pct lcl";;
        label ucl = "Method 2*&pct pct ucl";;
%end; 
run;
proc sort; 
  by &byvar; 

run;
/* Print life table  */
%if &print = yes %then %do;
        proc print l split='*';
var  &time d survival stderr lcl ucl;
  %if &byvar ne none %then by &byvar;;
%end; 
run;
%mend kmtable;







******************************************************
/*The following macro code appears on page 51.       */
******************************************************

  The KMPLOT Macro

%macro kmplot(mark=no                        /*   yes to mark times    
                                               on curve */
              ,ci=no                         /*   yes for conf.        
                                               intervals */
              ,ylabel= Pct Survival          /*   label for y axis */
              ,xlabel=time                   /*   label for x axis */
              ,combine=no                    /*   yes to put multiple  
                                             plots on same        
                                             graph */
              ,cutoff=none                   /*   clause to restrict   
                                                  curve(s), usually    
                                             of form time<value   
                                             or r<value (for n    
                                             at risk) */
              ,title= Kaplan-Meier Survival Curve
);
/* no conf. interval if multiple plots on graph */
%if &combine=yes %then %let ci=no;;
/* Define symbol statements */
%if &combine&mark=yesno %then %do;
   symbol1 l=1 f= , v=none  i=stepjl w=5;
        symbol2 l=3 f= ,v=none i=stepjl w=5;
        symbol3 l=5 f= ,v=none i=stepjl w=5;
        symbol4 l=33 f= ,v=none i=stepjl w=5;
          %end;
%if &combine&mark=yesyes %then %do;
        symbol1 l=1 f=swiss v="|" i=stepjl w=5;
        symbol2 l=3 f=swiss v="|" i=stepjl w=5;
        symbol3 l=5 f=swiss v="|" i=stepjl w=5;
        symbol4 l=33 f=swiss v="|" i=stepjl w=5;
    %end;

%if &combine&mark=noyes %then %do;
        symbol1 l=1 f=swiss v="|" i=stepjl w=5;
        symbol2 l=3 f= ,v=none i=stepjl w=5;
        symbol3 l=3 f= ,v=none i=stepjl w=5;
%end;
%if &combine&mark=nono %then %do;
        symbol1 l=1 f= , v=none i=stepjl w=5;
        symbol2 l=3 f= , v=none i=stepjl w=5;
        symbol3 l=3 f= , v=none i=stepjl w=5; 
   %end;
/* White out by if no by variables */
%if &byvari=none %then goptions cby=white;;
/* Create dataset for plot(s) */
data; 
     set table; 
     survival=survival*100;
     lcl=100*lcl;
     ucl=100*ucl;
     y=survival; 
     curve=1; 
     output;
     y=ucl; 
     curve=2;
     %if &ci=yes %then output;;
     y=lcl; 
     curve=3;
     %if &ci=yes %then output;;
run;
proc sort; 
  by &byvari curve &ttime;
run;
proc format;
  value curve 1='KM curve' 2='UCL' 3='LCL';
run;
/* Define axes and legends */
axis1 width=5 minor=none 
      label=(h=3 f=swissb a=90 j=center 
      "&ylabel")
      value = ( h=1.5 f=swissb) order=(0 to 100 by 10);
axis2 width=5 
      label=(h=3 f=swissb  "&xlabel") 
      value=(h=1.5 f=swissb);
                              %if &combine=no %then 
     legend1 label= (f=swissb h=1.5  'Curve')
     value=(f=swissb h=1.5 j=l 'KM Curve' "&perc pct UCL" "&perc pct  LCL");; legend2 label=(f=swissb h=1.5) 
        value=(f=swissb h=1.5 j=l);
%if &combine=no %then %do;

/* gplot for separate curves */
        proc gplot;
          %if &cutoff ne none %then where &cutoff;;
        plot y*&ttime= curve /
        legend=legend1
        vaxis=axis1 haxis=axis2
        %if &ci=no %then nolegend;; 
        ;
        by &byvari;
        format curve curve.;
%end;
run;
 %if &combine=yes %then %do;
/* gplot for combined curves */
        proc gplot;
          %if &cutoff ne none %then where &cutoff;;
          plot y*&ttime=&byvari/ legend=legend2
       vaxis=axis1 haxis=axis2;  
          %end;
title &title;
run;
%mend kmplot;



******************************************************
/*The following macro code appears on page 52.       */ 
/*It is an improvement of a macro by the sam name    */
/*that appeared in the first edition of this book.   */
******************************************************

 The KMPLAN Macro

%macro kmplan(s = , h = ,N = , A = , tau = , t = );
proc iml;
  start f1(u);
          v = &h/&s;
      return(v);
  finish;

  start f2(u);
          v = &h/(&s*(&A + &tau - u));
          return(v);
  finish;

  start surv(u);
      v = &s;
      return(v);
  finish;

  if &t < &tau then a = {0 &t}; 
  else a= {0 &tau};
  b = {&tau &t}; 
  call quad(z1, "f1", a);
  call quad(z2, "f2", b);
  if &t > &tau then varg = (surv(&t))**2*(z1/&n + &a/&n*z2);
  else varg = (surv(&t))**2*z1/&n;
  stderrg = sqrt(varg);
  print 'Greenwood Formula';
  print  "time = &t  " varg[format=8.6] stderrg[format=8.6];
  varp = surv(&t)*(1 - surv(&t))/&n;
  if &t > &tau then varp = varp*&a/(&a + &tau - &t);
  stderrp = sqrt(varp);
  print 'Peto Formula';
  print "time = &t  " varp[format=8.6] stderrp[format=8.6];
  run;
%mend;




******************************************************
/*The following macro code appears on page 95.       */
******************************************************
          
 The LINRANK Macro
%macro linrank(dataset=_last_, time=time, cens=  ,
               censval=   ,groupvar= ,method=logrank,rho=1,
               stratvar= _none_, stratmis=no,trend=order );

/*       Delete invalid observations and 
         print list of observations deleted. */  

data xx deleted; 
     set &dataset;
     obsnumb = _n_;
     if &time <0  or &groupvar=''   or &cens = . then delete=1;
     if "&stratvar" ne "_none_" and  "&stratmis" = "no"
     and  &stratvar = '' then delete =1;
     _none_ = 1;
     if delete=1 then output deleted;
     else output xx;
proc print data=deleted; 
     title 'Deleted Observations';
     var  obsnumb &time &cens &groupvar
     %if "&stratvar" ne "_none_" %then &stratvar;;

/*       Determine number of groups, their names, 
         and the weights to use for trend test.   */ 

proc sort data = xx; 
     by &groupvar;
data y; 
     set xx; 
     by &groupvar;
     if first.&groupvar then do;
        n+1;
        call symput('ngrps',left(n));
     end;
run;
data grpnames; 
     set y; 
     by &groupvar;
     keep &groupvar n;
     if first.&groupvar;
data groupwts; 
     set grpnames;
     keep
     %if "&trend" = "order" %then n;
     %else &groupvar;;

/* Find number of strata */

proc sort data=xx; 
     by &stratvar;
data xx; 
     set xx;
     by &stratvar;
     retain stratn 0 ;
     if first.&stratvar then do;
          stratn+1;
          call symput('stratcnt', left(stratn));
     end;
run;

/*     Start loop on strata        */

%do ii = 1 %to &stratcnt;

/*    Form stratum subset, find number of 
      groups, number in each group, and      
      group weights in stratum               */

     data x; 
          set xx; 
          if stratn = &ii;
          call symput('stratval', &stratvar);
     run;
     proc freq; 
          table &groupvar/ noprint out= counts;
     proc sort data=x; 
          by &groupvar;
     data x; 
          set x;
          by &groupvar;
          retain grpn 0 ;
          if first.&groupvar then do;
                         grpn+1;
                call symput('grpcount', left(grpn));
                call symput('grpname'||left(grpn), &groupvar);
               end;
     run;
     data grpnames; 
          set x; 
          by &groupvar;
          keep &groupvar grpn;
          if first.&groupvar;
     data grpwts; 
          set grpnames;
          keep
          %if "&trend" = "order" %then grpn;
          %else &groupvar;;

/*    Create table         */

     proc sort data=x; 
          by descending &time;
     data y; 
          set x; 
          keep r1-r&grpcount rtot;
          array r{*} r1-r&grpcount;
          retain r1-r&grpcount rtot 0;
          %let countsq = %eval(&grpcount*&grpcount);
          r{grpn}+1;
          rtot+1;
     data x; 
          merge x y;
     proc sort; 
          by &time;
     data x; 
          set x; 
          by &time;
          array d{*} d1-d&grpcount;
          retain d1-d&grpcount dtot;
          if first.&time then do i=1 to &grpcount;
               d{i}=0;
               dtot=0;
               end;
          if &cens not in (&censval) then do;
               d{grpn}+1;
               dtot+1;
               end;
          if last.&time then output;
     data x; 
          set x; 
          if dtot>0; 
          retain km km_  1; 
          all=1;
          array e{*} e1-e&grpcount;
          array diff{*} diff1-diff&grpcount;
          array r{*} r1-r&grpcount;
          array d{*} d1-d&grpcount;
          array wdiff{*} wdiff1-wdiff&grpcount;
          array s{*} sum1-sum&grpcount;
          array cov{&grpcount, &grpcount} cov1-cov&countsq;
          array sumcov{&grpcount,&grpcount}       sumcov1-sumcov&countsq;
          if _n_ = 1 then km_ = 1;
          else km_ = km;
          km=km*(rtot-dtot)/rtot;
          do j=1 to &grpcount;
               e{j} = dtot*r{j}/rtot;
               diff{j} = d{j} - e{j};
               if "&method"="logrank" then w=1;
               if "&method"="gehan" then w=rtot;
               if "&method"="tarone" then w=sqrt(rtot);
               if "&method"="harrington" then w=km_**&rho;
               wdiff{j} = w*diff{j};
               s{j} + wdiff{j};
          do l=1 to &grpcount;
                    if dtot=1 then c=1; else                     
                       c=(rtot-dtot)/(rtot-1);
                    if j=l then                                                
                       cov{j,l}=w**2*(dtot*(rtot*r{j}-r{j}**2)*c)/rtot**2;
                    else                     
                       cov{j,l}=-w**2*(r{j}*r{l}*dtot*c)/rtot**2;
                    sumcov{j,l}+cov{j,l};
                    end;
           end;

   /*       Sum over times and reformat for printout        */

     proc means sum noprint; 
          var d1-d&grpcount e1-e&grpcount diff1-diff&grpcount
          wdiff1-wdiff&grpcount;
          output out = out sum=;
     data out; 
     set out;
          array e{*} e1-e&grpcount;
          array d{*} d1-d&grpcount;
          array difff{*} diff1-diff&grpcount;
          array wdif{*} wdiff1-wdiff&grpcount;
          do j = 1 to &grpcount;
               group = j;
               events = d{j};
               expected = e{j};
               diff = difff{j};
               wdiff = wdif{j};
               output;
               end;
          label wdiff = 'Weighted Diff';
          label events = 'Events';
          label expected = 'Expected';
          label diff = 'Diff';
     data xxx; 
          merge out grpnames counts;
     proc print l noobs; 
          var &groupvar count percent events expected diff wdiff;
          sum  count events;
          title1 'Summary of Events vs Expected';
          %if "&stratvar" ne "_none_" %then title2 "&stratvar = &stratval";;
          title3 "Method = &method";
     run;

/*      Accumulate vectors and matrices for pooled stats  */

     %if "&ii" = "1" %then %do;
          data pooled; 
               set xxx; 
          %end;
     %else %do; 
          data pooled; 
          set pooled xxx; 
          %end;
     data x; 
          set x;
     proc sort; 
          by all;
     data s (keep = sum1-sum&grpcount) cov (keep =               
                 col1-col&grpcount);
          set x; 
          by all; 
          if last.all;
          array s{*} sum1-sum&grpcount;
          array sumcov{&grpcount, &grpcount}                   
                      sumcov1-sumcov&countsq;
          array col{*} col1-col&grpcount;
          output s;
          do j=1 to &grpcount;
               do l=1 to &grpcount;
                    col{l}=sumcov{j,l};
                    end;
          output cov;
          end;
     data yy; 
          merge grpnames cov;

                              /* Give columns of covariance matrix group names */
     %do j = 1 %to &grpcount;
          label col&j = "&&grpname&j";
          %end;
     proc print l noobs; 
          var &groupvar col1-col&grpcount;
          title1 'Covariance Matrix';
          %if "&stratvar" ne "_none_" %then title2 "&stratvar=
               &stratval";;
          title3 "Method = &method";
     %if "&ii" = "1" %then %do; 
          data poolcov; 
               set yy; 
          %end ;
     %else %do; 
          data poolcov; 
          set poolcov yy; 
          %end;

/*     Use proc iml to do matrix calculations 
       for test statistic.                       */  

     proc iml;
          reset noprint;
          use s;
          read all into x;
          use cov;
          read all into v;
          use grpwts;
          read all var _all_ into grpwts;

/*      Omit first row and column      */

          xx=x[1:1,2:&grpcount];
          vv=v[2:&grpcount,2:&grpcount];
          stat= xx*inv(vv)*xx`;
          df = &grpcount - 1;
          p_val = 1-probchi(stat,df);
          results = stat||df||p_val;
          cols={ChiSquare df p_value};
          title1 ' ';
          %if "&stratvar" ne "_none_" %then title1 "&stratvar=
               &stratval";;
          title2 "Method = &method";
          print results[colname=cols];

/*     Test for trend.        */

          if %eval(&grpcount) > 2 then do;
               wts=grpwts[2:&grpcount, 1:1];
               xxx=xx*wts;
               vvv=wts`*vv*wts;
               stat = xxx*xxx/vvv;
               df=1;
               p_val= 1-probchi(stat,df);
               trend = stat||df||p_val;
               print trend[colname=cols];
               end;
          quit;
     %end; 

 /* end of loop on strata */

/*     Pooled results if stratified analyis   */

%if "&stratvar" ne "_none_" %then %do;
     proc freq data=xx;
          table &groupvar / noprint out=counts;
     proc sort data=pooled; 
          by &groupvar;
     proc means noprint sum data=pooled; 
          var count events expected diff wdiff;
          by group; 
          output out=pooled1 sum=;
     data; 
          merge pooled1 grpnames counts;
     proc print l noobs; 
            var &groupvar count percent events expected diff wdiff;
          sum count events;
          title1 'Summary of Events vs Expected';
          title2 "Pooled Over All Values of &stratvar";
     proc sort data=poolcov; 
          by &groupvar;
     proc means noprint sum data=poolcov;
          var col1-col&ngrps;
          by &groupvar; 
          output out=pooled2 sum=;
     proc print l noobs; 
          var &groupvar col1-col&ngrps;
          title1 'Covariance Matrix';
          title2 "Pooled Over All Values of &stratvar";
     data pooled2; 
          set pooled2; 
          keep col1-col&ngrps;
     run;
     proc iml;
          reset noprint;
          use pooled1;
          read all var {wdiff} into x;
          use pooled2;
          read all into v;
          xx=x[2:&ngrps,1:1];
          vv=v[2:&ngrps,2:&ngrps];
          stat = xx`*inv(vv)*xx;
          df = &ngrps - 1;
          p_val=1-probchi(stat,df);
          cols={ChiSquare df p_value};
          title1 'Pooled Results';
          title2 "Method = &method";
          results = stat||df|| p_val;
          print results[colname=cols];

/*     Test for trend.         */

          if %eval(&ngrps) > 2 then do;
               use groupwts;
               read all var _all_ into weights;
               wts = weights[2:&ngrps, 1:1];
               xtrend = xx`*wts;
               vtrend = wts`*vv*wts;
               stattrnd = xtrend**2/vtrend;
               p_valtrd = 1-probchi(stattrnd,1);
               df=1;
               trend=stattrnd||df||p_valtrd;
               print trend[colname=cols];
               run;
               end;
     %end;
%mend;

















******************************************************
/*The following macro code appears on page 105.      */
******************************************************


  The MANTBYAR Macro
         
%macro mantbyar(dataset= last_ , state= , time=time ,nstates=2 ,                 
                format= default.,id=id);

/* Create Format for States */

%let form=%str(proc format; value default 1='state1'); 
%do i=2 %to &nstates; 
     %let form=&form &i= %str(%')STATE&i %str(%'); 
     %end; 
&form; 

/* Create Table */

proc sort data= &dataset; 
     by &id &time; 
data d; 
     set &dataset end=last; 
     by &id; 
     retain id 0; 
     if first.&id then id+1; 
     if last then call symput('nobs',left(id)); 
proc sort; 
     by &time descending &state; 
%let nstat2=%eval(&nstates*&nstates); 
%let nm1=%eval(&nstates-1); 
data dd; 
     set d; 
     by &time descending &state; 
     retain s1-s&nobs r1-r&nstates o1-o&nstates; 
     retain e1-e&nstates 0; 
     retain v1-v&nstat2 0; 
     retain d1-d&nstates 0; 
     array s(*) s1-s&nobs; 
     array r(*) r1-r&nstates; 
     array e(*) e1-e&nstates;
     array o(*) o1-o&nstates; 
     array ot(*) ot1-ot&nstates; 
     array v(&nstates,&nstates) v1-v&nstat2; 
     array d(*) d1-d&nstates; 
     if &time=0 then do; 
          s(id)=&state; r(&state)+1; 
          nt+1; 
          end; 
     if &time>0 and &state<&nstates+1 then do; 
          prior=s(id); 
          r(prior)+(-1); 
          if &state>0 then r(&state)+1; s(id)=&state; 
          if &state=0 then nt+(-1); 
          end; 
     if &state=&nstates+1 then do; 
          if first.&state then do i=1 to &nstates; 
               ott=0; 
               ot(i)=0; 
               end; 
          prior=s(id); 
          ot(prior)+1; 
          ott+1; 

/* Calculate covariance matrix */

          if last.&state then do; 
                  do i=1 to &nstates; 
                      do j= 1 to &nstates; 
                       if i=j then v(i,i)+r(i)*(nt-r(i))*ott*(nt-ott)/(nt**2*(nt-1));
                       else v(i,j)+(-r(i)*r(j)*ott*(nt-ott)/(nt**2*(nt-1))); 
                       end; 
                  end; 
                      do i=1 to &nstates; 
                         e(i)+r(i)/nt*ott; 
                         r(i)+(-ot(i)); 
                         o(i) + ot(i);
                                   d(i)+ (o(i)-e(i)); 
                                  end; 
                    nt+(-ott); 
                    output; 
               end;
                end; 
data ddd; 
     set dd end=last; 
     array e(*) e1-e&nstates; 
     array o(*) o1-o&nstates; if last; 
     df=&nstates-1; 
     do &state=1 to &nstates; 
          expected=e(&state); observed=o(&state);                     
              ratio=observed/expected; 
          diff=observed-expected; 
          output; 
          end; 
data cov; 
     set ddd;
     keep v1-v&nstat2; 
     %let slist=; 
     %do i=1 %to &nstates; 
          data _null_ ; 
               call symput('s', put(&i,&format)); 
          run; 
          %let slist= &slist &s ; 
          %end; 
data exp ; 
     set ddd;
     keep e1-e&nstates; 
data obs; 
     set ddd; 
     keep o1-o&nstates; 

/* Use IML to calculate test statistic and print results */

proc iml; 
     use cov; 
     read into covmat; 
     cov=shape(covmat,&nstates); 
     statlist={&slist};
     tranlist=statlist'; 
     use exp; 
     read into expmat; 
     print 'Covariance Matrix'; 
     print cov[r=tranlist c=statlist format=10.4]; 
     v=diag(cov); 
     use obs; 
     read into obsmat; 
     rmat=obsmat#expmat##(-1); 
     r=rmat';
     difmat=obsmat-expmat;    
     d=difmat';
     obs=obsmat'; exp=expmat'; 
     z=difmat*inv(v##(.5)); 
     p=(1-probnorm(abs(z)))'; p=2*p; 
     state =obs||exp||r||d||p;
     top={'Observed' 'Expected' 'O/E' 'O-E' 'P-Value'}; 
     print 'Summary of Results for Each State'; 
     print state[r=tranlist c=top format=12.4]; 
     cov=cov[1:&nm1,1:&nm1]; 
     expmat =expmat[1,1:&nm1]; 
     obsmat=obsmat[1,1:&nm1]; 
     chisq=(expmat-obsmat)*inv(cov)*(expmat-obsmat)'; 
     print 'Test of Homogeneity of States'; 
     p=1-probchi(chisq,&nm1); 
     df=&nm1; 
     print chisq [format=11.4] df [format=5.0] p [format=8.4] ; 
%mend mantbyar; 


          


**************************************************
/*The following macro code appears on page 183.  */
**************************************************

          
  The PARAMEST Macro 

%macro paramest(dataset = _last_, t1=t1, t2=t2, covs=none,
                          method = 2,
                hazard =   , survival =  ,init= , alpha = 0.05,
                lower = {. . . . . . . . . .}, 
                upper = {. . . . . . . . . .},
                pred = x, censval = {0});

/*Remove Observations with Time Values That Are Not Permissable*/

data checked; 
     set &dataset; 
     if &method=1 and ((&t1 = . and &t2 = .) or &t1 > &t2 
              or . < &t1 < 0 or . < &t2 < 0) then delete;
     if &method=2 and (&t1 < 0 or &t2 = . ) then delete;

/* to get rid of previous datasets */

data survival; 
     set _null_;
data x; 
     set _null_;

proc iml;
b = &upper;
     a = &lower;
     con = a//b;
     use checked;
     %if &covs = none %then
            %str(read all var {&t1 &t2} into vars;);
     %else %str(read all var {&t1 &t2 &covs} into vars;);
     nvars = ncol(vars);
     ncovs = nvars - 2;
     nobs = nrow(vars);
     times = vars[, 1:2];

/*  convert to method 1 for time and censoring data */

if &method = 2 then do i=1 to nobs;
   if sum((times[i,2] = &censval)) >0 then times[i,2] = .;
   else times[i,2] = times[i,1];
   end;

/* module to calculate log likelihood  */

     start loglik(theta) global (times,vars,nobs,nvars);
     LL=0;
     do i=1 to nobs;
   /*  get covariates  */

          if nvars > 2 then x = vars[i,3:nvars];

   /*  right censored time */

          if (times[i,1] ^= .) & (times[i,2] = . ) then do;
          t = times[i,1];
          LL = LL + log(&survival);
          end;

   /* left censored time */

     if (times[i,1] = .) & (times[i,2] ^= .) then do;
          t = times[i,2];
          LL = LL + log(1 - (&survival));
          end;

   /* interval censored time */

     if (times[i,1] ^= .) & (times[i,2] > times[i,1]) then do;
          t = times[i,1];
          temp = &survival ;
          t = times[i,2];
          y = temp - (&survival) ;
          LL = LL + log(y);
          end;

   /* uncensored time */

     if times[i,1] = times[i,2] then do;
                t=times[i,1];
                LL = LL + log(&hazard) + log(&survival);
                end;
     end;
     return(LL);
     finish loglik;
     theta0= &init`;
     nparams = ncol(&init);
     con = con[, 1:nparams];
     optn = {1 0};

/*  call optimization function */

     call nlptr(rc,thetares,"loglik",theta0,optn,con,,,,,);
     thetaopt=thetares`;
     maxll=loglik(thetaopt);

/*  rc is return code  - negative means failed to converge  */

     if rc < 0 then
     print "Iteration failed to converge.  Estimates are    unreliable.";
     if rc > 0 then do;
          print "Successfull Convergence";
          print maxll " Is Maximum Loglikelihood.";
          end;

/* module to calculate first derivs (deriv) and second derivs (h)*/

     call nlpfdd(LL,deriv,h,"loglik", thetaopt);

/* get covariance matrix and standard errors of estimates */

     cov = -inv(h);
     setheta=sqrt(vecdiag(cov));
     theta=thetaopt;
     use &pred;
     read all var _all_ into values;
     n = nrow(values);
     survival = j(1,n,0);
     sesurv = j(1,n,0);
     covplus1 = ncovs + 1;

/* calculate survival function for t and covariates in pred
dataset, as well as statndard error using delta method */

     do i = 1 to n;
          if ncovs > 0 then x = values[i,2:covplus1];
          t = values[i,1];
          start surv(theta) global (i, t, x);
          surv = &survival;
          return(surv);
          finish surv;
          call nlpfdd(s,deriv,hess,"surv", theta);
          survival[i] = s;
          sesurv[i] = sqrt(deriv*cov*deriv`);
          end;
     survival = survival`;
     sesurv = sesurv`;
     create thetas from theta[colname = 'theta'];
     append from theta;
     create setheta from setheta[colname = 'stderr'];
     append from setheta;
     create cov from cov;
     append from cov;
     create survival from survival[colname = 'survival'];
     append from survival;
     create sesurv from sesurv[colname = 'stderr'];
     append from sesurv;
data thetas; 
     merge thetas setheta;
     c = probit(1 - &alpha/2);

/*  (1 - alpha)100% CI */

     lower = theta - stderr*c;
     upper = theta + stderr*c;
proc print data = thetas; 
     var theta stderr lower upper;
     title 'Parameter Estimates';
run;
proc means noprint n data = cov;
    var col1;
    output out = out n = nparams;
run;
data; 
     set out;
     call symput('n', nparams);
run;
                              data names;
%do i = 1 %to &n;
     name = "theta&i";
     output;
     %end;
run;

data cov; 
merge names cov;
proc print data= cov noobs label ;
%do i = 1 %to &n;
     label col&i = "theta&i";
     %end;
     label name = 'Cov';
     title 'Estimated Covariance Matrix';
run;

/* merge survival estimates and stderrors with pred dataset */

data table; 
     merge &pred survival sesurv ;
proc print data = table noobs;
     title 'Estimated Survival Probabilities';
run;
%mend;


**************************************************
/*The following macro code appears on page 150.  */
**************************************************
 
  The  PHPLOT Macro

%macro phplot(data =     , ci=no, yvar=survival, 
               ylabel=Pct Survival, byvar= none,
               xvar=time,xlabel=Time,combine=no,
               title='Proportional Hazards Survival Curve',
               lcl=lcl, ucl = ucl );

/* Symbol statements for up to 4 curves on one graph */

%if &combine=yes %then %do;
     %let ci=no;
     symbol1 l=1  v=none  i=stepjl w=5;
     symbol2 l=3 v=none i=stepjl w=5;
     symbol3 l=5 v=none i=stepjl w=5;
     symbol4 l=33 v=none i=stepjl w=5;
     %end;

/* Symbol Statements for separate graphs */

%if &combine=no %then %do;
     symbol1 l=1  v= none i=stepjl w=5;
     symbol2 l=3 v=none i=stepjl w=5;
     symbol3 l=3 v=none i=stepjl w=5;
     %end;

%if &byvar=none %then goptions cby=white;;
data; 
     set &data; 
     survival=&yvar*100;
     lcl=100*&lcl;
     ucl=100*&ucl;
     y=survival; 
     curve=1; 
     output;
     y=ucl; 
     curve=2;
     %if &ci=yes %then output;;
     y=lcl; 
     curve=3;
     %if &ci=yes %then output;;
proc sort; 
     by &byvar curve &xvar;
run;
proc format;
value curve 1='PH curve' 
              2='UCL' 
              3='LCL';
axis1 width=5 minor=none label=(h=2 f=swiss a=90 j=center           
   "&ylabel")value=(h=1.5 f=swiss) order=(0 to 100 by 10);
axis2 width=5 label=(h=2 f=swiss  "&xlabel") value=(h=1.5           
    f=swiss);
%if &combine=no %then legend1 label=(f=swiss h=1.5  'Curve')
                              value=(f=swiss h=1.5 j=l 
                              'PH Curve' "UCL" "LCL");;
legend2 label=(f=swiss h=1.5) value=(f=swiss h=1.5 j=l);

/* PROC GPLOT for separate graphs */

%if &combine=no %then %do;
     proc gplot;
        plot y*&xvar= curve /
        legend=legend1
        vaxis=axis1 haxis=axis2
        %if &ci=no %then nolegend;;
        ;
        by &byvar;
        format curve curve.;
        %end;

/* PROC GPLOT for combined graphs */

%if &combine=yes %then %do;
     proc gplot;
        plot y*&xvar=&byvar/ legend=legend2
        vaxis=axis1 haxis=axis2;
        %end;
title &title;
run;
%mend phplot;


**************************************************
/*The following macro code appears on page 151.  */
/*It is an improvement of a macro of the same    */
/*that appears in the first edition of this book.*/
**************************************************

  The PHPOW Macro

%macro phpow(t = , tau = , alpha = .05, n = ., power = ., var = ,   delta = , s0 = );

/*This is a SAS macro for calculating power and sample size. It is based on Hsieh and Lavori (2000), Controlled Clinical Trials, 21: 552-560*/

proc iml;
file print;
title 'Power and Sample Size Results';

 /*The inner integrand is calculated*/

   start integrand(time) global(yv,delta,var);
      pi = 4*atan(1);
      part1 = 1/sqrt(2*pi*var)*exp(-yv**2/(2*var));
         part2 = 1 - (&s0)**(delta**yv);        
       p = part1*part2;  
         return(p);
   finish;

 /*The inner integral is calculated*/

   start marginal(v) global(yv,t, tau );
   tt = t;
   ttau = tau;
   upper = tt + ttau;
      interval = ttau||upper;
        yv = v;
        call quad(pm,"integrand",interval); 
        return(pm);
   finish;

 /*The outer integral and probability of death are calculated*/

start outer(tt,ttau,  svar, ddelta) global( t, tau, var,                                                                                         delta );
      t = tt;
      tau = ttau;
        var = svar;
        delta = ddelta;
      interval= .M ||.P;
      call quad(per,"MARGINAL",interval); 
        prob_d = per/t;
      return(prob_d);
   finish;
   prob_d =  outer(&t, &tau,  &var, &delta);
   
 /* Power is calculated if it is missing */

   %if &power = . %then %do;
   deaths = prob_d*&n;
   zpower = sqrt(&var)*abs(log(&delta))*sqrt(deaths)- 
   probit(1 - &alpha/2);
   power_calculated = round(probnorm(zpower), .1);
   sample_size = &n;
   %end;

 /* Sample size is calculated if it is missing */

   %else %do;
   zpower = probit(&power);
   deaths = 
   (zpower+probit(1-&alpha/2))**2/(abs(log(&delta)))**2/&var;
   sample_size_calculated = round(deaths/prob_d, 1);
   power = &power;
   %end;

 /*Output results*/

     Alpha = &alpha;
     hazard_ratio = &delta;
     accrual_time = &t;
     followup_time = &tau;
     covariate_variance = &var;
     baseline_survival = ?&s0?;
     put 'Alpha   ='alpha;
     put;
     put 'Hazard Ratio   ='hazard_ratio;
     put;
     put 'Accrual Time   ='accrual_time;
     put;
     put 'Followup Time   ='followup_time;
     put;
     put 'Covariate Variance   ='covariate_variance;
     put;
     put Baseline Survival = baseline_survival;
     put;  
   %if &power=. %then %do;
     put 'Sample Size   =' sample_size;
     put;
     put 'Power(Calculated)   ='power_calculated;
     put;
    %end;
   %else %do;
    put 'Power   ='power;
    put;
    put 'Sample Size (Calculated)   =' sample_size_calculated;
   %end;
   run;
 %mend;


******************************************************
/*The following macro code appears on page 103.       */
******************************************************
          
  The SURVPOW Macro

%macro survpow(s1=  , s2=    , nsub=365, actime= ,futime=  ,
rate=      ,p=.5, loss1=0, loss2=0, w=1, siglevel=.05) ;

/* Find number of points in data set for group 1 and convert to       vectors */

data _null_; 
        set &s1;
        i=_n_;
        call symput('counta',left(i));
run;
data y; 
        set &s1; 
        retain sa1-sa&counta ta1-ta&counta ;
        array surv{*} sa1-sa&counta;
        array ttime{*} ta1-ta&counta;
        t=t*&nsub;
        all=1;
        i=_n_;
        surv{i}=s; 
        ttime{i}=t; 
        output;
        proc sort; 
        by all;
data y; 
        set y; 
        by all; 
        if last.all;
        keep  all ta1-ta&counta sa1-sa&counta;
/*  Find number of points in data set for group 2 and convert to       vector */
data _null_; 
        set &s2;
        i=_n_;
        call symput('countb', left(i));
run;
data yy; 
        set &s2; 
        retain sb1-sb&countb tb1-tb&countb;
        array surv{*} sb1-sb&countb;
        array ttime{*} tb1-tb&countb;
        t=t*&nsub;
        all=1;
        i=_n_;
        surv{i}=s; ttime{i}=t; 
        output;
proc sort; 
        by all;
data yy; 
        set yy; 
        by all; 
        if last.all;
        keep  all tb1-tb&countb sb1-sb&countb;
/*  Find hazards at each partition point  */
data z; 
        all=1;
        do t=0 to (&actime+&futime)*&nsub - 1 ; 
                output; 
                end;
proc sort; 
        by all;
data merged; 
        merge z y yy; 
        by all;
        if trim("&counta") = "1" then lam1=-log(sa1)/ta1;
        %do i=1 %to &counta -1 ;
        %let j = %eval(&i+1);
        if ta&i le t lt ta&j then lam1 =
        (sa&i-sa&j)/((sa&j-sa&i)*(t-ta&i)+sa&i*(ta&j-ta&i));
        %end;
        if trim("&counta") = "2" and ta2 = . then do;
        lambda = -log((sa1-sa2)/(1-sa2))/ta1;
        lam1 = lambda*(1-sa2)*exp(-lambda*t)/(sa2+(1-sa2)*exp(-lambda*t));
        end;
        if trim("&countb") = "1" then lam2=-log(sb1)/tb1;
        %do i=1 %to &countb -1 ;
                %let j = %eval(&i+1);
                        if tb&i le t lt tb&j then lam2 =
                (sb&i-sb&j)/((sb&j-sb&i)*(t-tb&i)+sb&i*(tb&j-tb&i));
                %end;
                if trim("&countb") = "2" and tb2 = . then do;
        lambda = -log((sb1-sb2)/(1-sb2))/tb1;
        lam2 = lambda*(1-sb2)*exp(-lambda*t)/(sb2+(1-sb2)*exp(-lambda*t));
        end;

/*  Calculate ratio of hazards and number at risk at each partition point and 
                accumulate needed sums */

data next; 
        set merged;  
        by all;
        retain n1 n2 n;
        if _n_ = 1 then do;
        n1=&rate*&p*&actime;
        n2=&rate*(1-&p)*&actime;
        n=n1+n2;
        end;
        tau=&futime*&nsub;
        psi1=&loss1/&nsub;
        psi2=&loss2/&nsub;
        phi=n1/n2;
        theta=lam1/lam2;
        d1=lam1*n1;
        d2=lam2*n2;
        d=d1+d2;
        c1=psi1*n1;
        c2=psi2*n2;
        if t > tau then do;
        c1=c1+n1/(&actime*&nsub+tau-_n_+1);
        c2=c2+n2/(&actime*&nsub+tau-_n_+1);
        end;
        n1=n1-d1-c1;
        n2=n2-d2-c2;
        sum1+(d*&w*(phi*theta/(1+phi*theta) - phi/(1+phi)));
        sum2+d*&w**2*phi/(1+phi)**2;
        n=n1+n2;

/*  Calculate e and power */

        if last.all then do;
        e=sum1/sqrt(sum2);
        z=-probit(&siglevel/2);
        power = 1 - probnorm(z-e) +  probnorm(-z-e);
        ac_time=symget('actime');
        fu_time=symget('futime');
        ac_rate=symget('rate');
        n=ac_rate*ac_time;
        alpha = symget('siglevel');
        prop=symget('p');
        los_rat1=symget('loss1');
        los_rat2=symget('loss2');
        weights = symget('w');
        output;
        end;
        label ac_time='Accrual Time';
        label power='Power';
        label fu_time = 'Followup Time';
        label ac_rate = 'Accrual Rate';
        label n = 'N';
        label prop = 'Prop in Grp 1';
        label los_rat1 = 'Loss Rate 1';
        label los_rat2 = 'Loss Rate 2';
        label weights = 'Weights';

/*  Print results */

proc print l noobs;
        var ac_time fu_time ac_rate n alpha prop los_rat1 los_rat2      weights power;

/*
data results; set results next; 
*/
        run;
%mend;



******************************************************
/*The following macro code appears on page 107.       */
******************************************************


%macro condpow(dataset=_last_,lam1=,lam2=, atime=,arate=,follow=, grp1=.5, pi1=, pi2=,stat=Log-Rank,alpha=.05, n=);
options printmsglist=0 source=0 notes=0;  **to avoid excessive log;
ods listing close;   **to avoid excessive output;
**creating 'all' dataset for record the output of lifetest;
data all;
probchisq= .;
run;
**begin the loop for n replications of lifetest;
%do i=1 %to &n;

**bring the existing dataset; 
%if "&dataset" ne "none" %then %do;
data b;
set &dataset;
cure1=(&pi1/(&pi1+(1-&pi1)*exp(-&lam1*time)));
cure2=(&pi2/(&pi2+(1-&pi2)*exp(-&lam2*time)));
rand1=ranuni(0);
rand2=ranuni(0);
if cens=0 and group=1 and rand1 < cure1 then addtime=1000000;
  else if cens=0 and group=1 and rand1 >=cure1 then addtime= ranexp(0)/&lam1;
  else if cens=0 and group=2 and rand2 < cure2 then addtime= 1000000;
  else if cens=0 and group=2 and rand2 >=cure2 then addtime= ranexp(0)/&lam2;
  else addtime=0;
if cens=0 and addtime >= (&atime+&follow) then
do;
   survtime= time + (&atime + &follow);
   endcens=0;
end;
  else if cens=0 and addtime < (&atime +&follow) then
   do;
      survtime =time + addtime ;
      endcens=1;
   end;
  else if cens=1 then
   do;
      survtime = time;
      endcens= 1;
   end;
  else if cens=-1 then
   do;
      survtime = time;
      endcens= 0;
   end;
drop cure1 cure2 rand1 rand2;
%end;

**allow the power estimate without existing data set;
data c;
do j=1 to &arate*&atime;
   accurday=ranuni(0)*&atime;
   group=(ranuni(0)>&grp1) + 1;
   piran1=ranuni(0);
   piran2=ranuni(0);
   if group=1 and piran1 <&pi1 then addtime=1000000;
   else if group=1 and piran1 >=&pi1 then addtime=ranexp(0)/&lam1;
   else if group=2 and piran2 <&pi2 then addtime=1000000;
   else if group=2 and piran2 >=&pi2 then addtime=ranexp(0)/&lam2;
   if addtime >=(accurday + &follow) then
     do;
       survtime = accurday + &follow;
       endcens=0;
     end;
   else if addtime <(accurday +&follow) then
     do;
       survtime = addtime;                      
       endcens=1;                              
     end;
output;
end;
run;

**combine the new dataset b and c together for lifetest;
%if "&dataset" ne "none" %then %do;
data d (keep=survtime endcens group);
set b c;
run;
%end;
%else %if "&dataset" = "none" %then %do;
data d (keep=survtime endcens group);
set c;
%end;
run;

**Do lifetest 1 to i times and write the output to the out&i files;
ods output homtests=out&i;
proc lifetest data=d notable;
time survtime*endcens(0);
strata group;
run;

data out&i;
set out&i;
if test = "&stat";
run;
data all; set all out&i; run;
%end;

**calculating the power as the # of reject Ho vs. the # of total lifetests; 
data all;
set all;
if probchisq ne .;
if probchisq < &alpha then reject+1;
power=reject/(_N_ - 1);
n=_N_ -1;
if n =&n then do;     
***put results into log;
put;
put;
put "Results for Conditional Power Simulation for &stat test" ;
put;
put "Existing Dataset = &dataset   Significance Level =  &alpha";
put 'After ' n 'Replications, Estimated Power = ' Power;
put "Group1 percentage = &grp1  Group1 lamda = &lam1  Group1 cure rate = &pi1";
put "Group2 lamda = &lam2 Group2 cure rate = &pi2";
put "accrual time = &atime accrual rate = &arate follow up time = &follow" ;
end;
run;
%mend condpow;

******************************************************
/*The following macro code appears on page 101.      */
******************************************************

%macro perm_gen(indata = &syslast, time =  , cens = ,  n1 = , n2 = , group =);
%let n = %eval(&n1 + &n2);
%let ncomb = %sysfunc(comb(&n, &n1));
ods output Plan=Combinations; 
   proc plan ;
      factors replicate= &ncomb ordered
              r= &n1 of &n comb;
   run;
   
data reps; set combinations; keep replicate  i &group ;
array r{*} r1 - r&n1;
array grp{*} group1 - group&n;
do i = 1 to &n; 
grp{i} = 2;
do j = 1 to &n1;
if r{j} = i then grp{i} = 1;
end;
&group = grp{i};
output;
end;
run;
data temp; set _null_;
%do i = 1 %to &ncomb;
data temp; set temp &indata; keep &time &cens;
%end;

data reps; merge reps temp;
data temp2; set &indata; 
replicate = 0;
data reps; set temp2 reps;

run; 
%mend;

******************************************************
/*The following macro code appears on page 100.      */
******************************************************


%macro rand_gen(
  indata= ,
  time =  ,
  cens =   ,
  group =   ,
  numreps=1000,
  seed=0);

%let indata=&indata;  /* forces evaluation of &INDATA at the right time */

  /* Get size of input dataset into macro variable &NUMRECS */

  proc sql noprint;
    select count(*) into :numrecs from &INDATA;
    quit;

  /* Generate &NUMREPS random numbers for each record, so records can be randomly
     sorted within each replicate                                                  */

  data __temp_1;
    retain seed &SEED ;  drop seed;
    set &INDATA;
    do replicate = 1 to &NUMREPS;
      call ranuni(seed,rand_dep);
      output;
      end;
    run;

  proc sort data=__temp_1;  by replicate rand_dep;  run;

  /* Now append the new re-orderings to the original dataset.  Label the original
     as Replicate=0, so the %TEST macro will be able to pick out the correct
     p-value.  Then use the ordering of __counter within each replicate to
     write the original values of &time and &cens, thus creating a randomization of these 
     variables in every replicate.                                        */

  data reps ;
    array timelist{ &NUMRECS } _temporary_ ;
        array censlist{ &NUMRECS } _temporary_;
    set &INDATA(in=in_orig) __temp_1(drop=rand_dep);
    if in_orig then do;
      replicate=0;
      timelist{_n_} = &time ;
          censlist{_n_} = &cens ;
      end;
    else do ;
        &time = timelist{ 1+ mod(_n_,&NUMRECS) };
        &cens = censlist{ 1+mod(_n_, &NUMRECS) };
        end;
    run;

%mend rand_gen;



******************************************************
/*The following macro code appears on page 102.      */
******************************************************

%macro test(time =   , cens =  , censval =   , test = , group = , type = );
proc lifetest data = reps outtest = out noprint; time &time*&cens(&censval); test &group; 
     by replicate;
         run;
         data out2 ; set out;  
         if "&test" = 'logrank' then type = 'LOG RANK';
         if "&test" = 'gehan' then type = 'WILCOXON';
         if _TYPE_ = type and _NAME_ = "&time" then output;
data out3; set out2 end = last; retain chisq;
         if replicate = 0 then chisq = &time;
         else do;
         if &time + .00000001  ge chisq then num+1;
         end;
         if last then do; 
                pvalue = num/(_n_ - 1);
                stderr = sqrt((pvalue*(1-pvalue))/(_n_ - 1));
                lowbound = max(pvalue - 1.96*stderr, 0);
                upperbound = min(pvalue + 1.96*stderr, 1); 
                n = _n_ - 1;
                output;
                end;
%if &type = rand %then %do;
         label n = 'Number of Replicates';
         label pvalue = "Randomization &test Test Estimated P-Value (2-sided)";
         label lowbound = 'Lower 95 Pct Bound';
     label upperbound = 'Upper 95 Pct Bound';
         %end;
%else %do;
label pvalue = "Permutation &test Test P-Value (2-sided)";
%end;
%if &type = rand %then %do;
        proc print noobs l; var pvalue stderr lowbound upperbound n;
        %end;
%else %do;
proc print noobs l ; var pvalue; 
%end;
run;
data; set out2; if replicate = 0;
p = 1 - probchi(&time, 1); 
label p = 'Asymptotic P-Value';
proc print noobs l ; var p; run;
%mend;


******************************************************
/*The following macro code appears on page 183.      */
******************************************************



%macro paramest(dataset = _last_, vars = t1 t2, method = 2,
                hazard =   , survival =  ,init= , alpha = 0.05,
                lower = {. . . . . . . . . .}, 
                upper = {. . . . . . . . . .},
                pred = x, censval = {0});

/*Remove Observations with Time Values That Are Not Permissable*/

data checked; 
set &dataset; 
if &method=1 and ((&t1 = . and &t2 = .) or &t1 > &t2 
     or . < &t1 < 0 or . < &t2 < 0) then delete;
if &method=2 and (&t1 < 0 or &t2 = . ) then delete;

/* to get rid of previous datasets */

data survival; 
set _null_;
data x; 
set _null_;

proc iml;
b = &upper;
a = &lower;
con = a//b;
use checked;
read all var {&vars} into vars;
nvars = ncol(vars);
ncovs = nvars - 2;
nobs = nrow(vars);
times = vars[, 1:2];

/*  convert to method 1 for time and censoring data */

if &method = 1 then do i=1 to nobs;
   if sum((times[i,2] = &censval)) >0 then times[i,2] = .;
   else times[i,2] = times[i,1];
   end;

/* module to calculate log likelihood  */

start loglik(theta) global (times,vars,nobs,nvars);
LL=0;
do i=1 to nobs;
 
   /*  get covariates  */

                if nvars > 2 then x = vars[i,3:nvars];

   /*  right censored time */

                if (times[i,1] ^= .) & (times[i,2] = . ) then do;
        t = times[i,1];
        LL = LL + log(&survival);
        end;

   /* left censored time */

     if (times[i,1] = .) & (times[i,2] ^= .) then do;
        t = times[i,2];
        LL = LL + log(1 - &survival);
        end;

   /* interval censored time */

        if (times[i,1] ^= .) & (times[i,2] > times[i,1]) then do;
        t = times[i,1];
        temp = &survival ;
        t = times[i,2];
        y = temp - &survival ;
        LL = LL + log(y);
        end;

   /* uncensored time */

        if times[i,1] = times[i,2] then do;
        t=times[i,1];
        LL = LL + log(&hazard) + log(&survival);
        end;
        end;
return(LL);
finish loglik;
theta0= &init`;
nparams = ncol(&init);
con = con[, 1:nparams];
optn = {1 0};

/*  call optimization function */

call nlptr(rc,thetares,"loglik",theta0,optn,con,,,,,);
thetaopt=thetares`;
maxll=loglik(thetaopt);

 
/*  rc is return code  - negative means failed to converge  */

if rc < 0 then
print "Iteration failed to converge.  Estimates are     unreliable.";
if rc > 0 then do;
                print "Successfull Convergence";
                print maxll " Is Maximum Loglikelihood.";
                end;

/*  module to calculate first derivs (deriv) and second derivs (h) */

call nlpfdd(LL,deriv,h,"loglik", thetaopt);

/* get covariance matrix and standard errors of estimates */

cov = -inv(h);
setheta=sqrt(vecdiag(cov));
theta=thetaopt;
use &pred;
read all var _all_ into values;
n = nrow(values);
survival = j(1,n,0);
sesurv = j(1,n,0);
covplus1 = ncovs + 1;

/* calculate survival function for t and covariates in pred dataset, as well as statndard error using delta method */

do i = 1 to n;
                if ncovs > 0 then x = values[i,2:covplus1];
                t = values[i,1];
                start surv(theta) global (i, t, x);
                surv = &survival;
                return(surv);
                finish surv;
                call nlpfdd(s,deriv,hess,"surv", theta);
                survival[i] = s;
                sesurv[i] = sqrt(deriv*cov*deriv`);
                end;
survival = survival`;
sesurv = sesurv`;
create thetas from theta[colname = 'theta'];
append from theta;
create setheta from setheta[colname = 'stderr'];
append from setheta;
create cov from cov;
 
append from cov;
create survival from survival[colname = 'survival'];
append from survival;
create sesurv from sesurv[colname = 'stderr'];
append from sesurv;
data thetas; 
merge thetas setheta;
c = probit(1 - &alpha/2);

/*  (1 - alpha)100% CI */

lower = theta - stderr*c;
upper = theta + stderr*c;
proc print data = thetas; 
var theta stderr lower upper;
title 'Parameter Estimates';
run;
proc means noprint n data = cov;
    var col1;
    output out = out n = nparams;
run;
data; 
set out;
call symput('n', nparams);
run;
data names;
%do i = 1 %to &n;
name = "theta&i";
output;
%end;
run;
data cov; 
merge names cov;
proc print data= cov noobs label ;
%do i = 1 %to &n;
label col&i = "theta&i";
%end;
label name = 'Cov';
title 'Estimated Covariance Matrix';
run;

/* merge survival estimates and stderrors with pred dataset */

data table; 
merge &pred survival sesurv ;
proc print data = table noobs;
title 'Estimated Survival Probabilities';
run;
 
%mend;


 The Macro Chekdist

%macro chekdist(data = _last_ , time = , cens = , censvals = 0 ,
model = , pi = ) ;
symbol1 v = plus c = black;
symbol2 v = dot c = black;
symbol3 v = circle c = black;
symbol4 v = diamond c = black;
symbol5 v = star c = black;
%if "&model" = "exp" %then %do;
   proc lifetest data = &data noprint plots = (ls)  ;
   time &time*&cens(&censvals);
   %end;
%if "&model" = "weibull" %then %do;
   proc lifetest data = &data noprint plots = (lls) ;
   time &time*&cens(&censvals);
   %end;
%if "&model" ne "weibull" and "&model" ne "exp" %then %do;
   proc lifetest data = &data noprint outs = out;
   time &time*&cens(&censvals);
   axis1 label = (a = 90);
   %end;
%if "&model" = "lognorm" %then %do;
   data; set out;
   x = log(&time);
   y = -probit(survival);
   label x = 'log(t)';
   label y = '-probit(survival)';
   proc gplot;
   plot y*x /vaxis = axis1;
   %end;
%if "&model" = "expcure" %then %do;
   data; set out;
   do pi = &pi ;
      y = log(survival - pi);   
      output;
      end;
   label y = 'log[(survival-pi)]';
   %end;
%if "&model" = "gomp" %then %do;
   data; set out;
   do pi = &pi;
      y=log(1-log(survival)/log(pi));
      output;
      end;
   label y = 'log[1-log(survival)/log(pi)]';
   %end;
%if "&model" = "gomp" or "&model" = "expcure" %then %do;
   proc gplot;
   plot y*&time = pi /vaxis = axis1;
   %end;
run;
%mend;








