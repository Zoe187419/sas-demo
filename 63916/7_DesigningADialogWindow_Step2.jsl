// JSL Companion: Applications of the JMP Scripting Language 
// Title: 	7_DesigningADialogWindow_Step2.jsl 
// Version: Windows JMP 9.0.3
// Purpose: Demonstrates DisplayBox objects used to create interactive controls 
//     in a dialog window(Step 2).


//-- You can select current data table columns 
//-- You will not be able to cast these columns into roles until the 5 roles 
//-- button boxes have scripts.
//dt = Open( "$SAMPLE_DATA/Big Class.jmp" );

//initialize
_win_info = "Distribution of Y for each X.  Modeling types "
      ||"determine analysis." ;
_yvarList={}; _xvarList={}; _blkList={}; _wtList={};
_freqList={}; _byList={};

//--Cast into Roles Controls    	
_inputCol = ColListBox(ALL, width(100), nlines(9)); //all current data table columns

_yvar_clb = ColList Box(width(100), nlines(6), min items(1) );
_xvar_clb = ColList Box(width(100), nlines(6), min items(1) );
_blk_clb =  ColList Box(width(100), nlines(1) );
_wt_clb =   ColList Box(width(100), nlines(1), max items(1), numeric );
_freq_clb = ColList Box(width(100), nlines(1),max items(1), Numeric);
_by_clb =   ColList Box(width(100), nlines(2));

_yvar_bb = Button Box( "Y, Response",  );
_xvar_bb = Button Box( "X, Factor",  );
_blk_bb  = Button Box( "Block",  );
_wt_bb   = Button Box( "Weight",  );
_freq_bb = Button Box( "Frequency",  );
_by_bb =   Button Box( "By",  );

//--Action Controls
_ok_bb   = Button Box("OK",  );
_cncl_bb = Button Box("Cancel",  );
_rmv_bb = Button Box("Remove", );  
_redo_bb = Button Box("Recall", Enable(0) );  
_redo_bb << Set Tip("Not implemented yet");
_Help_bb = Button Box("Help",  );


//-- Window 
New Window("Fit Y by X - Contextual - Step 2",
VListBox(
  TextBox(_win_info),
  SpacerBox(Size(0,5)),
  HListBox(
	PanelBox("Select Columns", _inputCol ),

	Panel Box("Cast Columns into Roles",
		LineUpBox(2,
			_yvar_bb, _yvar_clb,
			_xvar_bb, _xvar_clb,
			_blk_bb,  _blk_clb,
			_wt_bb,   _wt_clb,
			_freq_bb, _freq_clb,
			_by_bb,   _by_clb
		)		
	),
	
	PanelBox("Action",
	  vListBox(_ok_bb,
	    _cncl_bb,
	    SpacerBox(Size(0,20)),
	    _rmv_bb,
	    _redo_bb,
	    _Help_bb  
	  )	
	  
	)	
  ) // end HListBox
 )  //end VListBox
);  //end New Window


/*Notes:
  A good program would use a global variable to define the default width of the
     ::col_def_width = 100;
     ColList Box( width( ::col_def_width )) , etc.
  Brute force (explicit) is more readable for novice scripters.  However, once
  you understand the syntax and usage of the non-modal window with display 
  box obects there are many opportunities to make scripting dialogs more modular
  and extensible.
  For example, create a function to build a bank of ColListBox objects 
  used for casting columns into roles. Define this function's input argument as 
  a list or an associative array containing the characteristics of the ColListBox   
  object.

*/